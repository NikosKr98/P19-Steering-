
P19-STEERING.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00006254  0800010c  0800010c  0001010c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000a4  08006360  08006360  00016360  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08006404  08006404  00020068  2**0
                  CONTENTS
  4 .ARM          00000000  08006404  08006404  00020068  2**0
                  CONTENTS
  5 .preinit_array 00000000  08006404  08006404  00020068  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08006404  08006404  00016404  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08006408  08006408  00016408  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000068  20000000  0800640c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000147c  20000068  08006474  00020068  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200014e4  08006474  000214e4  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00020068  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00020091  2**0
                  CONTENTS, READONLY
 13 .debug_info   00011fb4  00000000  00000000  000200d4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00002bfe  00000000  00000000  00032088  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000fd8  00000000  00000000  00034c88  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000c56  00000000  00000000  00035c60  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00019ed5  00000000  00000000  000368b6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00013b29  00000000  00000000  0005078b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00093634  00000000  00000000  000642b4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00004944  00000000  00000000  000f78e8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000005d  00000000  00000000  000fc22c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	; (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	; (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	; (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	20000068 	.word	0x20000068
 8000128:	00000000 	.word	0x00000000
 800012c:	08006348 	.word	0x08006348

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	; (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	; (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	; (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	2000006c 	.word	0x2000006c
 8000148:	08006348 	.word	0x08006348

0800014c <__aeabi_drsub>:
 800014c:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000150:	e002      	b.n	8000158 <__adddf3>
 8000152:	bf00      	nop

08000154 <__aeabi_dsub>:
 8000154:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

08000158 <__adddf3>:
 8000158:	b530      	push	{r4, r5, lr}
 800015a:	ea4f 0441 	mov.w	r4, r1, lsl #1
 800015e:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000162:	ea94 0f05 	teq	r4, r5
 8000166:	bf08      	it	eq
 8000168:	ea90 0f02 	teqeq	r0, r2
 800016c:	bf1f      	itttt	ne
 800016e:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000172:	ea55 0c02 	orrsne.w	ip, r5, r2
 8000176:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800017a:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 800017e:	f000 80e2 	beq.w	8000346 <__adddf3+0x1ee>
 8000182:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8000186:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800018a:	bfb8      	it	lt
 800018c:	426d      	neglt	r5, r5
 800018e:	dd0c      	ble.n	80001aa <__adddf3+0x52>
 8000190:	442c      	add	r4, r5
 8000192:	ea80 0202 	eor.w	r2, r0, r2
 8000196:	ea81 0303 	eor.w	r3, r1, r3
 800019a:	ea82 0000 	eor.w	r0, r2, r0
 800019e:	ea83 0101 	eor.w	r1, r3, r1
 80001a2:	ea80 0202 	eor.w	r2, r0, r2
 80001a6:	ea81 0303 	eor.w	r3, r1, r3
 80001aa:	2d36      	cmp	r5, #54	; 0x36
 80001ac:	bf88      	it	hi
 80001ae:	bd30      	pophi	{r4, r5, pc}
 80001b0:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80001b4:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80001b8:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80001bc:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80001c0:	d002      	beq.n	80001c8 <__adddf3+0x70>
 80001c2:	4240      	negs	r0, r0
 80001c4:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80001c8:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 80001cc:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80001d0:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80001d4:	d002      	beq.n	80001dc <__adddf3+0x84>
 80001d6:	4252      	negs	r2, r2
 80001d8:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80001dc:	ea94 0f05 	teq	r4, r5
 80001e0:	f000 80a7 	beq.w	8000332 <__adddf3+0x1da>
 80001e4:	f1a4 0401 	sub.w	r4, r4, #1
 80001e8:	f1d5 0e20 	rsbs	lr, r5, #32
 80001ec:	db0d      	blt.n	800020a <__adddf3+0xb2>
 80001ee:	fa02 fc0e 	lsl.w	ip, r2, lr
 80001f2:	fa22 f205 	lsr.w	r2, r2, r5
 80001f6:	1880      	adds	r0, r0, r2
 80001f8:	f141 0100 	adc.w	r1, r1, #0
 80001fc:	fa03 f20e 	lsl.w	r2, r3, lr
 8000200:	1880      	adds	r0, r0, r2
 8000202:	fa43 f305 	asr.w	r3, r3, r5
 8000206:	4159      	adcs	r1, r3
 8000208:	e00e      	b.n	8000228 <__adddf3+0xd0>
 800020a:	f1a5 0520 	sub.w	r5, r5, #32
 800020e:	f10e 0e20 	add.w	lr, lr, #32
 8000212:	2a01      	cmp	r2, #1
 8000214:	fa03 fc0e 	lsl.w	ip, r3, lr
 8000218:	bf28      	it	cs
 800021a:	f04c 0c02 	orrcs.w	ip, ip, #2
 800021e:	fa43 f305 	asr.w	r3, r3, r5
 8000222:	18c0      	adds	r0, r0, r3
 8000224:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8000228:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800022c:	d507      	bpl.n	800023e <__adddf3+0xe6>
 800022e:	f04f 0e00 	mov.w	lr, #0
 8000232:	f1dc 0c00 	rsbs	ip, ip, #0
 8000236:	eb7e 0000 	sbcs.w	r0, lr, r0
 800023a:	eb6e 0101 	sbc.w	r1, lr, r1
 800023e:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000242:	d31b      	bcc.n	800027c <__adddf3+0x124>
 8000244:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 8000248:	d30c      	bcc.n	8000264 <__adddf3+0x10c>
 800024a:	0849      	lsrs	r1, r1, #1
 800024c:	ea5f 0030 	movs.w	r0, r0, rrx
 8000250:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000254:	f104 0401 	add.w	r4, r4, #1
 8000258:	ea4f 5244 	mov.w	r2, r4, lsl #21
 800025c:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000260:	f080 809a 	bcs.w	8000398 <__adddf3+0x240>
 8000264:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8000268:	bf08      	it	eq
 800026a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800026e:	f150 0000 	adcs.w	r0, r0, #0
 8000272:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000276:	ea41 0105 	orr.w	r1, r1, r5
 800027a:	bd30      	pop	{r4, r5, pc}
 800027c:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000280:	4140      	adcs	r0, r0
 8000282:	eb41 0101 	adc.w	r1, r1, r1
 8000286:	3c01      	subs	r4, #1
 8000288:	bf28      	it	cs
 800028a:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 800028e:	d2e9      	bcs.n	8000264 <__adddf3+0x10c>
 8000290:	f091 0f00 	teq	r1, #0
 8000294:	bf04      	itt	eq
 8000296:	4601      	moveq	r1, r0
 8000298:	2000      	moveq	r0, #0
 800029a:	fab1 f381 	clz	r3, r1
 800029e:	bf08      	it	eq
 80002a0:	3320      	addeq	r3, #32
 80002a2:	f1a3 030b 	sub.w	r3, r3, #11
 80002a6:	f1b3 0220 	subs.w	r2, r3, #32
 80002aa:	da0c      	bge.n	80002c6 <__adddf3+0x16e>
 80002ac:	320c      	adds	r2, #12
 80002ae:	dd08      	ble.n	80002c2 <__adddf3+0x16a>
 80002b0:	f102 0c14 	add.w	ip, r2, #20
 80002b4:	f1c2 020c 	rsb	r2, r2, #12
 80002b8:	fa01 f00c 	lsl.w	r0, r1, ip
 80002bc:	fa21 f102 	lsr.w	r1, r1, r2
 80002c0:	e00c      	b.n	80002dc <__adddf3+0x184>
 80002c2:	f102 0214 	add.w	r2, r2, #20
 80002c6:	bfd8      	it	le
 80002c8:	f1c2 0c20 	rsble	ip, r2, #32
 80002cc:	fa01 f102 	lsl.w	r1, r1, r2
 80002d0:	fa20 fc0c 	lsr.w	ip, r0, ip
 80002d4:	bfdc      	itt	le
 80002d6:	ea41 010c 	orrle.w	r1, r1, ip
 80002da:	4090      	lslle	r0, r2
 80002dc:	1ae4      	subs	r4, r4, r3
 80002de:	bfa2      	ittt	ge
 80002e0:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80002e4:	4329      	orrge	r1, r5
 80002e6:	bd30      	popge	{r4, r5, pc}
 80002e8:	ea6f 0404 	mvn.w	r4, r4
 80002ec:	3c1f      	subs	r4, #31
 80002ee:	da1c      	bge.n	800032a <__adddf3+0x1d2>
 80002f0:	340c      	adds	r4, #12
 80002f2:	dc0e      	bgt.n	8000312 <__adddf3+0x1ba>
 80002f4:	f104 0414 	add.w	r4, r4, #20
 80002f8:	f1c4 0220 	rsb	r2, r4, #32
 80002fc:	fa20 f004 	lsr.w	r0, r0, r4
 8000300:	fa01 f302 	lsl.w	r3, r1, r2
 8000304:	ea40 0003 	orr.w	r0, r0, r3
 8000308:	fa21 f304 	lsr.w	r3, r1, r4
 800030c:	ea45 0103 	orr.w	r1, r5, r3
 8000310:	bd30      	pop	{r4, r5, pc}
 8000312:	f1c4 040c 	rsb	r4, r4, #12
 8000316:	f1c4 0220 	rsb	r2, r4, #32
 800031a:	fa20 f002 	lsr.w	r0, r0, r2
 800031e:	fa01 f304 	lsl.w	r3, r1, r4
 8000322:	ea40 0003 	orr.w	r0, r0, r3
 8000326:	4629      	mov	r1, r5
 8000328:	bd30      	pop	{r4, r5, pc}
 800032a:	fa21 f004 	lsr.w	r0, r1, r4
 800032e:	4629      	mov	r1, r5
 8000330:	bd30      	pop	{r4, r5, pc}
 8000332:	f094 0f00 	teq	r4, #0
 8000336:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800033a:	bf06      	itte	eq
 800033c:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000340:	3401      	addeq	r4, #1
 8000342:	3d01      	subne	r5, #1
 8000344:	e74e      	b.n	80001e4 <__adddf3+0x8c>
 8000346:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800034a:	bf18      	it	ne
 800034c:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000350:	d029      	beq.n	80003a6 <__adddf3+0x24e>
 8000352:	ea94 0f05 	teq	r4, r5
 8000356:	bf08      	it	eq
 8000358:	ea90 0f02 	teqeq	r0, r2
 800035c:	d005      	beq.n	800036a <__adddf3+0x212>
 800035e:	ea54 0c00 	orrs.w	ip, r4, r0
 8000362:	bf04      	itt	eq
 8000364:	4619      	moveq	r1, r3
 8000366:	4610      	moveq	r0, r2
 8000368:	bd30      	pop	{r4, r5, pc}
 800036a:	ea91 0f03 	teq	r1, r3
 800036e:	bf1e      	ittt	ne
 8000370:	2100      	movne	r1, #0
 8000372:	2000      	movne	r0, #0
 8000374:	bd30      	popne	{r4, r5, pc}
 8000376:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800037a:	d105      	bne.n	8000388 <__adddf3+0x230>
 800037c:	0040      	lsls	r0, r0, #1
 800037e:	4149      	adcs	r1, r1
 8000380:	bf28      	it	cs
 8000382:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 8000386:	bd30      	pop	{r4, r5, pc}
 8000388:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 800038c:	bf3c      	itt	cc
 800038e:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8000392:	bd30      	popcc	{r4, r5, pc}
 8000394:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000398:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 800039c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80003a0:	f04f 0000 	mov.w	r0, #0
 80003a4:	bd30      	pop	{r4, r5, pc}
 80003a6:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80003aa:	bf1a      	itte	ne
 80003ac:	4619      	movne	r1, r3
 80003ae:	4610      	movne	r0, r2
 80003b0:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80003b4:	bf1c      	itt	ne
 80003b6:	460b      	movne	r3, r1
 80003b8:	4602      	movne	r2, r0
 80003ba:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80003be:	bf06      	itte	eq
 80003c0:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80003c4:	ea91 0f03 	teqeq	r1, r3
 80003c8:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 80003cc:	bd30      	pop	{r4, r5, pc}
 80003ce:	bf00      	nop

080003d0 <__aeabi_ui2d>:
 80003d0:	f090 0f00 	teq	r0, #0
 80003d4:	bf04      	itt	eq
 80003d6:	2100      	moveq	r1, #0
 80003d8:	4770      	bxeq	lr
 80003da:	b530      	push	{r4, r5, lr}
 80003dc:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80003e0:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80003e4:	f04f 0500 	mov.w	r5, #0
 80003e8:	f04f 0100 	mov.w	r1, #0
 80003ec:	e750      	b.n	8000290 <__adddf3+0x138>
 80003ee:	bf00      	nop

080003f0 <__aeabi_i2d>:
 80003f0:	f090 0f00 	teq	r0, #0
 80003f4:	bf04      	itt	eq
 80003f6:	2100      	moveq	r1, #0
 80003f8:	4770      	bxeq	lr
 80003fa:	b530      	push	{r4, r5, lr}
 80003fc:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000400:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000404:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8000408:	bf48      	it	mi
 800040a:	4240      	negmi	r0, r0
 800040c:	f04f 0100 	mov.w	r1, #0
 8000410:	e73e      	b.n	8000290 <__adddf3+0x138>
 8000412:	bf00      	nop

08000414 <__aeabi_f2d>:
 8000414:	0042      	lsls	r2, r0, #1
 8000416:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800041a:	ea4f 0131 	mov.w	r1, r1, rrx
 800041e:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000422:	bf1f      	itttt	ne
 8000424:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 8000428:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 800042c:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000430:	4770      	bxne	lr
 8000432:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 8000436:	bf08      	it	eq
 8000438:	4770      	bxeq	lr
 800043a:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 800043e:	bf04      	itt	eq
 8000440:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000444:	4770      	bxeq	lr
 8000446:	b530      	push	{r4, r5, lr}
 8000448:	f44f 7460 	mov.w	r4, #896	; 0x380
 800044c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000450:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000454:	e71c      	b.n	8000290 <__adddf3+0x138>
 8000456:	bf00      	nop

08000458 <__aeabi_ul2d>:
 8000458:	ea50 0201 	orrs.w	r2, r0, r1
 800045c:	bf08      	it	eq
 800045e:	4770      	bxeq	lr
 8000460:	b530      	push	{r4, r5, lr}
 8000462:	f04f 0500 	mov.w	r5, #0
 8000466:	e00a      	b.n	800047e <__aeabi_l2d+0x16>

08000468 <__aeabi_l2d>:
 8000468:	ea50 0201 	orrs.w	r2, r0, r1
 800046c:	bf08      	it	eq
 800046e:	4770      	bxeq	lr
 8000470:	b530      	push	{r4, r5, lr}
 8000472:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 8000476:	d502      	bpl.n	800047e <__aeabi_l2d+0x16>
 8000478:	4240      	negs	r0, r0
 800047a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800047e:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000482:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000486:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800048a:	f43f aed8 	beq.w	800023e <__adddf3+0xe6>
 800048e:	f04f 0203 	mov.w	r2, #3
 8000492:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000496:	bf18      	it	ne
 8000498:	3203      	addne	r2, #3
 800049a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800049e:	bf18      	it	ne
 80004a0:	3203      	addne	r2, #3
 80004a2:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80004a6:	f1c2 0320 	rsb	r3, r2, #32
 80004aa:	fa00 fc03 	lsl.w	ip, r0, r3
 80004ae:	fa20 f002 	lsr.w	r0, r0, r2
 80004b2:	fa01 fe03 	lsl.w	lr, r1, r3
 80004b6:	ea40 000e 	orr.w	r0, r0, lr
 80004ba:	fa21 f102 	lsr.w	r1, r1, r2
 80004be:	4414      	add	r4, r2
 80004c0:	e6bd      	b.n	800023e <__adddf3+0xe6>
 80004c2:	bf00      	nop

080004c4 <__aeabi_d2iz>:
 80004c4:	ea4f 0241 	mov.w	r2, r1, lsl #1
 80004c8:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 80004cc:	d215      	bcs.n	80004fa <__aeabi_d2iz+0x36>
 80004ce:	d511      	bpl.n	80004f4 <__aeabi_d2iz+0x30>
 80004d0:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 80004d4:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 80004d8:	d912      	bls.n	8000500 <__aeabi_d2iz+0x3c>
 80004da:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 80004de:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 80004e2:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 80004e6:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80004ea:	fa23 f002 	lsr.w	r0, r3, r2
 80004ee:	bf18      	it	ne
 80004f0:	4240      	negne	r0, r0
 80004f2:	4770      	bx	lr
 80004f4:	f04f 0000 	mov.w	r0, #0
 80004f8:	4770      	bx	lr
 80004fa:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 80004fe:	d105      	bne.n	800050c <__aeabi_d2iz+0x48>
 8000500:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000504:	bf08      	it	eq
 8000506:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 800050a:	4770      	bx	lr
 800050c:	f04f 0000 	mov.w	r0, #0
 8000510:	4770      	bx	lr
 8000512:	bf00      	nop

08000514 <__aeabi_frsub>:
 8000514:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
 8000518:	e002      	b.n	8000520 <__addsf3>
 800051a:	bf00      	nop

0800051c <__aeabi_fsub>:
 800051c:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

08000520 <__addsf3>:
 8000520:	0042      	lsls	r2, r0, #1
 8000522:	bf1f      	itttt	ne
 8000524:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8000528:	ea92 0f03 	teqne	r2, r3
 800052c:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8000530:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000534:	d06a      	beq.n	800060c <__addsf3+0xec>
 8000536:	ea4f 6212 	mov.w	r2, r2, lsr #24
 800053a:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 800053e:	bfc1      	itttt	gt
 8000540:	18d2      	addgt	r2, r2, r3
 8000542:	4041      	eorgt	r1, r0
 8000544:	4048      	eorgt	r0, r1
 8000546:	4041      	eorgt	r1, r0
 8000548:	bfb8      	it	lt
 800054a:	425b      	neglt	r3, r3
 800054c:	2b19      	cmp	r3, #25
 800054e:	bf88      	it	hi
 8000550:	4770      	bxhi	lr
 8000552:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8000556:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 800055a:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 800055e:	bf18      	it	ne
 8000560:	4240      	negne	r0, r0
 8000562:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000566:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 800056a:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 800056e:	bf18      	it	ne
 8000570:	4249      	negne	r1, r1
 8000572:	ea92 0f03 	teq	r2, r3
 8000576:	d03f      	beq.n	80005f8 <__addsf3+0xd8>
 8000578:	f1a2 0201 	sub.w	r2, r2, #1
 800057c:	fa41 fc03 	asr.w	ip, r1, r3
 8000580:	eb10 000c 	adds.w	r0, r0, ip
 8000584:	f1c3 0320 	rsb	r3, r3, #32
 8000588:	fa01 f103 	lsl.w	r1, r1, r3
 800058c:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000590:	d502      	bpl.n	8000598 <__addsf3+0x78>
 8000592:	4249      	negs	r1, r1
 8000594:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8000598:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
 800059c:	d313      	bcc.n	80005c6 <__addsf3+0xa6>
 800059e:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 80005a2:	d306      	bcc.n	80005b2 <__addsf3+0x92>
 80005a4:	0840      	lsrs	r0, r0, #1
 80005a6:	ea4f 0131 	mov.w	r1, r1, rrx
 80005aa:	f102 0201 	add.w	r2, r2, #1
 80005ae:	2afe      	cmp	r2, #254	; 0xfe
 80005b0:	d251      	bcs.n	8000656 <__addsf3+0x136>
 80005b2:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
 80005b6:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 80005ba:	bf08      	it	eq
 80005bc:	f020 0001 	biceq.w	r0, r0, #1
 80005c0:	ea40 0003 	orr.w	r0, r0, r3
 80005c4:	4770      	bx	lr
 80005c6:	0049      	lsls	r1, r1, #1
 80005c8:	eb40 0000 	adc.w	r0, r0, r0
 80005cc:	3a01      	subs	r2, #1
 80005ce:	bf28      	it	cs
 80005d0:	f5b0 0f00 	cmpcs.w	r0, #8388608	; 0x800000
 80005d4:	d2ed      	bcs.n	80005b2 <__addsf3+0x92>
 80005d6:	fab0 fc80 	clz	ip, r0
 80005da:	f1ac 0c08 	sub.w	ip, ip, #8
 80005de:	ebb2 020c 	subs.w	r2, r2, ip
 80005e2:	fa00 f00c 	lsl.w	r0, r0, ip
 80005e6:	bfaa      	itet	ge
 80005e8:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 80005ec:	4252      	neglt	r2, r2
 80005ee:	4318      	orrge	r0, r3
 80005f0:	bfbc      	itt	lt
 80005f2:	40d0      	lsrlt	r0, r2
 80005f4:	4318      	orrlt	r0, r3
 80005f6:	4770      	bx	lr
 80005f8:	f092 0f00 	teq	r2, #0
 80005fc:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
 8000600:	bf06      	itte	eq
 8000602:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
 8000606:	3201      	addeq	r2, #1
 8000608:	3b01      	subne	r3, #1
 800060a:	e7b5      	b.n	8000578 <__addsf3+0x58>
 800060c:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000610:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000614:	bf18      	it	ne
 8000616:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 800061a:	d021      	beq.n	8000660 <__addsf3+0x140>
 800061c:	ea92 0f03 	teq	r2, r3
 8000620:	d004      	beq.n	800062c <__addsf3+0x10c>
 8000622:	f092 0f00 	teq	r2, #0
 8000626:	bf08      	it	eq
 8000628:	4608      	moveq	r0, r1
 800062a:	4770      	bx	lr
 800062c:	ea90 0f01 	teq	r0, r1
 8000630:	bf1c      	itt	ne
 8000632:	2000      	movne	r0, #0
 8000634:	4770      	bxne	lr
 8000636:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
 800063a:	d104      	bne.n	8000646 <__addsf3+0x126>
 800063c:	0040      	lsls	r0, r0, #1
 800063e:	bf28      	it	cs
 8000640:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
 8000644:	4770      	bx	lr
 8000646:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
 800064a:	bf3c      	itt	cc
 800064c:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
 8000650:	4770      	bxcc	lr
 8000652:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000656:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
 800065a:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 800065e:	4770      	bx	lr
 8000660:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8000664:	bf16      	itet	ne
 8000666:	4608      	movne	r0, r1
 8000668:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 800066c:	4601      	movne	r1, r0
 800066e:	0242      	lsls	r2, r0, #9
 8000670:	bf06      	itte	eq
 8000672:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8000676:	ea90 0f01 	teqeq	r0, r1
 800067a:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
 800067e:	4770      	bx	lr

08000680 <__aeabi_ui2f>:
 8000680:	f04f 0300 	mov.w	r3, #0
 8000684:	e004      	b.n	8000690 <__aeabi_i2f+0x8>
 8000686:	bf00      	nop

08000688 <__aeabi_i2f>:
 8000688:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
 800068c:	bf48      	it	mi
 800068e:	4240      	negmi	r0, r0
 8000690:	ea5f 0c00 	movs.w	ip, r0
 8000694:	bf08      	it	eq
 8000696:	4770      	bxeq	lr
 8000698:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
 800069c:	4601      	mov	r1, r0
 800069e:	f04f 0000 	mov.w	r0, #0
 80006a2:	e01c      	b.n	80006de <__aeabi_l2f+0x2a>

080006a4 <__aeabi_ul2f>:
 80006a4:	ea50 0201 	orrs.w	r2, r0, r1
 80006a8:	bf08      	it	eq
 80006aa:	4770      	bxeq	lr
 80006ac:	f04f 0300 	mov.w	r3, #0
 80006b0:	e00a      	b.n	80006c8 <__aeabi_l2f+0x14>
 80006b2:	bf00      	nop

080006b4 <__aeabi_l2f>:
 80006b4:	ea50 0201 	orrs.w	r2, r0, r1
 80006b8:	bf08      	it	eq
 80006ba:	4770      	bxeq	lr
 80006bc:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
 80006c0:	d502      	bpl.n	80006c8 <__aeabi_l2f+0x14>
 80006c2:	4240      	negs	r0, r0
 80006c4:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80006c8:	ea5f 0c01 	movs.w	ip, r1
 80006cc:	bf02      	ittt	eq
 80006ce:	4684      	moveq	ip, r0
 80006d0:	4601      	moveq	r1, r0
 80006d2:	2000      	moveq	r0, #0
 80006d4:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
 80006d8:	bf08      	it	eq
 80006da:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
 80006de:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
 80006e2:	fabc f28c 	clz	r2, ip
 80006e6:	3a08      	subs	r2, #8
 80006e8:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 80006ec:	db10      	blt.n	8000710 <__aeabi_l2f+0x5c>
 80006ee:	fa01 fc02 	lsl.w	ip, r1, r2
 80006f2:	4463      	add	r3, ip
 80006f4:	fa00 fc02 	lsl.w	ip, r0, r2
 80006f8:	f1c2 0220 	rsb	r2, r2, #32
 80006fc:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8000700:	fa20 f202 	lsr.w	r2, r0, r2
 8000704:	eb43 0002 	adc.w	r0, r3, r2
 8000708:	bf08      	it	eq
 800070a:	f020 0001 	biceq.w	r0, r0, #1
 800070e:	4770      	bx	lr
 8000710:	f102 0220 	add.w	r2, r2, #32
 8000714:	fa01 fc02 	lsl.w	ip, r1, r2
 8000718:	f1c2 0220 	rsb	r2, r2, #32
 800071c:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8000720:	fa21 f202 	lsr.w	r2, r1, r2
 8000724:	eb43 0002 	adc.w	r0, r3, r2
 8000728:	bf08      	it	eq
 800072a:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 800072e:	4770      	bx	lr

08000730 <__aeabi_fmul>:
 8000730:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000734:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000738:	bf1e      	ittt	ne
 800073a:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 800073e:	ea92 0f0c 	teqne	r2, ip
 8000742:	ea93 0f0c 	teqne	r3, ip
 8000746:	d06f      	beq.n	8000828 <__aeabi_fmul+0xf8>
 8000748:	441a      	add	r2, r3
 800074a:	ea80 0c01 	eor.w	ip, r0, r1
 800074e:	0240      	lsls	r0, r0, #9
 8000750:	bf18      	it	ne
 8000752:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 8000756:	d01e      	beq.n	8000796 <__aeabi_fmul+0x66>
 8000758:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 800075c:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 8000760:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 8000764:	fba0 3101 	umull	r3, r1, r0, r1
 8000768:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 800076c:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 8000770:	bf3e      	ittt	cc
 8000772:	0049      	lslcc	r1, r1, #1
 8000774:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 8000778:	005b      	lslcc	r3, r3, #1
 800077a:	ea40 0001 	orr.w	r0, r0, r1
 800077e:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
 8000782:	2afd      	cmp	r2, #253	; 0xfd
 8000784:	d81d      	bhi.n	80007c2 <__aeabi_fmul+0x92>
 8000786:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 800078a:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 800078e:	bf08      	it	eq
 8000790:	f020 0001 	biceq.w	r0, r0, #1
 8000794:	4770      	bx	lr
 8000796:	f090 0f00 	teq	r0, #0
 800079a:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 800079e:	bf08      	it	eq
 80007a0:	0249      	lsleq	r1, r1, #9
 80007a2:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 80007a6:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 80007aa:	3a7f      	subs	r2, #127	; 0x7f
 80007ac:	bfc2      	ittt	gt
 80007ae:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 80007b2:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 80007b6:	4770      	bxgt	lr
 80007b8:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80007bc:	f04f 0300 	mov.w	r3, #0
 80007c0:	3a01      	subs	r2, #1
 80007c2:	dc5d      	bgt.n	8000880 <__aeabi_fmul+0x150>
 80007c4:	f112 0f19 	cmn.w	r2, #25
 80007c8:	bfdc      	itt	le
 80007ca:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
 80007ce:	4770      	bxle	lr
 80007d0:	f1c2 0200 	rsb	r2, r2, #0
 80007d4:	0041      	lsls	r1, r0, #1
 80007d6:	fa21 f102 	lsr.w	r1, r1, r2
 80007da:	f1c2 0220 	rsb	r2, r2, #32
 80007de:	fa00 fc02 	lsl.w	ip, r0, r2
 80007e2:	ea5f 0031 	movs.w	r0, r1, rrx
 80007e6:	f140 0000 	adc.w	r0, r0, #0
 80007ea:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 80007ee:	bf08      	it	eq
 80007f0:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 80007f4:	4770      	bx	lr
 80007f6:	f092 0f00 	teq	r2, #0
 80007fa:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 80007fe:	bf02      	ittt	eq
 8000800:	0040      	lsleq	r0, r0, #1
 8000802:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8000806:	3a01      	subeq	r2, #1
 8000808:	d0f9      	beq.n	80007fe <__aeabi_fmul+0xce>
 800080a:	ea40 000c 	orr.w	r0, r0, ip
 800080e:	f093 0f00 	teq	r3, #0
 8000812:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000816:	bf02      	ittt	eq
 8000818:	0049      	lsleq	r1, r1, #1
 800081a:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 800081e:	3b01      	subeq	r3, #1
 8000820:	d0f9      	beq.n	8000816 <__aeabi_fmul+0xe6>
 8000822:	ea41 010c 	orr.w	r1, r1, ip
 8000826:	e78f      	b.n	8000748 <__aeabi_fmul+0x18>
 8000828:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 800082c:	ea92 0f0c 	teq	r2, ip
 8000830:	bf18      	it	ne
 8000832:	ea93 0f0c 	teqne	r3, ip
 8000836:	d00a      	beq.n	800084e <__aeabi_fmul+0x11e>
 8000838:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 800083c:	bf18      	it	ne
 800083e:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8000842:	d1d8      	bne.n	80007f6 <__aeabi_fmul+0xc6>
 8000844:	ea80 0001 	eor.w	r0, r0, r1
 8000848:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 800084c:	4770      	bx	lr
 800084e:	f090 0f00 	teq	r0, #0
 8000852:	bf17      	itett	ne
 8000854:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
 8000858:	4608      	moveq	r0, r1
 800085a:	f091 0f00 	teqne	r1, #0
 800085e:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
 8000862:	d014      	beq.n	800088e <__aeabi_fmul+0x15e>
 8000864:	ea92 0f0c 	teq	r2, ip
 8000868:	d101      	bne.n	800086e <__aeabi_fmul+0x13e>
 800086a:	0242      	lsls	r2, r0, #9
 800086c:	d10f      	bne.n	800088e <__aeabi_fmul+0x15e>
 800086e:	ea93 0f0c 	teq	r3, ip
 8000872:	d103      	bne.n	800087c <__aeabi_fmul+0x14c>
 8000874:	024b      	lsls	r3, r1, #9
 8000876:	bf18      	it	ne
 8000878:	4608      	movne	r0, r1
 800087a:	d108      	bne.n	800088e <__aeabi_fmul+0x15e>
 800087c:	ea80 0001 	eor.w	r0, r0, r1
 8000880:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8000884:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000888:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 800088c:	4770      	bx	lr
 800088e:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000892:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
 8000896:	4770      	bx	lr

08000898 <__aeabi_fdiv>:
 8000898:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800089c:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 80008a0:	bf1e      	ittt	ne
 80008a2:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 80008a6:	ea92 0f0c 	teqne	r2, ip
 80008aa:	ea93 0f0c 	teqne	r3, ip
 80008ae:	d069      	beq.n	8000984 <__aeabi_fdiv+0xec>
 80008b0:	eba2 0203 	sub.w	r2, r2, r3
 80008b4:	ea80 0c01 	eor.w	ip, r0, r1
 80008b8:	0249      	lsls	r1, r1, #9
 80008ba:	ea4f 2040 	mov.w	r0, r0, lsl #9
 80008be:	d037      	beq.n	8000930 <__aeabi_fdiv+0x98>
 80008c0:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 80008c4:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 80008c8:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 80008cc:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 80008d0:	428b      	cmp	r3, r1
 80008d2:	bf38      	it	cc
 80008d4:	005b      	lslcc	r3, r3, #1
 80008d6:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
 80008da:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
 80008de:	428b      	cmp	r3, r1
 80008e0:	bf24      	itt	cs
 80008e2:	1a5b      	subcs	r3, r3, r1
 80008e4:	ea40 000c 	orrcs.w	r0, r0, ip
 80008e8:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 80008ec:	bf24      	itt	cs
 80008ee:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 80008f2:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80008f6:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 80008fa:	bf24      	itt	cs
 80008fc:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 8000900:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000904:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 8000908:	bf24      	itt	cs
 800090a:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 800090e:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000912:	011b      	lsls	r3, r3, #4
 8000914:	bf18      	it	ne
 8000916:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 800091a:	d1e0      	bne.n	80008de <__aeabi_fdiv+0x46>
 800091c:	2afd      	cmp	r2, #253	; 0xfd
 800091e:	f63f af50 	bhi.w	80007c2 <__aeabi_fmul+0x92>
 8000922:	428b      	cmp	r3, r1
 8000924:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000928:	bf08      	it	eq
 800092a:	f020 0001 	biceq.w	r0, r0, #1
 800092e:	4770      	bx	lr
 8000930:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8000934:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000938:	327f      	adds	r2, #127	; 0x7f
 800093a:	bfc2      	ittt	gt
 800093c:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8000940:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000944:	4770      	bxgt	lr
 8000946:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 800094a:	f04f 0300 	mov.w	r3, #0
 800094e:	3a01      	subs	r2, #1
 8000950:	e737      	b.n	80007c2 <__aeabi_fmul+0x92>
 8000952:	f092 0f00 	teq	r2, #0
 8000956:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 800095a:	bf02      	ittt	eq
 800095c:	0040      	lsleq	r0, r0, #1
 800095e:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8000962:	3a01      	subeq	r2, #1
 8000964:	d0f9      	beq.n	800095a <__aeabi_fdiv+0xc2>
 8000966:	ea40 000c 	orr.w	r0, r0, ip
 800096a:	f093 0f00 	teq	r3, #0
 800096e:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000972:	bf02      	ittt	eq
 8000974:	0049      	lsleq	r1, r1, #1
 8000976:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 800097a:	3b01      	subeq	r3, #1
 800097c:	d0f9      	beq.n	8000972 <__aeabi_fdiv+0xda>
 800097e:	ea41 010c 	orr.w	r1, r1, ip
 8000982:	e795      	b.n	80008b0 <__aeabi_fdiv+0x18>
 8000984:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000988:	ea92 0f0c 	teq	r2, ip
 800098c:	d108      	bne.n	80009a0 <__aeabi_fdiv+0x108>
 800098e:	0242      	lsls	r2, r0, #9
 8000990:	f47f af7d 	bne.w	800088e <__aeabi_fmul+0x15e>
 8000994:	ea93 0f0c 	teq	r3, ip
 8000998:	f47f af70 	bne.w	800087c <__aeabi_fmul+0x14c>
 800099c:	4608      	mov	r0, r1
 800099e:	e776      	b.n	800088e <__aeabi_fmul+0x15e>
 80009a0:	ea93 0f0c 	teq	r3, ip
 80009a4:	d104      	bne.n	80009b0 <__aeabi_fdiv+0x118>
 80009a6:	024b      	lsls	r3, r1, #9
 80009a8:	f43f af4c 	beq.w	8000844 <__aeabi_fmul+0x114>
 80009ac:	4608      	mov	r0, r1
 80009ae:	e76e      	b.n	800088e <__aeabi_fmul+0x15e>
 80009b0:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 80009b4:	bf18      	it	ne
 80009b6:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 80009ba:	d1ca      	bne.n	8000952 <__aeabi_fdiv+0xba>
 80009bc:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
 80009c0:	f47f af5c 	bne.w	800087c <__aeabi_fmul+0x14c>
 80009c4:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
 80009c8:	f47f af3c 	bne.w	8000844 <__aeabi_fmul+0x114>
 80009cc:	e75f      	b.n	800088e <__aeabi_fmul+0x15e>
 80009ce:	bf00      	nop

080009d0 <__gesf2>:
 80009d0:	f04f 3cff 	mov.w	ip, #4294967295
 80009d4:	e006      	b.n	80009e4 <__cmpsf2+0x4>
 80009d6:	bf00      	nop

080009d8 <__lesf2>:
 80009d8:	f04f 0c01 	mov.w	ip, #1
 80009dc:	e002      	b.n	80009e4 <__cmpsf2+0x4>
 80009de:	bf00      	nop

080009e0 <__cmpsf2>:
 80009e0:	f04f 0c01 	mov.w	ip, #1
 80009e4:	f84d cd04 	str.w	ip, [sp, #-4]!
 80009e8:	ea4f 0240 	mov.w	r2, r0, lsl #1
 80009ec:	ea4f 0341 	mov.w	r3, r1, lsl #1
 80009f0:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 80009f4:	bf18      	it	ne
 80009f6:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 80009fa:	d011      	beq.n	8000a20 <__cmpsf2+0x40>
 80009fc:	b001      	add	sp, #4
 80009fe:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
 8000a02:	bf18      	it	ne
 8000a04:	ea90 0f01 	teqne	r0, r1
 8000a08:	bf58      	it	pl
 8000a0a:	ebb2 0003 	subspl.w	r0, r2, r3
 8000a0e:	bf88      	it	hi
 8000a10:	17c8      	asrhi	r0, r1, #31
 8000a12:	bf38      	it	cc
 8000a14:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
 8000a18:	bf18      	it	ne
 8000a1a:	f040 0001 	orrne.w	r0, r0, #1
 8000a1e:	4770      	bx	lr
 8000a20:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000a24:	d102      	bne.n	8000a2c <__cmpsf2+0x4c>
 8000a26:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 8000a2a:	d105      	bne.n	8000a38 <__cmpsf2+0x58>
 8000a2c:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 8000a30:	d1e4      	bne.n	80009fc <__cmpsf2+0x1c>
 8000a32:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 8000a36:	d0e1      	beq.n	80009fc <__cmpsf2+0x1c>
 8000a38:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000a3c:	4770      	bx	lr
 8000a3e:	bf00      	nop

08000a40 <__aeabi_cfrcmple>:
 8000a40:	4684      	mov	ip, r0
 8000a42:	4608      	mov	r0, r1
 8000a44:	4661      	mov	r1, ip
 8000a46:	e7ff      	b.n	8000a48 <__aeabi_cfcmpeq>

08000a48 <__aeabi_cfcmpeq>:
 8000a48:	b50f      	push	{r0, r1, r2, r3, lr}
 8000a4a:	f7ff ffc9 	bl	80009e0 <__cmpsf2>
 8000a4e:	2800      	cmp	r0, #0
 8000a50:	bf48      	it	mi
 8000a52:	f110 0f00 	cmnmi.w	r0, #0
 8000a56:	bd0f      	pop	{r0, r1, r2, r3, pc}

08000a58 <__aeabi_fcmpeq>:
 8000a58:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a5c:	f7ff fff4 	bl	8000a48 <__aeabi_cfcmpeq>
 8000a60:	bf0c      	ite	eq
 8000a62:	2001      	moveq	r0, #1
 8000a64:	2000      	movne	r0, #0
 8000a66:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a6a:	bf00      	nop

08000a6c <__aeabi_fcmplt>:
 8000a6c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a70:	f7ff ffea 	bl	8000a48 <__aeabi_cfcmpeq>
 8000a74:	bf34      	ite	cc
 8000a76:	2001      	movcc	r0, #1
 8000a78:	2000      	movcs	r0, #0
 8000a7a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a7e:	bf00      	nop

08000a80 <__aeabi_fcmple>:
 8000a80:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a84:	f7ff ffe0 	bl	8000a48 <__aeabi_cfcmpeq>
 8000a88:	bf94      	ite	ls
 8000a8a:	2001      	movls	r0, #1
 8000a8c:	2000      	movhi	r0, #0
 8000a8e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a92:	bf00      	nop

08000a94 <__aeabi_fcmpge>:
 8000a94:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a98:	f7ff ffd2 	bl	8000a40 <__aeabi_cfrcmple>
 8000a9c:	bf94      	ite	ls
 8000a9e:	2001      	movls	r0, #1
 8000aa0:	2000      	movhi	r0, #0
 8000aa2:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aa6:	bf00      	nop

08000aa8 <__aeabi_fcmpgt>:
 8000aa8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000aac:	f7ff ffc8 	bl	8000a40 <__aeabi_cfrcmple>
 8000ab0:	bf34      	ite	cc
 8000ab2:	2001      	movcc	r0, #1
 8000ab4:	2000      	movcs	r0, #0
 8000ab6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aba:	bf00      	nop

08000abc <__aeabi_f2uiz>:
 8000abc:	0042      	lsls	r2, r0, #1
 8000abe:	d20e      	bcs.n	8000ade <__aeabi_f2uiz+0x22>
 8000ac0:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 8000ac4:	d30b      	bcc.n	8000ade <__aeabi_f2uiz+0x22>
 8000ac6:	f04f 039e 	mov.w	r3, #158	; 0x9e
 8000aca:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 8000ace:	d409      	bmi.n	8000ae4 <__aeabi_f2uiz+0x28>
 8000ad0:	ea4f 2300 	mov.w	r3, r0, lsl #8
 8000ad4:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000ad8:	fa23 f002 	lsr.w	r0, r3, r2
 8000adc:	4770      	bx	lr
 8000ade:	f04f 0000 	mov.w	r0, #0
 8000ae2:	4770      	bx	lr
 8000ae4:	f112 0f61 	cmn.w	r2, #97	; 0x61
 8000ae8:	d101      	bne.n	8000aee <__aeabi_f2uiz+0x32>
 8000aea:	0242      	lsls	r2, r0, #9
 8000aec:	d102      	bne.n	8000af4 <__aeabi_f2uiz+0x38>
 8000aee:	f04f 30ff 	mov.w	r0, #4294967295
 8000af2:	4770      	bx	lr
 8000af4:	f04f 0000 	mov.w	r0, #0
 8000af8:	4770      	bx	lr
 8000afa:	bf00      	nop

08000afc <ReadInputs>:

//Private Functions Declaration
uint16_t MyHalfBufferAverage(uint16_t *buffer, uint16_t halfsize, uint8_t side, uint8_t offset);


void ReadInputs(InputStruct *inputs){
 8000afc:	b580      	push	{r7, lr}
 8000afe:	b084      	sub	sp, #16
 8000b00:	af02      	add	r7, sp, #8
 8000b02:	6078      	str	r0, [r7, #4]

	tInputsTimer = HAL_GetTick();
 8000b04:	f001 fc92 	bl	800242c <HAL_GetTick>
 8000b08:	4603      	mov	r3, r0
 8000b0a:	4a99      	ldr	r2, [pc, #612]	; (8000d70 <ReadInputs+0x274>)
 8000b0c:	6013      	str	r3, [r2, #0]

	// ---------------------------------------------------------------------------------------------------
	//Analog & Digital Inputs

	//ADC Averaging
	inputs->NADCChannel01Raw = MyHalfBufferAverage(adcRawValue, ADC_BUFFER_HALF_SIZE, NAdcBufferSide, 0);
 8000b0e:	4b99      	ldr	r3, [pc, #612]	; (8000d74 <ReadInputs+0x278>)
 8000b10:	781b      	ldrb	r3, [r3, #0]
 8000b12:	b2da      	uxtb	r2, r3
 8000b14:	2300      	movs	r3, #0
 8000b16:	f44f 6186 	mov.w	r1, #1072	; 0x430
 8000b1a:	4897      	ldr	r0, [pc, #604]	; (8000d78 <ReadInputs+0x27c>)
 8000b1c:	f000 fb80 	bl	8001220 <MyHalfBufferAverage>
 8000b20:	4603      	mov	r3, r0
 8000b22:	461a      	mov	r2, r3
 8000b24:	687b      	ldr	r3, [r7, #4]
 8000b26:	821a      	strh	r2, [r3, #16]
	inputs->NADCChannel02Raw = MyHalfBufferAverage(adcRawValue, ADC_BUFFER_HALF_SIZE, NAdcBufferSide, 1);
 8000b28:	4b92      	ldr	r3, [pc, #584]	; (8000d74 <ReadInputs+0x278>)
 8000b2a:	781b      	ldrb	r3, [r3, #0]
 8000b2c:	b2da      	uxtb	r2, r3
 8000b2e:	2301      	movs	r3, #1
 8000b30:	f44f 6186 	mov.w	r1, #1072	; 0x430
 8000b34:	4890      	ldr	r0, [pc, #576]	; (8000d78 <ReadInputs+0x27c>)
 8000b36:	f000 fb73 	bl	8001220 <MyHalfBufferAverage>
 8000b3a:	4603      	mov	r3, r0
 8000b3c:	461a      	mov	r2, r3
 8000b3e:	687b      	ldr	r3, [r7, #4]
 8000b40:	825a      	strh	r2, [r3, #18]
	inputs->NADCChannel03Raw = MyHalfBufferAverage(adcRawValue, ADC_BUFFER_HALF_SIZE, NAdcBufferSide, 2);
 8000b42:	4b8c      	ldr	r3, [pc, #560]	; (8000d74 <ReadInputs+0x278>)
 8000b44:	781b      	ldrb	r3, [r3, #0]
 8000b46:	b2da      	uxtb	r2, r3
 8000b48:	2302      	movs	r3, #2
 8000b4a:	f44f 6186 	mov.w	r1, #1072	; 0x430
 8000b4e:	488a      	ldr	r0, [pc, #552]	; (8000d78 <ReadInputs+0x27c>)
 8000b50:	f000 fb66 	bl	8001220 <MyHalfBufferAverage>
 8000b54:	4603      	mov	r3, r0
 8000b56:	461a      	mov	r2, r3
 8000b58:	687b      	ldr	r3, [r7, #4]
 8000b5a:	829a      	strh	r2, [r3, #20]
	inputs->NADCChannel04Raw = MyHalfBufferAverage(adcRawValue, ADC_BUFFER_HALF_SIZE, NAdcBufferSide, 3);
 8000b5c:	4b85      	ldr	r3, [pc, #532]	; (8000d74 <ReadInputs+0x278>)
 8000b5e:	781b      	ldrb	r3, [r3, #0]
 8000b60:	b2da      	uxtb	r2, r3
 8000b62:	2303      	movs	r3, #3
 8000b64:	f44f 6186 	mov.w	r1, #1072	; 0x430
 8000b68:	4883      	ldr	r0, [pc, #524]	; (8000d78 <ReadInputs+0x27c>)
 8000b6a:	f000 fb59 	bl	8001220 <MyHalfBufferAverage>
 8000b6e:	4603      	mov	r3, r0
 8000b70:	461a      	mov	r2, r3
 8000b72:	687b      	ldr	r3, [r7, #4]
 8000b74:	82da      	strh	r2, [r3, #22]

	//Voltage Conversion
	inputs->VSIUAnalog01 = (float)(inputs->NADCChannel01Raw * MCU_SUPPLY_VOLTAGE / 4095.0);
 8000b76:	687b      	ldr	r3, [r7, #4]
 8000b78:	8a1b      	ldrh	r3, [r3, #16]
 8000b7a:	4618      	mov	r0, r3
 8000b7c:	f7ff fd84 	bl	8000688 <__aeabi_i2f>
 8000b80:	4603      	mov	r3, r0
 8000b82:	497e      	ldr	r1, [pc, #504]	; (8000d7c <ReadInputs+0x280>)
 8000b84:	4618      	mov	r0, r3
 8000b86:	f7ff fdd3 	bl	8000730 <__aeabi_fmul>
 8000b8a:	4603      	mov	r3, r0
 8000b8c:	497c      	ldr	r1, [pc, #496]	; (8000d80 <ReadInputs+0x284>)
 8000b8e:	4618      	mov	r0, r3
 8000b90:	f7ff fe82 	bl	8000898 <__aeabi_fdiv>
 8000b94:	4603      	mov	r3, r0
 8000b96:	461a      	mov	r2, r3
 8000b98:	687b      	ldr	r3, [r7, #4]
 8000b9a:	601a      	str	r2, [r3, #0]
	inputs->VSIUAnalog02 = (float)(inputs->NADCChannel02Raw * MCU_SUPPLY_VOLTAGE / 4095.0);
 8000b9c:	687b      	ldr	r3, [r7, #4]
 8000b9e:	8a5b      	ldrh	r3, [r3, #18]
 8000ba0:	4618      	mov	r0, r3
 8000ba2:	f7ff fd71 	bl	8000688 <__aeabi_i2f>
 8000ba6:	4603      	mov	r3, r0
 8000ba8:	4974      	ldr	r1, [pc, #464]	; (8000d7c <ReadInputs+0x280>)
 8000baa:	4618      	mov	r0, r3
 8000bac:	f7ff fdc0 	bl	8000730 <__aeabi_fmul>
 8000bb0:	4603      	mov	r3, r0
 8000bb2:	4973      	ldr	r1, [pc, #460]	; (8000d80 <ReadInputs+0x284>)
 8000bb4:	4618      	mov	r0, r3
 8000bb6:	f7ff fe6f 	bl	8000898 <__aeabi_fdiv>
 8000bba:	4603      	mov	r3, r0
 8000bbc:	461a      	mov	r2, r3
 8000bbe:	687b      	ldr	r3, [r7, #4]
 8000bc0:	605a      	str	r2, [r3, #4]
	inputs->VSIUAnalog03 = (float)(inputs->NADCChannel03Raw * MCU_SUPPLY_VOLTAGE / 4095.0);
 8000bc2:	687b      	ldr	r3, [r7, #4]
 8000bc4:	8a9b      	ldrh	r3, [r3, #20]
 8000bc6:	4618      	mov	r0, r3
 8000bc8:	f7ff fd5e 	bl	8000688 <__aeabi_i2f>
 8000bcc:	4603      	mov	r3, r0
 8000bce:	496b      	ldr	r1, [pc, #428]	; (8000d7c <ReadInputs+0x280>)
 8000bd0:	4618      	mov	r0, r3
 8000bd2:	f7ff fdad 	bl	8000730 <__aeabi_fmul>
 8000bd6:	4603      	mov	r3, r0
 8000bd8:	4969      	ldr	r1, [pc, #420]	; (8000d80 <ReadInputs+0x284>)
 8000bda:	4618      	mov	r0, r3
 8000bdc:	f7ff fe5c 	bl	8000898 <__aeabi_fdiv>
 8000be0:	4603      	mov	r3, r0
 8000be2:	461a      	mov	r2, r3
 8000be4:	687b      	ldr	r3, [r7, #4]
 8000be6:	609a      	str	r2, [r3, #8]
	inputs->VSIUAnalog04 = (float)(inputs->NADCChannel04Raw * MCU_SUPPLY_VOLTAGE / 4095.0);
 8000be8:	687b      	ldr	r3, [r7, #4]
 8000bea:	8adb      	ldrh	r3, [r3, #22]
 8000bec:	4618      	mov	r0, r3
 8000bee:	f7ff fd4b 	bl	8000688 <__aeabi_i2f>
 8000bf2:	4603      	mov	r3, r0
 8000bf4:	4961      	ldr	r1, [pc, #388]	; (8000d7c <ReadInputs+0x280>)
 8000bf6:	4618      	mov	r0, r3
 8000bf8:	f7ff fd9a 	bl	8000730 <__aeabi_fmul>
 8000bfc:	4603      	mov	r3, r0
 8000bfe:	4960      	ldr	r1, [pc, #384]	; (8000d80 <ReadInputs+0x284>)
 8000c00:	4618      	mov	r0, r3
 8000c02:	f7ff fe49 	bl	8000898 <__aeabi_fdiv>
 8000c06:	4603      	mov	r3, r0
 8000c08:	461a      	mov	r2, r3
 8000c0a:	687b      	ldr	r3, [r7, #4]
 8000c0c:	60da      	str	r2, [r3, #12]

	//Digital Read (for somr inputs we invert the logic to read 1 when it goes to GND, because of the pull ups)
	inputs->BSIUDIN01 = HAL_GPIO_ReadPin(DIN01_GPIO_Port, DIN01_Pin);
 8000c0e:	2104      	movs	r1, #4
 8000c10:	485c      	ldr	r0, [pc, #368]	; (8000d84 <ReadInputs+0x288>)
 8000c12:	f003 fbcf 	bl	80043b4 <HAL_GPIO_ReadPin>
 8000c16:	4603      	mov	r3, r0
 8000c18:	461a      	mov	r2, r3
 8000c1a:	687b      	ldr	r3, [r7, #4]
 8000c1c:	761a      	strb	r2, [r3, #24]
	inputs->BSIUDIN02 = HAL_GPIO_ReadPin(DIN02_GPIO_Port, DIN02_Pin);
 8000c1e:	2102      	movs	r1, #2
 8000c20:	4858      	ldr	r0, [pc, #352]	; (8000d84 <ReadInputs+0x288>)
 8000c22:	f003 fbc7 	bl	80043b4 <HAL_GPIO_ReadPin>
 8000c26:	4603      	mov	r3, r0
 8000c28:	461a      	mov	r2, r3
 8000c2a:	687b      	ldr	r3, [r7, #4]
 8000c2c:	765a      	strb	r2, [r3, #25]
	inputs->BSIUDIN03 = !HAL_GPIO_ReadPin(DIN03_GPIO_Port, DIN03_Pin);
 8000c2e:	2101      	movs	r1, #1
 8000c30:	4854      	ldr	r0, [pc, #336]	; (8000d84 <ReadInputs+0x288>)
 8000c32:	f003 fbbf 	bl	80043b4 <HAL_GPIO_ReadPin>
 8000c36:	4603      	mov	r3, r0
 8000c38:	2b00      	cmp	r3, #0
 8000c3a:	bf0c      	ite	eq
 8000c3c:	2301      	moveq	r3, #1
 8000c3e:	2300      	movne	r3, #0
 8000c40:	b2db      	uxtb	r3, r3
 8000c42:	461a      	mov	r2, r3
 8000c44:	687b      	ldr	r3, [r7, #4]
 8000c46:	769a      	strb	r2, [r3, #26]
	inputs->BSIUDIN04 = !HAL_GPIO_ReadPin(DIN04_GPIO_Port, DIN04_Pin);
 8000c48:	2108      	movs	r1, #8
 8000c4a:	484e      	ldr	r0, [pc, #312]	; (8000d84 <ReadInputs+0x288>)
 8000c4c:	f003 fbb2 	bl	80043b4 <HAL_GPIO_ReadPin>
 8000c50:	4603      	mov	r3, r0
 8000c52:	2b00      	cmp	r3, #0
 8000c54:	bf0c      	ite	eq
 8000c56:	2301      	moveq	r3, #1
 8000c58:	2300      	movne	r3, #0
 8000c5a:	b2db      	uxtb	r3, r3
 8000c5c:	461a      	mov	r2, r3
 8000c5e:	687b      	ldr	r3, [r7, #4]
 8000c60:	76da      	strb	r2, [r3, #27]
	inputs->BSIUDIN05 = !HAL_GPIO_ReadPin(DIN05_GPIO_Port, DIN05_Pin);
 8000c62:	2110      	movs	r1, #16
 8000c64:	4847      	ldr	r0, [pc, #284]	; (8000d84 <ReadInputs+0x288>)
 8000c66:	f003 fba5 	bl	80043b4 <HAL_GPIO_ReadPin>
 8000c6a:	4603      	mov	r3, r0
 8000c6c:	2b00      	cmp	r3, #0
 8000c6e:	bf0c      	ite	eq
 8000c70:	2301      	moveq	r3, #1
 8000c72:	2300      	movne	r3, #0
 8000c74:	b2db      	uxtb	r3, r3
 8000c76:	461a      	mov	r2, r3
 8000c78:	687b      	ldr	r3, [r7, #4]
 8000c7a:	771a      	strb	r2, [r3, #28]
	inputs->BSIUDIN06 = !HAL_GPIO_ReadPin(DIN06_GPIO_Port, DIN06_Pin);
 8000c7c:	2120      	movs	r1, #32
 8000c7e:	4841      	ldr	r0, [pc, #260]	; (8000d84 <ReadInputs+0x288>)
 8000c80:	f003 fb98 	bl	80043b4 <HAL_GPIO_ReadPin>
 8000c84:	4603      	mov	r3, r0
 8000c86:	2b00      	cmp	r3, #0
 8000c88:	bf0c      	ite	eq
 8000c8a:	2301      	moveq	r3, #1
 8000c8c:	2300      	movne	r3, #0
 8000c8e:	b2db      	uxtb	r3, r3
 8000c90:	461a      	mov	r2, r3
 8000c92:	687b      	ldr	r3, [r7, #4]
 8000c94:	775a      	strb	r2, [r3, #29]
	inputs->BSIUDIN07 = !HAL_GPIO_ReadPin(DIN07_GPIO_Port, DIN07_Pin);
 8000c96:	2140      	movs	r1, #64	; 0x40
 8000c98:	483a      	ldr	r0, [pc, #232]	; (8000d84 <ReadInputs+0x288>)
 8000c9a:	f003 fb8b 	bl	80043b4 <HAL_GPIO_ReadPin>
 8000c9e:	4603      	mov	r3, r0
 8000ca0:	2b00      	cmp	r3, #0
 8000ca2:	bf0c      	ite	eq
 8000ca4:	2301      	moveq	r3, #1
 8000ca6:	2300      	movne	r3, #0
 8000ca8:	b2db      	uxtb	r3, r3
 8000caa:	461a      	mov	r2, r3
 8000cac:	687b      	ldr	r3, [r7, #4]
 8000cae:	779a      	strb	r2, [r3, #30]
	inputs->BSIUDIN08 = !HAL_GPIO_ReadPin(DIN08_GPIO_Port, DIN08_Pin);
 8000cb0:	2180      	movs	r1, #128	; 0x80
 8000cb2:	4834      	ldr	r0, [pc, #208]	; (8000d84 <ReadInputs+0x288>)
 8000cb4:	f003 fb7e 	bl	80043b4 <HAL_GPIO_ReadPin>
 8000cb8:	4603      	mov	r3, r0
 8000cba:	2b00      	cmp	r3, #0
 8000cbc:	bf0c      	ite	eq
 8000cbe:	2301      	moveq	r3, #1
 8000cc0:	2300      	movne	r3, #0
 8000cc2:	b2db      	uxtb	r3, r3
 8000cc4:	461a      	mov	r2, r3
 8000cc6:	687b      	ldr	r3, [r7, #4]
 8000cc8:	77da      	strb	r2, [r3, #31]

	// Digital Outputs
	inputs->BSIUDO01Demand = BDO01Demand;
 8000cca:	4b2f      	ldr	r3, [pc, #188]	; (8000d88 <ReadInputs+0x28c>)
 8000ccc:	781b      	ldrb	r3, [r3, #0]
 8000cce:	b2da      	uxtb	r2, r3
 8000cd0:	687b      	ldr	r3, [r7, #4]
 8000cd2:	f883 2020 	strb.w	r2, [r3, #32]
	inputs->BSIUDO02Demand = BDO02Demand;
 8000cd6:	4b2d      	ldr	r3, [pc, #180]	; (8000d8c <ReadInputs+0x290>)
 8000cd8:	781b      	ldrb	r3, [r3, #0]
 8000cda:	b2da      	uxtb	r2, r3
 8000cdc:	687b      	ldr	r3, [r7, #4]
 8000cde:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
	inputs->BSIUDO03Demand = BDO03Demand;
 8000ce2:	4b2b      	ldr	r3, [pc, #172]	; (8000d90 <ReadInputs+0x294>)
 8000ce4:	781b      	ldrb	r3, [r3, #0]
 8000ce6:	b2da      	uxtb	r2, r3
 8000ce8:	687b      	ldr	r3, [r7, #4]
 8000cea:	f883 2022 	strb.w	r2, [r3, #34]	; 0x22
	inputs->BSIUDO04Demand = BDO04Demand;
 8000cee:	4b29      	ldr	r3, [pc, #164]	; (8000d94 <ReadInputs+0x298>)
 8000cf0:	781b      	ldrb	r3, [r3, #0]
 8000cf2:	b2da      	uxtb	r2, r3
 8000cf4:	687b      	ldr	r3, [r7, #4]
 8000cf6:	f883 2023 	strb.w	r2, [r3, #35]	; 0x23

	// ---------------------------------------------------------------------------------------------------
	//Clutch Paddle

	inputs->VrClutchPaddle = inputs->VSIUAnalog01;
 8000cfa:	687b      	ldr	r3, [r7, #4]
 8000cfc:	681a      	ldr	r2, [r3, #0]
 8000cfe:	687b      	ldr	r3, [r7, #4]
 8000d00:	629a      	str	r2, [r3, #40]	; 0x28

	//Mapping
	inputs->BrClutchPaddleInError= My2DMapInterpolate(CLUTCH_PADDLE_MAP_SIZE, rClutchMap, inputs->VrClutchPaddle, &(inputs->rClutchPaddleRaw), VrCLUTCH_MARGIN_MIN, VrCLUTCH_MARGIN_MAX);
 8000d02:	687b      	ldr	r3, [r7, #4]
 8000d04:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8000d06:	687b      	ldr	r3, [r7, #4]
 8000d08:	332c      	adds	r3, #44	; 0x2c
 8000d0a:	4923      	ldr	r1, [pc, #140]	; (8000d98 <ReadInputs+0x29c>)
 8000d0c:	9101      	str	r1, [sp, #4]
 8000d0e:	4922      	ldr	r1, [pc, #136]	; (8000d98 <ReadInputs+0x29c>)
 8000d10:	9100      	str	r1, [sp, #0]
 8000d12:	4922      	ldr	r1, [pc, #136]	; (8000d9c <ReadInputs+0x2a0>)
 8000d14:	2002      	movs	r0, #2
 8000d16:	f001 fa5d 	bl	80021d4 <My2DMapInterpolate>
 8000d1a:	4603      	mov	r3, r0
 8000d1c:	461a      	mov	r2, r3
 8000d1e:	687b      	ldr	r3, [r7, #4]
 8000d20:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24

	// Conversion from Float to int8_t
	inputs->rClutchPaddle = (int8_t)round(inputs->rClutchPaddleRaw);
 8000d24:	687b      	ldr	r3, [r7, #4]
 8000d26:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8000d28:	4618      	mov	r0, r3
 8000d2a:	f7ff fb73 	bl	8000414 <__aeabi_f2d>
 8000d2e:	4602      	mov	r2, r0
 8000d30:	460b      	mov	r3, r1
 8000d32:	4610      	mov	r0, r2
 8000d34:	4619      	mov	r1, r3
 8000d36:	f005 fac1 	bl	80062bc <round>
 8000d3a:	4602      	mov	r2, r0
 8000d3c:	460b      	mov	r3, r1
 8000d3e:	4610      	mov	r0, r2
 8000d40:	4619      	mov	r1, r3
 8000d42:	f7ff fbbf 	bl	80004c4 <__aeabi_d2iz>
 8000d46:	4603      	mov	r3, r0
 8000d48:	b25a      	sxtb	r2, r3
 8000d4a:	687b      	ldr	r3, [r7, #4]
 8000d4c:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30

	//Clamping
	inputs->rClutchPaddle = CLAMP(inputs->rClutchPaddle, rCLUTCH_PADDLE_MIN, rCLUTCH_PADDLE_MAX);
 8000d50:	687b      	ldr	r3, [r7, #4]
 8000d52:	f993 3030 	ldrsb.w	r3, [r3, #48]	; 0x30
 8000d56:	2b67      	cmp	r3, #103	; 0x67
 8000d58:	dc22      	bgt.n	8000da0 <ReadInputs+0x2a4>
 8000d5a:	687b      	ldr	r3, [r7, #4]
 8000d5c:	f993 3030 	ldrsb.w	r3, [r3, #48]	; 0x30
 8000d60:	f06f 0203 	mvn.w	r2, #3
 8000d64:	4293      	cmp	r3, r2
 8000d66:	bfb8      	it	lt
 8000d68:	4613      	movlt	r3, r2
 8000d6a:	b25a      	sxtb	r2, r3
 8000d6c:	e019      	b.n	8000da2 <ReadInputs+0x2a6>
 8000d6e:	bf00      	nop
 8000d70:	20000084 	.word	0x20000084
 8000d74:	200000b8 	.word	0x200000b8
 8000d78:	20000278 	.word	0x20000278
 8000d7c:	4055c28f 	.word	0x4055c28f
 8000d80:	457ff000 	.word	0x457ff000
 8000d84:	40010c00 	.word	0x40010c00
 8000d88:	200000b0 	.word	0x200000b0
 8000d8c:	200000b2 	.word	0x200000b2
 8000d90:	200000b1 	.word	0x200000b1
 8000d94:	200000b3 	.word	0x200000b3
 8000d98:	3dcccccd 	.word	0x3dcccccd
 8000d9c:	08006380 	.word	0x08006380
 8000da0:	2268      	movs	r2, #104	; 0x68
 8000da2:	687b      	ldr	r3, [r7, #4]
 8000da4:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30

	// ---------------------------------------------------------------------------------------------------
	// PCB Supply Voltage Conditioning

	inputs->VSupply = inputs->VSIUAnalog04 / VSUPPLY_DIVIDER_GAIN;
 8000da8:	687b      	ldr	r3, [r7, #4]
 8000daa:	68db      	ldr	r3, [r3, #12]
 8000dac:	4997      	ldr	r1, [pc, #604]	; (800100c <ReadInputs+0x510>)
 8000dae:	4618      	mov	r0, r3
 8000db0:	f7ff fd72 	bl	8000898 <__aeabi_fdiv>
 8000db4:	4603      	mov	r3, r0
 8000db6:	461a      	mov	r2, r3
 8000db8:	687b      	ldr	r3, [r7, #4]
 8000dba:	649a      	str	r2, [r3, #72]	; 0x48

	// ---------------------------------------------------------------------------------------------------
	// SIU Inputs

	// Up Shift Button
	if(inputs->BSIUDIN01 && tUpButtonTimer < tInputsTimer && !inputs->BUpShiftButtonState) {
 8000dbc:	687b      	ldr	r3, [r7, #4]
 8000dbe:	7e1b      	ldrb	r3, [r3, #24]
 8000dc0:	2b00      	cmp	r3, #0
 8000dc2:	d01c      	beq.n	8000dfe <ReadInputs+0x302>
 8000dc4:	4b92      	ldr	r3, [pc, #584]	; (8001010 <ReadInputs+0x514>)
 8000dc6:	681a      	ldr	r2, [r3, #0]
 8000dc8:	4b92      	ldr	r3, [pc, #584]	; (8001014 <ReadInputs+0x518>)
 8000dca:	681b      	ldr	r3, [r3, #0]
 8000dcc:	429a      	cmp	r2, r3
 8000dce:	d216      	bcs.n	8000dfe <ReadInputs+0x302>
 8000dd0:	687b      	ldr	r3, [r7, #4]
 8000dd2:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 8000dd6:	2b00      	cmp	r3, #0
 8000dd8:	d111      	bne.n	8000dfe <ReadInputs+0x302>
		inputs->BUpShiftButtonState = 1;
 8000dda:	687b      	ldr	r3, [r7, #4]
 8000ddc:	2201      	movs	r2, #1
 8000dde:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
		inputs->BUpShiftButtonPressed = 1;
 8000de2:	687b      	ldr	r3, [r7, #4]
 8000de4:	2201      	movs	r2, #1
 8000de6:	f883 2031 	strb.w	r2, [r3, #49]	; 0x31
		tUpButtonTimer = tInputsTimer;
 8000dea:	4b8a      	ldr	r3, [pc, #552]	; (8001014 <ReadInputs+0x518>)
 8000dec:	681b      	ldr	r3, [r3, #0]
 8000dee:	4a88      	ldr	r2, [pc, #544]	; (8001010 <ReadInputs+0x514>)
 8000df0:	6013      	str	r3, [r2, #0]
		tUpButtonTimer += UP_BUTTON_DEBOUNCE;
 8000df2:	4b87      	ldr	r3, [pc, #540]	; (8001010 <ReadInputs+0x514>)
 8000df4:	681b      	ldr	r3, [r3, #0]
 8000df6:	3332      	adds	r3, #50	; 0x32
 8000df8:	4a85      	ldr	r2, [pc, #532]	; (8001010 <ReadInputs+0x514>)
 8000dfa:	6013      	str	r3, [r2, #0]
 8000dfc:	e014      	b.n	8000e28 <ReadInputs+0x32c>
	}
	else if(!inputs->BSIUDIN01 && inputs->BUpShiftButtonState) {
 8000dfe:	687b      	ldr	r3, [r7, #4]
 8000e00:	7e1b      	ldrb	r3, [r3, #24]
 8000e02:	2b00      	cmp	r3, #0
 8000e04:	d110      	bne.n	8000e28 <ReadInputs+0x32c>
 8000e06:	687b      	ldr	r3, [r7, #4]
 8000e08:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 8000e0c:	2b00      	cmp	r3, #0
 8000e0e:	d00b      	beq.n	8000e28 <ReadInputs+0x32c>
		inputs->BUpShiftButtonState = 0;
 8000e10:	687b      	ldr	r3, [r7, #4]
 8000e12:	2200      	movs	r2, #0
 8000e14:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
		inputs->BUpShiftButtonPressed = 0;
 8000e18:	687b      	ldr	r3, [r7, #4]
 8000e1a:	2200      	movs	r2, #0
 8000e1c:	f883 2031 	strb.w	r2, [r3, #49]	; 0x31
		tUpButtonStuckTimmer = tInputsTimer;
 8000e20:	4b7c      	ldr	r3, [pc, #496]	; (8001014 <ReadInputs+0x518>)
 8000e22:	681b      	ldr	r3, [r3, #0]
 8000e24:	4a7c      	ldr	r2, [pc, #496]	; (8001018 <ReadInputs+0x51c>)
 8000e26:	6013      	str	r3, [r2, #0]
	}
	// Auto reset Strategy
	if(inputs->BUpShiftButtonPressed && (tUpButtonTimer + UP_BUTTON_RESET_TIMEOUT) < tInputsTimer) {
 8000e28:	687b      	ldr	r3, [r7, #4]
 8000e2a:	f893 3031 	ldrb.w	r3, [r3, #49]	; 0x31
 8000e2e:	2b00      	cmp	r3, #0
 8000e30:	d00b      	beq.n	8000e4a <ReadInputs+0x34e>
 8000e32:	4b77      	ldr	r3, [pc, #476]	; (8001010 <ReadInputs+0x514>)
 8000e34:	681b      	ldr	r3, [r3, #0]
 8000e36:	f203 32b6 	addw	r2, r3, #950	; 0x3b6
 8000e3a:	4b76      	ldr	r3, [pc, #472]	; (8001014 <ReadInputs+0x518>)
 8000e3c:	681b      	ldr	r3, [r3, #0]
 8000e3e:	429a      	cmp	r2, r3
 8000e40:	d203      	bcs.n	8000e4a <ReadInputs+0x34e>
		inputs->BUpShiftButtonPressed = 0;
 8000e42:	687b      	ldr	r3, [r7, #4]
 8000e44:	2200      	movs	r2, #0
 8000e46:	f883 2031 	strb.w	r2, [r3, #49]	; 0x31
	}
	// Stuck Detection
	if(inputs->BUpShiftButtonState && (tUpButtonTimer + UP_BUTTON_STUCK_TIMEOUT) < tInputsTimer) {
 8000e4a:	687b      	ldr	r3, [r7, #4]
 8000e4c:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 8000e50:	2b00      	cmp	r3, #0
 8000e52:	d00c      	beq.n	8000e6e <ReadInputs+0x372>
 8000e54:	4b6e      	ldr	r3, [pc, #440]	; (8001010 <ReadInputs+0x514>)
 8000e56:	681b      	ldr	r3, [r3, #0]
 8000e58:	f603 726e 	addw	r2, r3, #3950	; 0xf6e
 8000e5c:	4b6d      	ldr	r3, [pc, #436]	; (8001014 <ReadInputs+0x518>)
 8000e5e:	681b      	ldr	r3, [r3, #0]
 8000e60:	429a      	cmp	r2, r3
 8000e62:	d204      	bcs.n	8000e6e <ReadInputs+0x372>
		inputs->BUpShiftButtonInError = 1;
 8000e64:	687b      	ldr	r3, [r7, #4]
 8000e66:	2201      	movs	r2, #1
 8000e68:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8000e6c:	e010      	b.n	8000e90 <ReadInputs+0x394>
	}
	else if(!inputs->BUpShiftButtonState && (tUpButtonStuckTimmer + UP_BUTTON_STUCK_TIMEOUT) < tInputsTimer) {
 8000e6e:	687b      	ldr	r3, [r7, #4]
 8000e70:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 8000e74:	2b00      	cmp	r3, #0
 8000e76:	d10b      	bne.n	8000e90 <ReadInputs+0x394>
 8000e78:	4b67      	ldr	r3, [pc, #412]	; (8001018 <ReadInputs+0x51c>)
 8000e7a:	681b      	ldr	r3, [r3, #0]
 8000e7c:	f603 726e 	addw	r2, r3, #3950	; 0xf6e
 8000e80:	4b64      	ldr	r3, [pc, #400]	; (8001014 <ReadInputs+0x518>)
 8000e82:	681b      	ldr	r3, [r3, #0]
 8000e84:	429a      	cmp	r2, r3
 8000e86:	d203      	bcs.n	8000e90 <ReadInputs+0x394>
		inputs->BUpShiftButtonInError = 0;
 8000e88:	687b      	ldr	r3, [r7, #4]
 8000e8a:	2200      	movs	r2, #0
 8000e8c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
	}

	// Down Shift Button
	if(inputs->BSIUDIN02 && tDnButtonTimer < tInputsTimer && !inputs->BDnShiftButtonState) {
 8000e90:	687b      	ldr	r3, [r7, #4]
 8000e92:	7e5b      	ldrb	r3, [r3, #25]
 8000e94:	2b00      	cmp	r3, #0
 8000e96:	d01c      	beq.n	8000ed2 <ReadInputs+0x3d6>
 8000e98:	4b60      	ldr	r3, [pc, #384]	; (800101c <ReadInputs+0x520>)
 8000e9a:	681a      	ldr	r2, [r3, #0]
 8000e9c:	4b5d      	ldr	r3, [pc, #372]	; (8001014 <ReadInputs+0x518>)
 8000e9e:	681b      	ldr	r3, [r3, #0]
 8000ea0:	429a      	cmp	r2, r3
 8000ea2:	d216      	bcs.n	8000ed2 <ReadInputs+0x3d6>
 8000ea4:	687b      	ldr	r3, [r7, #4]
 8000ea6:	f893 303a 	ldrb.w	r3, [r3, #58]	; 0x3a
 8000eaa:	2b00      	cmp	r3, #0
 8000eac:	d111      	bne.n	8000ed2 <ReadInputs+0x3d6>
		inputs->BDnShiftButtonState = 1;
 8000eae:	687b      	ldr	r3, [r7, #4]
 8000eb0:	2201      	movs	r2, #1
 8000eb2:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
		inputs->BDnShiftButtonPressed = 1;
 8000eb6:	687b      	ldr	r3, [r7, #4]
 8000eb8:	2201      	movs	r2, #1
 8000eba:	f883 2032 	strb.w	r2, [r3, #50]	; 0x32
		tDnButtonTimer = tInputsTimer;
 8000ebe:	4b55      	ldr	r3, [pc, #340]	; (8001014 <ReadInputs+0x518>)
 8000ec0:	681b      	ldr	r3, [r3, #0]
 8000ec2:	4a56      	ldr	r2, [pc, #344]	; (800101c <ReadInputs+0x520>)
 8000ec4:	6013      	str	r3, [r2, #0]
		tDnButtonTimer += DN_BUTTON_DEBOUNCE;
 8000ec6:	4b55      	ldr	r3, [pc, #340]	; (800101c <ReadInputs+0x520>)
 8000ec8:	681b      	ldr	r3, [r3, #0]
 8000eca:	3332      	adds	r3, #50	; 0x32
 8000ecc:	4a53      	ldr	r2, [pc, #332]	; (800101c <ReadInputs+0x520>)
 8000ece:	6013      	str	r3, [r2, #0]
 8000ed0:	e014      	b.n	8000efc <ReadInputs+0x400>
	}
	else if(!inputs->BSIUDIN02 && inputs->BDnShiftButtonState) {
 8000ed2:	687b      	ldr	r3, [r7, #4]
 8000ed4:	7e5b      	ldrb	r3, [r3, #25]
 8000ed6:	2b00      	cmp	r3, #0
 8000ed8:	d110      	bne.n	8000efc <ReadInputs+0x400>
 8000eda:	687b      	ldr	r3, [r7, #4]
 8000edc:	f893 303a 	ldrb.w	r3, [r3, #58]	; 0x3a
 8000ee0:	2b00      	cmp	r3, #0
 8000ee2:	d00b      	beq.n	8000efc <ReadInputs+0x400>
		inputs->BDnShiftButtonState = 0;
 8000ee4:	687b      	ldr	r3, [r7, #4]
 8000ee6:	2200      	movs	r2, #0
 8000ee8:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
		inputs->BDnShiftButtonPressed = 0;
 8000eec:	687b      	ldr	r3, [r7, #4]
 8000eee:	2200      	movs	r2, #0
 8000ef0:	f883 2032 	strb.w	r2, [r3, #50]	; 0x32
		tDnButtonStuckTimmer = tInputsTimer;
 8000ef4:	4b47      	ldr	r3, [pc, #284]	; (8001014 <ReadInputs+0x518>)
 8000ef6:	681b      	ldr	r3, [r3, #0]
 8000ef8:	4a49      	ldr	r2, [pc, #292]	; (8001020 <ReadInputs+0x524>)
 8000efa:	6013      	str	r3, [r2, #0]
	}
	// Auto reset Strategy
	if(inputs->BDnShiftButtonPressed && (tDnButtonTimer + DN_BUTTON_RESET_TIMEOUT) < tInputsTimer) {
 8000efc:	687b      	ldr	r3, [r7, #4]
 8000efe:	f893 3032 	ldrb.w	r3, [r3, #50]	; 0x32
 8000f02:	2b00      	cmp	r3, #0
 8000f04:	d00b      	beq.n	8000f1e <ReadInputs+0x422>
 8000f06:	4b45      	ldr	r3, [pc, #276]	; (800101c <ReadInputs+0x520>)
 8000f08:	681b      	ldr	r3, [r3, #0]
 8000f0a:	f203 32b6 	addw	r2, r3, #950	; 0x3b6
 8000f0e:	4b41      	ldr	r3, [pc, #260]	; (8001014 <ReadInputs+0x518>)
 8000f10:	681b      	ldr	r3, [r3, #0]
 8000f12:	429a      	cmp	r2, r3
 8000f14:	d203      	bcs.n	8000f1e <ReadInputs+0x422>
		inputs->BDnShiftButtonPressed = 0;
 8000f16:	687b      	ldr	r3, [r7, #4]
 8000f18:	2200      	movs	r2, #0
 8000f1a:	f883 2032 	strb.w	r2, [r3, #50]	; 0x32
	}
	// Stuck Detection
	if(inputs->BDnShiftButtonState && (tDnButtonTimer + DN_BUTTON_STUCK_TIMEOUT) < tInputsTimer) {
 8000f1e:	687b      	ldr	r3, [r7, #4]
 8000f20:	f893 303a 	ldrb.w	r3, [r3, #58]	; 0x3a
 8000f24:	2b00      	cmp	r3, #0
 8000f26:	d00c      	beq.n	8000f42 <ReadInputs+0x446>
 8000f28:	4b3c      	ldr	r3, [pc, #240]	; (800101c <ReadInputs+0x520>)
 8000f2a:	681b      	ldr	r3, [r3, #0]
 8000f2c:	f603 726e 	addw	r2, r3, #3950	; 0xf6e
 8000f30:	4b38      	ldr	r3, [pc, #224]	; (8001014 <ReadInputs+0x518>)
 8000f32:	681b      	ldr	r3, [r3, #0]
 8000f34:	429a      	cmp	r2, r3
 8000f36:	d204      	bcs.n	8000f42 <ReadInputs+0x446>
		inputs->BDnShiftButtonInError = 1;
 8000f38:	687b      	ldr	r3, [r7, #4]
 8000f3a:	2201      	movs	r2, #1
 8000f3c:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8000f40:	e010      	b.n	8000f64 <ReadInputs+0x468>
	}
	else if(!inputs->BDnShiftButtonState && (tDnButtonStuckTimmer + DN_BUTTON_STUCK_TIMEOUT) < tInputsTimer) {
 8000f42:	687b      	ldr	r3, [r7, #4]
 8000f44:	f893 303a 	ldrb.w	r3, [r3, #58]	; 0x3a
 8000f48:	2b00      	cmp	r3, #0
 8000f4a:	d10b      	bne.n	8000f64 <ReadInputs+0x468>
 8000f4c:	4b34      	ldr	r3, [pc, #208]	; (8001020 <ReadInputs+0x524>)
 8000f4e:	681b      	ldr	r3, [r3, #0]
 8000f50:	f603 726e 	addw	r2, r3, #3950	; 0xf6e
 8000f54:	4b2f      	ldr	r3, [pc, #188]	; (8001014 <ReadInputs+0x518>)
 8000f56:	681b      	ldr	r3, [r3, #0]
 8000f58:	429a      	cmp	r2, r3
 8000f5a:	d203      	bcs.n	8000f64 <ReadInputs+0x468>
		inputs->BDnShiftButtonInError = 0;
 8000f5c:	687b      	ldr	r3, [r7, #4]
 8000f5e:	2200      	movs	r2, #0
 8000f60:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
	}

	// Button A
	if(inputs->BSIUDIN03 && tButtonATimer < tInputsTimer && !inputs->BButtonAState) {
 8000f64:	687b      	ldr	r3, [r7, #4]
 8000f66:	7e9b      	ldrb	r3, [r3, #26]
 8000f68:	2b00      	cmp	r3, #0
 8000f6a:	d01c      	beq.n	8000fa6 <ReadInputs+0x4aa>
 8000f6c:	4b2d      	ldr	r3, [pc, #180]	; (8001024 <ReadInputs+0x528>)
 8000f6e:	681a      	ldr	r2, [r3, #0]
 8000f70:	4b28      	ldr	r3, [pc, #160]	; (8001014 <ReadInputs+0x518>)
 8000f72:	681b      	ldr	r3, [r3, #0]
 8000f74:	429a      	cmp	r2, r3
 8000f76:	d216      	bcs.n	8000fa6 <ReadInputs+0x4aa>
 8000f78:	687b      	ldr	r3, [r7, #4]
 8000f7a:	f893 303b 	ldrb.w	r3, [r3, #59]	; 0x3b
 8000f7e:	2b00      	cmp	r3, #0
 8000f80:	d111      	bne.n	8000fa6 <ReadInputs+0x4aa>
		inputs->BButtonAState = 1;
 8000f82:	687b      	ldr	r3, [r7, #4]
 8000f84:	2201      	movs	r2, #1
 8000f86:	f883 203b 	strb.w	r2, [r3, #59]	; 0x3b
		inputs->BButtonAPressed = 1;
 8000f8a:	687b      	ldr	r3, [r7, #4]
 8000f8c:	2201      	movs	r2, #1
 8000f8e:	f883 2033 	strb.w	r2, [r3, #51]	; 0x33
		tButtonATimer = tInputsTimer;
 8000f92:	4b20      	ldr	r3, [pc, #128]	; (8001014 <ReadInputs+0x518>)
 8000f94:	681b      	ldr	r3, [r3, #0]
 8000f96:	4a23      	ldr	r2, [pc, #140]	; (8001024 <ReadInputs+0x528>)
 8000f98:	6013      	str	r3, [r2, #0]
		tButtonATimer += BUTTON_A_DEBOUNCE;
 8000f9a:	4b22      	ldr	r3, [pc, #136]	; (8001024 <ReadInputs+0x528>)
 8000f9c:	681b      	ldr	r3, [r3, #0]
 8000f9e:	3364      	adds	r3, #100	; 0x64
 8000fa0:	4a20      	ldr	r2, [pc, #128]	; (8001024 <ReadInputs+0x528>)
 8000fa2:	6013      	str	r3, [r2, #0]
 8000fa4:	e010      	b.n	8000fc8 <ReadInputs+0x4cc>
	}
	else if(!inputs->BSIUDIN03 && inputs->BButtonAState) {
 8000fa6:	687b      	ldr	r3, [r7, #4]
 8000fa8:	7e9b      	ldrb	r3, [r3, #26]
 8000faa:	2b00      	cmp	r3, #0
 8000fac:	d10c      	bne.n	8000fc8 <ReadInputs+0x4cc>
 8000fae:	687b      	ldr	r3, [r7, #4]
 8000fb0:	f893 303b 	ldrb.w	r3, [r3, #59]	; 0x3b
 8000fb4:	2b00      	cmp	r3, #0
 8000fb6:	d007      	beq.n	8000fc8 <ReadInputs+0x4cc>
		inputs->BButtonAState = 0;
 8000fb8:	687b      	ldr	r3, [r7, #4]
 8000fba:	2200      	movs	r2, #0
 8000fbc:	f883 203b 	strb.w	r2, [r3, #59]	; 0x3b
		inputs->BButtonAPressed = 0;
 8000fc0:	687b      	ldr	r3, [r7, #4]
 8000fc2:	2200      	movs	r2, #0
 8000fc4:	f883 2033 	strb.w	r2, [r3, #51]	; 0x33
	}

	// Button B
	if(inputs->BSIUDIN04 && tButtonBTimer < tInputsTimer && !inputs->BButtonBState) {
 8000fc8:	687b      	ldr	r3, [r7, #4]
 8000fca:	7edb      	ldrb	r3, [r3, #27]
 8000fcc:	2b00      	cmp	r3, #0
 8000fce:	d02d      	beq.n	800102c <ReadInputs+0x530>
 8000fd0:	4b15      	ldr	r3, [pc, #84]	; (8001028 <ReadInputs+0x52c>)
 8000fd2:	681a      	ldr	r2, [r3, #0]
 8000fd4:	4b0f      	ldr	r3, [pc, #60]	; (8001014 <ReadInputs+0x518>)
 8000fd6:	681b      	ldr	r3, [r3, #0]
 8000fd8:	429a      	cmp	r2, r3
 8000fda:	d227      	bcs.n	800102c <ReadInputs+0x530>
 8000fdc:	687b      	ldr	r3, [r7, #4]
 8000fde:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8000fe2:	2b00      	cmp	r3, #0
 8000fe4:	d122      	bne.n	800102c <ReadInputs+0x530>
		inputs->BButtonBState = 1;
 8000fe6:	687b      	ldr	r3, [r7, #4]
 8000fe8:	2201      	movs	r2, #1
 8000fea:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
		inputs->BButtonBPressed = 1;
 8000fee:	687b      	ldr	r3, [r7, #4]
 8000ff0:	2201      	movs	r2, #1
 8000ff2:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
		tButtonBTimer = tInputsTimer;
 8000ff6:	4b07      	ldr	r3, [pc, #28]	; (8001014 <ReadInputs+0x518>)
 8000ff8:	681b      	ldr	r3, [r3, #0]
 8000ffa:	4a0b      	ldr	r2, [pc, #44]	; (8001028 <ReadInputs+0x52c>)
 8000ffc:	6013      	str	r3, [r2, #0]
		tButtonBTimer += BUTTON_B_DEBOUNCE;
 8000ffe:	4b0a      	ldr	r3, [pc, #40]	; (8001028 <ReadInputs+0x52c>)
 8001000:	681b      	ldr	r3, [r3, #0]
 8001002:	3364      	adds	r3, #100	; 0x64
 8001004:	4a08      	ldr	r2, [pc, #32]	; (8001028 <ReadInputs+0x52c>)
 8001006:	6013      	str	r3, [r2, #0]
 8001008:	e021      	b.n	800104e <ReadInputs+0x552>
 800100a:	bf00      	nop
 800100c:	3e62f05a 	.word	0x3e62f05a
 8001010:	20000088 	.word	0x20000088
 8001014:	20000084 	.word	0x20000084
 8001018:	2000008c 	.word	0x2000008c
 800101c:	20000090 	.word	0x20000090
 8001020:	20000094 	.word	0x20000094
 8001024:	20000098 	.word	0x20000098
 8001028:	2000009c 	.word	0x2000009c
	}
	else if(!inputs->BSIUDIN04 && inputs->BButtonBState) {
 800102c:	687b      	ldr	r3, [r7, #4]
 800102e:	7edb      	ldrb	r3, [r3, #27]
 8001030:	2b00      	cmp	r3, #0
 8001032:	d10c      	bne.n	800104e <ReadInputs+0x552>
 8001034:	687b      	ldr	r3, [r7, #4]
 8001036:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800103a:	2b00      	cmp	r3, #0
 800103c:	d007      	beq.n	800104e <ReadInputs+0x552>
		inputs->BButtonBState = 0;
 800103e:	687b      	ldr	r3, [r7, #4]
 8001040:	2200      	movs	r2, #0
 8001042:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
		inputs->BButtonBPressed = 0;
 8001046:	687b      	ldr	r3, [r7, #4]
 8001048:	2200      	movs	r2, #0
 800104a:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
	}

	// Button C
	if(inputs->BSIUDIN05 && tButtonCTimer < tInputsTimer && !inputs->BButtonCState) {
 800104e:	687b      	ldr	r3, [r7, #4]
 8001050:	7f1b      	ldrb	r3, [r3, #28]
 8001052:	2b00      	cmp	r3, #0
 8001054:	d01c      	beq.n	8001090 <ReadInputs+0x594>
 8001056:	4b64      	ldr	r3, [pc, #400]	; (80011e8 <ReadInputs+0x6ec>)
 8001058:	681a      	ldr	r2, [r3, #0]
 800105a:	4b64      	ldr	r3, [pc, #400]	; (80011ec <ReadInputs+0x6f0>)
 800105c:	681b      	ldr	r3, [r3, #0]
 800105e:	429a      	cmp	r2, r3
 8001060:	d216      	bcs.n	8001090 <ReadInputs+0x594>
 8001062:	687b      	ldr	r3, [r7, #4]
 8001064:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8001068:	2b00      	cmp	r3, #0
 800106a:	d111      	bne.n	8001090 <ReadInputs+0x594>
		inputs->BButtonCState = 1;
 800106c:	687b      	ldr	r3, [r7, #4]
 800106e:	2201      	movs	r2, #1
 8001070:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
		inputs->BButtonCPressed = 1;
 8001074:	687b      	ldr	r3, [r7, #4]
 8001076:	2201      	movs	r2, #1
 8001078:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
		tButtonCTimer = tInputsTimer;
 800107c:	4b5b      	ldr	r3, [pc, #364]	; (80011ec <ReadInputs+0x6f0>)
 800107e:	681b      	ldr	r3, [r3, #0]
 8001080:	4a59      	ldr	r2, [pc, #356]	; (80011e8 <ReadInputs+0x6ec>)
 8001082:	6013      	str	r3, [r2, #0]
		tButtonCTimer += BUTTON_C_DEBOUNCE;
 8001084:	4b58      	ldr	r3, [pc, #352]	; (80011e8 <ReadInputs+0x6ec>)
 8001086:	681b      	ldr	r3, [r3, #0]
 8001088:	3364      	adds	r3, #100	; 0x64
 800108a:	4a57      	ldr	r2, [pc, #348]	; (80011e8 <ReadInputs+0x6ec>)
 800108c:	6013      	str	r3, [r2, #0]
 800108e:	e010      	b.n	80010b2 <ReadInputs+0x5b6>
	}
	else if(!inputs->BSIUDIN05 && inputs->BButtonCState) {
 8001090:	687b      	ldr	r3, [r7, #4]
 8001092:	7f1b      	ldrb	r3, [r3, #28]
 8001094:	2b00      	cmp	r3, #0
 8001096:	d10c      	bne.n	80010b2 <ReadInputs+0x5b6>
 8001098:	687b      	ldr	r3, [r7, #4]
 800109a:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800109e:	2b00      	cmp	r3, #0
 80010a0:	d007      	beq.n	80010b2 <ReadInputs+0x5b6>
		inputs->BButtonCState = 0;
 80010a2:	687b      	ldr	r3, [r7, #4]
 80010a4:	2200      	movs	r2, #0
 80010a6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
		inputs->BButtonCPressed = 0;
 80010aa:	687b      	ldr	r3, [r7, #4]
 80010ac:	2200      	movs	r2, #0
 80010ae:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
	}

	// Button D
	if(inputs->BSIUDIN06 && tButtonDTimer < tInputsTimer && !inputs->BButtonDState) {
 80010b2:	687b      	ldr	r3, [r7, #4]
 80010b4:	7f5b      	ldrb	r3, [r3, #29]
 80010b6:	2b00      	cmp	r3, #0
 80010b8:	d01c      	beq.n	80010f4 <ReadInputs+0x5f8>
 80010ba:	4b4d      	ldr	r3, [pc, #308]	; (80011f0 <ReadInputs+0x6f4>)
 80010bc:	681a      	ldr	r2, [r3, #0]
 80010be:	4b4b      	ldr	r3, [pc, #300]	; (80011ec <ReadInputs+0x6f0>)
 80010c0:	681b      	ldr	r3, [r3, #0]
 80010c2:	429a      	cmp	r2, r3
 80010c4:	d216      	bcs.n	80010f4 <ReadInputs+0x5f8>
 80010c6:	687b      	ldr	r3, [r7, #4]
 80010c8:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 80010cc:	2b00      	cmp	r3, #0
 80010ce:	d111      	bne.n	80010f4 <ReadInputs+0x5f8>
		inputs->BButtonDState = 1;
 80010d0:	687b      	ldr	r3, [r7, #4]
 80010d2:	2201      	movs	r2, #1
 80010d4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
		inputs->BButtonDPressed = 1;
 80010d8:	687b      	ldr	r3, [r7, #4]
 80010da:	2201      	movs	r2, #1
 80010dc:	f883 2036 	strb.w	r2, [r3, #54]	; 0x36
		tButtonDTimer = tInputsTimer;
 80010e0:	4b42      	ldr	r3, [pc, #264]	; (80011ec <ReadInputs+0x6f0>)
 80010e2:	681b      	ldr	r3, [r3, #0]
 80010e4:	4a42      	ldr	r2, [pc, #264]	; (80011f0 <ReadInputs+0x6f4>)
 80010e6:	6013      	str	r3, [r2, #0]
		tButtonDTimer += BUTTON_D_DEBOUNCE;
 80010e8:	4b41      	ldr	r3, [pc, #260]	; (80011f0 <ReadInputs+0x6f4>)
 80010ea:	681b      	ldr	r3, [r3, #0]
 80010ec:	3364      	adds	r3, #100	; 0x64
 80010ee:	4a40      	ldr	r2, [pc, #256]	; (80011f0 <ReadInputs+0x6f4>)
 80010f0:	6013      	str	r3, [r2, #0]
 80010f2:	e010      	b.n	8001116 <ReadInputs+0x61a>
	}
	else if(!inputs->BSIUDIN06 && inputs->BButtonDState) {
 80010f4:	687b      	ldr	r3, [r7, #4]
 80010f6:	7f5b      	ldrb	r3, [r3, #29]
 80010f8:	2b00      	cmp	r3, #0
 80010fa:	d10c      	bne.n	8001116 <ReadInputs+0x61a>
 80010fc:	687b      	ldr	r3, [r7, #4]
 80010fe:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8001102:	2b00      	cmp	r3, #0
 8001104:	d007      	beq.n	8001116 <ReadInputs+0x61a>
		inputs->BButtonDState = 0;
 8001106:	687b      	ldr	r3, [r7, #4]
 8001108:	2200      	movs	r2, #0
 800110a:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
		inputs->BButtonDPressed = 0;
 800110e:	687b      	ldr	r3, [r7, #4]
 8001110:	2200      	movs	r2, #0
 8001112:	f883 2036 	strb.w	r2, [r3, #54]	; 0x36
	}

	// Button E
	if(inputs->BSIUDIN07 && tButtonETimer < tInputsTimer && !inputs->BButtonEState) {
 8001116:	687b      	ldr	r3, [r7, #4]
 8001118:	7f9b      	ldrb	r3, [r3, #30]
 800111a:	2b00      	cmp	r3, #0
 800111c:	d01c      	beq.n	8001158 <ReadInputs+0x65c>
 800111e:	4b35      	ldr	r3, [pc, #212]	; (80011f4 <ReadInputs+0x6f8>)
 8001120:	681a      	ldr	r2, [r3, #0]
 8001122:	4b32      	ldr	r3, [pc, #200]	; (80011ec <ReadInputs+0x6f0>)
 8001124:	681b      	ldr	r3, [r3, #0]
 8001126:	429a      	cmp	r2, r3
 8001128:	d216      	bcs.n	8001158 <ReadInputs+0x65c>
 800112a:	687b      	ldr	r3, [r7, #4]
 800112c:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 8001130:	2b00      	cmp	r3, #0
 8001132:	d111      	bne.n	8001158 <ReadInputs+0x65c>
		inputs->BButtonEState = 1;
 8001134:	687b      	ldr	r3, [r7, #4]
 8001136:	2201      	movs	r2, #1
 8001138:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
		inputs->BButtonEPressed = 1;
 800113c:	687b      	ldr	r3, [r7, #4]
 800113e:	2201      	movs	r2, #1
 8001140:	f883 2037 	strb.w	r2, [r3, #55]	; 0x37
		tButtonETimer = tInputsTimer;
 8001144:	4b29      	ldr	r3, [pc, #164]	; (80011ec <ReadInputs+0x6f0>)
 8001146:	681b      	ldr	r3, [r3, #0]
 8001148:	4a2a      	ldr	r2, [pc, #168]	; (80011f4 <ReadInputs+0x6f8>)
 800114a:	6013      	str	r3, [r2, #0]
		tButtonETimer += BUTTON_E_DEBOUNCE;
 800114c:	4b29      	ldr	r3, [pc, #164]	; (80011f4 <ReadInputs+0x6f8>)
 800114e:	681b      	ldr	r3, [r3, #0]
 8001150:	3364      	adds	r3, #100	; 0x64
 8001152:	4a28      	ldr	r2, [pc, #160]	; (80011f4 <ReadInputs+0x6f8>)
 8001154:	6013      	str	r3, [r2, #0]
 8001156:	e010      	b.n	800117a <ReadInputs+0x67e>
	}
	else if(!inputs->BSIUDIN07 && inputs->BButtonEState) {
 8001158:	687b      	ldr	r3, [r7, #4]
 800115a:	7f9b      	ldrb	r3, [r3, #30]
 800115c:	2b00      	cmp	r3, #0
 800115e:	d10c      	bne.n	800117a <ReadInputs+0x67e>
 8001160:	687b      	ldr	r3, [r7, #4]
 8001162:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 8001166:	2b00      	cmp	r3, #0
 8001168:	d007      	beq.n	800117a <ReadInputs+0x67e>
		inputs->BButtonEState = 0;
 800116a:	687b      	ldr	r3, [r7, #4]
 800116c:	2200      	movs	r2, #0
 800116e:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
		inputs->BButtonEPressed = 0;
 8001172:	687b      	ldr	r3, [r7, #4]
 8001174:	2200      	movs	r2, #0
 8001176:	f883 2037 	strb.w	r2, [r3, #55]	; 0x37
	}

	// Button F
	if(inputs->BSIUDIN08 && tButtonFTimer < tInputsTimer && !inputs->BButtonFState) {
 800117a:	687b      	ldr	r3, [r7, #4]
 800117c:	7fdb      	ldrb	r3, [r3, #31]
 800117e:	2b00      	cmp	r3, #0
 8001180:	d01c      	beq.n	80011bc <ReadInputs+0x6c0>
 8001182:	4b1d      	ldr	r3, [pc, #116]	; (80011f8 <ReadInputs+0x6fc>)
 8001184:	681a      	ldr	r2, [r3, #0]
 8001186:	4b19      	ldr	r3, [pc, #100]	; (80011ec <ReadInputs+0x6f0>)
 8001188:	681b      	ldr	r3, [r3, #0]
 800118a:	429a      	cmp	r2, r3
 800118c:	d216      	bcs.n	80011bc <ReadInputs+0x6c0>
 800118e:	687b      	ldr	r3, [r7, #4]
 8001190:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8001194:	2b00      	cmp	r3, #0
 8001196:	d111      	bne.n	80011bc <ReadInputs+0x6c0>
		inputs->BButtonFState = 1;
 8001198:	687b      	ldr	r3, [r7, #4]
 800119a:	2201      	movs	r2, #1
 800119c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
		inputs->BButtonFPressed = 1;
 80011a0:	687b      	ldr	r3, [r7, #4]
 80011a2:	2201      	movs	r2, #1
 80011a4:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
		tButtonFTimer = tInputsTimer;
 80011a8:	4b10      	ldr	r3, [pc, #64]	; (80011ec <ReadInputs+0x6f0>)
 80011aa:	681b      	ldr	r3, [r3, #0]
 80011ac:	4a12      	ldr	r2, [pc, #72]	; (80011f8 <ReadInputs+0x6fc>)
 80011ae:	6013      	str	r3, [r2, #0]
		tButtonFTimer += BUTTON_F_DEBOUNCE;
 80011b0:	4b11      	ldr	r3, [pc, #68]	; (80011f8 <ReadInputs+0x6fc>)
 80011b2:	681b      	ldr	r3, [r3, #0]
 80011b4:	3364      	adds	r3, #100	; 0x64
 80011b6:	4a10      	ldr	r2, [pc, #64]	; (80011f8 <ReadInputs+0x6fc>)
 80011b8:	6013      	str	r3, [r2, #0]
		inputs->BButtonFState = 0;
		inputs->BButtonFPressed = 0;
	}

	// ---------------------------------------------------------------------------------------------------
}
 80011ba:	e010      	b.n	80011de <ReadInputs+0x6e2>
	else if(!inputs->BSIUDIN08 && inputs->BButtonFState) {
 80011bc:	687b      	ldr	r3, [r7, #4]
 80011be:	7fdb      	ldrb	r3, [r3, #31]
 80011c0:	2b00      	cmp	r3, #0
 80011c2:	d10c      	bne.n	80011de <ReadInputs+0x6e2>
 80011c4:	687b      	ldr	r3, [r7, #4]
 80011c6:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 80011ca:	2b00      	cmp	r3, #0
 80011cc:	d007      	beq.n	80011de <ReadInputs+0x6e2>
		inputs->BButtonFState = 0;
 80011ce:	687b      	ldr	r3, [r7, #4]
 80011d0:	2200      	movs	r2, #0
 80011d2:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
		inputs->BButtonFPressed = 0;
 80011d6:	687b      	ldr	r3, [r7, #4]
 80011d8:	2200      	movs	r2, #0
 80011da:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
}
 80011de:	bf00      	nop
 80011e0:	3708      	adds	r7, #8
 80011e2:	46bd      	mov	sp, r7
 80011e4:	bd80      	pop	{r7, pc}
 80011e6:	bf00      	nop
 80011e8:	200000a0 	.word	0x200000a0
 80011ec:	20000084 	.word	0x20000084
 80011f0:	200000a4 	.word	0x200000a4
 80011f4:	200000a8 	.word	0x200000a8
 80011f8:	200000ac 	.word	0x200000ac

080011fc <InitInputs>:


void InitInputs(void) {
 80011fc:	b580      	push	{r7, lr}
 80011fe:	af00      	add	r7, sp, #0
	HAL_ADCEx_Calibration_Start(&hadc1);
 8001200:	4805      	ldr	r0, [pc, #20]	; (8001218 <InitInputs+0x1c>)
 8001202:	f001 fd03 	bl	8002c0c <HAL_ADCEx_Calibration_Start>
	HAL_ADC_Start_DMA(&hadc1, (uint32_t*)adcRawValue, ADC_BUFFER_SIZE);
 8001206:	f44f 6206 	mov.w	r2, #2144	; 0x860
 800120a:	4904      	ldr	r1, [pc, #16]	; (800121c <InitInputs+0x20>)
 800120c:	4802      	ldr	r0, [pc, #8]	; (8001218 <InitInputs+0x1c>)
 800120e:	f001 fa13 	bl	8002638 <HAL_ADC_Start_DMA>
}
 8001212:	bf00      	nop
 8001214:	bd80      	pop	{r7, pc}
 8001216:	bf00      	nop
 8001218:	200000bc 	.word	0x200000bc
 800121c:	20000278 	.word	0x20000278

08001220 <MyHalfBufferAverage>:


uint16_t MyHalfBufferAverage(uint16_t *buffer, uint16_t halfsize, uint8_t side, uint8_t offset) {
 8001220:	b480      	push	{r7}
 8001222:	b087      	sub	sp, #28
 8001224:	af00      	add	r7, sp, #0
 8001226:	6078      	str	r0, [r7, #4]
 8001228:	4608      	mov	r0, r1
 800122a:	4611      	mov	r1, r2
 800122c:	461a      	mov	r2, r3
 800122e:	4603      	mov	r3, r0
 8001230:	807b      	strh	r3, [r7, #2]
 8001232:	460b      	mov	r3, r1
 8001234:	707b      	strb	r3, [r7, #1]
 8001236:	4613      	mov	r3, r2
 8001238:	703b      	strb	r3, [r7, #0]

	uint32_t Accumulator = 0;
 800123a:	2300      	movs	r3, #0
 800123c:	617b      	str	r3, [r7, #20]
	uint16_t SideOffset = (side == 1 ? halfsize : 0);
 800123e:	787b      	ldrb	r3, [r7, #1]
 8001240:	2b01      	cmp	r3, #1
 8001242:	d101      	bne.n	8001248 <MyHalfBufferAverage+0x28>
 8001244:	887b      	ldrh	r3, [r7, #2]
 8001246:	e000      	b.n	800124a <MyHalfBufferAverage+0x2a>
 8001248:	2300      	movs	r3, #0
 800124a:	823b      	strh	r3, [r7, #16]
	uint16_t maxArrayIndex = halfsize / ADC_NUMBER_OF_CHANNELS;
 800124c:	887b      	ldrh	r3, [r7, #2]
 800124e:	089b      	lsrs	r3, r3, #2
 8001250:	81fb      	strh	r3, [r7, #14]

 	for(uint16_t i=0; i< maxArrayIndex; i++) {
 8001252:	2300      	movs	r3, #0
 8001254:	827b      	strh	r3, [r7, #18]
 8001256:	e010      	b.n	800127a <MyHalfBufferAverage+0x5a>
		Accumulator += buffer[(i * ADC_NUMBER_OF_CHANNELS) + offset + SideOffset];
 8001258:	8a7b      	ldrh	r3, [r7, #18]
 800125a:	009a      	lsls	r2, r3, #2
 800125c:	783b      	ldrb	r3, [r7, #0]
 800125e:	441a      	add	r2, r3
 8001260:	8a3b      	ldrh	r3, [r7, #16]
 8001262:	4413      	add	r3, r2
 8001264:	005b      	lsls	r3, r3, #1
 8001266:	687a      	ldr	r2, [r7, #4]
 8001268:	4413      	add	r3, r2
 800126a:	881b      	ldrh	r3, [r3, #0]
 800126c:	461a      	mov	r2, r3
 800126e:	697b      	ldr	r3, [r7, #20]
 8001270:	4413      	add	r3, r2
 8001272:	617b      	str	r3, [r7, #20]
 	for(uint16_t i=0; i< maxArrayIndex; i++) {
 8001274:	8a7b      	ldrh	r3, [r7, #18]
 8001276:	3301      	adds	r3, #1
 8001278:	827b      	strh	r3, [r7, #18]
 800127a:	8a7a      	ldrh	r2, [r7, #18]
 800127c:	89fb      	ldrh	r3, [r7, #14]
 800127e:	429a      	cmp	r2, r3
 8001280:	d3ea      	bcc.n	8001258 <MyHalfBufferAverage+0x38>
	}

	Accumulator /= maxArrayIndex;
 8001282:	89fb      	ldrh	r3, [r7, #14]
 8001284:	697a      	ldr	r2, [r7, #20]
 8001286:	fbb2 f3f3 	udiv	r3, r2, r3
 800128a:	617b      	str	r3, [r7, #20]
	return (uint16_t)Accumulator;
 800128c:	697b      	ldr	r3, [r7, #20]
 800128e:	b29b      	uxth	r3, r3

}
 8001290:	4618      	mov	r0, r3
 8001292:	371c      	adds	r7, #28
 8001294:	46bd      	mov	sp, r7
 8001296:	bc80      	pop	{r7}
 8001298:	4770      	bx	lr
	...

0800129c <CAN_RX>:

void CAN_RX(CAN_HandleTypeDef *hcan, uint32_t RxFifo) {
 800129c:	b580      	push	{r7, lr}
 800129e:	b08c      	sub	sp, #48	; 0x30
 80012a0:	af00      	add	r7, sp, #0
 80012a2:	6078      	str	r0, [r7, #4]
 80012a4:	6039      	str	r1, [r7, #0]

	CAN_RxHeaderTypeDef RxHeader;
	uint8_t RxBuffer[8];

	if(HAL_CAN_GetRxMessage(hcan, RxFifo, &RxHeader, RxBuffer) != HAL_OK) {
 80012a6:	f107 030c 	add.w	r3, r7, #12
 80012aa:	f107 0214 	add.w	r2, r7, #20
 80012ae:	6839      	ldr	r1, [r7, #0]
 80012b0:	6878      	ldr	r0, [r7, #4]
 80012b2:	f002 f8a8 	bl	8003406 <HAL_CAN_GetRxMessage>
 80012b6:	4603      	mov	r3, r0
 80012b8:	2b00      	cmp	r3, #0
 80012ba:	d007      	beq.n	80012cc <CAN_RX+0x30>
		NCanGetRxErrorCount++;
 80012bc:	4b17      	ldr	r3, [pc, #92]	; (800131c <CAN_RX+0x80>)
 80012be:	881b      	ldrh	r3, [r3, #0]
 80012c0:	b29b      	uxth	r3, r3
 80012c2:	3301      	adds	r3, #1
 80012c4:	b29a      	uxth	r2, r3
 80012c6:	4b15      	ldr	r3, [pc, #84]	; (800131c <CAN_RX+0x80>)
 80012c8:	801a      	strh	r2, [r3, #0]
 80012ca:	e023      	b.n	8001314 <CAN_RX+0x78>
		return;
	}

	 //Don't forget to add and enable filters for each message
	switch(RxHeader.StdId) {
 80012cc:	697b      	ldr	r3, [r7, #20]
 80012ce:	f5b3 7f48 	cmp.w	r3, #800	; 0x320
 80012d2:	d11e      	bne.n	8001312 <CAN_RX+0x76>

	 case SIU_RX_ID :

		 BDO01Demand = (RxBuffer[0] >> 0) & 0x01;
 80012d4:	7b3b      	ldrb	r3, [r7, #12]
 80012d6:	f003 0301 	and.w	r3, r3, #1
 80012da:	b2da      	uxtb	r2, r3
 80012dc:	4b10      	ldr	r3, [pc, #64]	; (8001320 <CAN_RX+0x84>)
 80012de:	701a      	strb	r2, [r3, #0]
		 BDO02Demand = (RxBuffer[0] >> 1) & 0x01;
 80012e0:	7b3b      	ldrb	r3, [r7, #12]
 80012e2:	085b      	lsrs	r3, r3, #1
 80012e4:	b2db      	uxtb	r3, r3
 80012e6:	f003 0301 	and.w	r3, r3, #1
 80012ea:	b2da      	uxtb	r2, r3
 80012ec:	4b0d      	ldr	r3, [pc, #52]	; (8001324 <CAN_RX+0x88>)
 80012ee:	701a      	strb	r2, [r3, #0]
		 BDO03Demand = (RxBuffer[0] >> 2) & 0x01;
 80012f0:	7b3b      	ldrb	r3, [r7, #12]
 80012f2:	089b      	lsrs	r3, r3, #2
 80012f4:	b2db      	uxtb	r3, r3
 80012f6:	f003 0301 	and.w	r3, r3, #1
 80012fa:	b2da      	uxtb	r2, r3
 80012fc:	4b0a      	ldr	r3, [pc, #40]	; (8001328 <CAN_RX+0x8c>)
 80012fe:	701a      	strb	r2, [r3, #0]
		 BDO04Demand = (RxBuffer[0] >> 3) & 0x01;
 8001300:	7b3b      	ldrb	r3, [r7, #12]
 8001302:	08db      	lsrs	r3, r3, #3
 8001304:	b2db      	uxtb	r3, r3
 8001306:	f003 0301 	and.w	r3, r3, #1
 800130a:	b2da      	uxtb	r2, r3
 800130c:	4b07      	ldr	r3, [pc, #28]	; (800132c <CAN_RX+0x90>)
 800130e:	701a      	strb	r2, [r3, #0]

		 break;
 8001310:	e000      	b.n	8001314 <CAN_RX+0x78>

	 default:
		 break;
 8001312:	bf00      	nop
	 }
}
 8001314:	3730      	adds	r7, #48	; 0x30
 8001316:	46bd      	mov	sp, r7
 8001318:	bd80      	pop	{r7, pc}
 800131a:	bf00      	nop
 800131c:	200000b6 	.word	0x200000b6
 8001320:	200000b0 	.word	0x200000b0
 8001324:	200000b2 	.word	0x200000b2
 8001328:	200000b1 	.word	0x200000b1
 800132c:	200000b3 	.word	0x200000b3

08001330 <HAL_CAN_RxFifo0MsgPendingCallback>:

void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef *hcan){
 8001330:	b580      	push	{r7, lr}
 8001332:	b082      	sub	sp, #8
 8001334:	af00      	add	r7, sp, #0
 8001336:	6078      	str	r0, [r7, #4]
	CAN_RX(hcan, CAN_RX_FIFO0);
 8001338:	2100      	movs	r1, #0
 800133a:	6878      	ldr	r0, [r7, #4]
 800133c:	f7ff ffae 	bl	800129c <CAN_RX>
}
 8001340:	bf00      	nop
 8001342:	3708      	adds	r7, #8
 8001344:	46bd      	mov	sp, r7
 8001346:	bd80      	pop	{r7, pc}

08001348 <HAL_CAN_RxFifo1MsgPendingCallback>:

void HAL_CAN_RxFifo1MsgPendingCallback(CAN_HandleTypeDef *hcan) {
 8001348:	b580      	push	{r7, lr}
 800134a:	b082      	sub	sp, #8
 800134c:	af00      	add	r7, sp, #0
 800134e:	6078      	str	r0, [r7, #4]
	CAN_RX(hcan, CAN_RX_FIFO1);
 8001350:	2101      	movs	r1, #1
 8001352:	6878      	ldr	r0, [r7, #4]
 8001354:	f7ff ffa2 	bl	800129c <CAN_RX>
}
 8001358:	bf00      	nop
 800135a:	3708      	adds	r7, #8
 800135c:	46bd      	mov	sp, r7
 800135e:	bd80      	pop	{r7, pc}

08001360 <HAL_CAN_ErrorCallback>:

void HAL_CAN_ErrorCallback(CAN_HandleTypeDef *hcan) {
 8001360:	b480      	push	{r7}
 8001362:	b083      	sub	sp, #12
 8001364:	af00      	add	r7, sp, #0
 8001366:	6078      	str	r0, [r7, #4]
	NCANErrorCount++;
 8001368:	4b05      	ldr	r3, [pc, #20]	; (8001380 <HAL_CAN_ErrorCallback+0x20>)
 800136a:	781b      	ldrb	r3, [r3, #0]
 800136c:	b2db      	uxtb	r3, r3
 800136e:	3301      	adds	r3, #1
 8001370:	b2da      	uxtb	r2, r3
 8001372:	4b03      	ldr	r3, [pc, #12]	; (8001380 <HAL_CAN_ErrorCallback+0x20>)
 8001374:	701a      	strb	r2, [r3, #0]
}
 8001376:	bf00      	nop
 8001378:	370c      	adds	r7, #12
 800137a:	46bd      	mov	sp, r7
 800137c:	bc80      	pop	{r7}
 800137e:	4770      	bx	lr
 8001380:	200000b4 	.word	0x200000b4

08001384 <HAL_ADC_ConvHalfCpltCallback>:

void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef* hadc) {
 8001384:	b480      	push	{r7}
 8001386:	b083      	sub	sp, #12
 8001388:	af00      	add	r7, sp, #0
 800138a:	6078      	str	r0, [r7, #4]
	// we enter here every time ADC_BUFFER_SIZE/2 samples have been moved to the adcRawValue buffer by the DMA

	if(hadc == &hadc1) {
 800138c:	687b      	ldr	r3, [r7, #4]
 800138e:	4a08      	ldr	r2, [pc, #32]	; (80013b0 <HAL_ADC_ConvHalfCpltCallback+0x2c>)
 8001390:	4293      	cmp	r3, r2
 8001392:	d107      	bne.n	80013a4 <HAL_ADC_ConvHalfCpltCallback+0x20>
		NAdcBufferSide ^= 1;	// changes from 0 to 1
 8001394:	4b07      	ldr	r3, [pc, #28]	; (80013b4 <HAL_ADC_ConvHalfCpltCallback+0x30>)
 8001396:	781b      	ldrb	r3, [r3, #0]
 8001398:	b2db      	uxtb	r3, r3
 800139a:	f083 0301 	eor.w	r3, r3, #1
 800139e:	b2da      	uxtb	r2, r3
 80013a0:	4b04      	ldr	r3, [pc, #16]	; (80013b4 <HAL_ADC_ConvHalfCpltCallback+0x30>)
 80013a2:	701a      	strb	r2, [r3, #0]
	}
}
 80013a4:	bf00      	nop
 80013a6:	370c      	adds	r7, #12
 80013a8:	46bd      	mov	sp, r7
 80013aa:	bc80      	pop	{r7}
 80013ac:	4770      	bx	lr
 80013ae:	bf00      	nop
 80013b0:	200000bc 	.word	0x200000bc
 80013b4:	200000b8 	.word	0x200000b8

080013b8 <__NVIC_SystemReset>:
/**
  \brief   System Reset
  \details Initiates a system reset request to reset the MCU.
 */
__NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
{
 80013b8:	b480      	push	{r7}
 80013ba:	af00      	add	r7, sp, #0
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 80013bc:	f3bf 8f4f 	dsb	sy
}
 80013c0:	bf00      	nop
  __DSB();                                                          /* Ensure all outstanding memory accesses included
                                                                       buffered write are completed before reset */
  SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
                           (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 80013c2:	4b06      	ldr	r3, [pc, #24]	; (80013dc <__NVIC_SystemReset+0x24>)
 80013c4:	68db      	ldr	r3, [r3, #12]
 80013c6:	f403 62e0 	and.w	r2, r3, #1792	; 0x700
  SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
 80013ca:	4904      	ldr	r1, [pc, #16]	; (80013dc <__NVIC_SystemReset+0x24>)
 80013cc:	4b04      	ldr	r3, [pc, #16]	; (80013e0 <__NVIC_SystemReset+0x28>)
 80013ce:	4313      	orrs	r3, r2
 80013d0:	60cb      	str	r3, [r1, #12]
  __ASM volatile ("dsb 0xF":::"memory");
 80013d2:	f3bf 8f4f 	dsb	sy
}
 80013d6:	bf00      	nop
                            SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchanged */
  __DSB();                                                          /* Ensure completion of memory access */

  for(;;)                                                           /* wait until reset */
  {
    __NOP();
 80013d8:	bf00      	nop
 80013da:	e7fd      	b.n	80013d8 <__NVIC_SystemReset+0x20>
 80013dc:	e000ed00 	.word	0xe000ed00
 80013e0:	05fa0004 	.word	0x05fa0004

080013e4 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80013e4:	b580      	push	{r7, lr}
 80013e6:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80013e8:	f000 ffc8 	bl	800237c <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80013ec:	f000 f832 	bl	8001454 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80013f0:	f000 fac8 	bl	8001984 <MX_GPIO_Init>
  MX_DMA_Init();
 80013f4:	f000 faa8 	bl	8001948 <MX_DMA_Init>
  MX_TIM2_Init();
 80013f8:	f000 f9e0 	bl	80017bc <MX_TIM2_Init>
  MX_ADC1_Init();
 80013fc:	f000 f886 	bl	800150c <MX_ADC1_Init>
  MX_CAN_Init();
 8001400:	f000 f8ee 	bl	80015e0 <MX_CAN_Init>
  MX_USART1_UART_Init();
 8001404:	f000 fa76 	bl	80018f4 <MX_USART1_UART_Init>
  MX_TIM1_Init();
 8001408:	f000 f988 	bl	800171c <MX_TIM1_Init>
  MX_TIM3_Init();
 800140c:	f000 fa24 	bl	8001858 <MX_TIM3_Init>
  /* USER CODE BEGIN 2 */

  HAL_TIM_Base_Start(&htim1);		// general 1MHz timer for timing
 8001410:	480c      	ldr	r0, [pc, #48]	; (8001444 <main+0x60>)
 8001412:	f003 fdcb 	bl	8004fac <HAL_TIM_Base_Start>
  HAL_TIM_Base_Start_IT(&htim3);	// Code Cycle timer with interrupt (100Hz)
 8001416:	480c      	ldr	r0, [pc, #48]	; (8001448 <main+0x64>)
 8001418:	f003 fe12 	bl	8005040 <HAL_TIM_Base_Start_IT>

  InitInputs();
 800141c:	f7ff feee 	bl	80011fc <InitInputs>
  InitOutput();
 8001420:	f000 fb2b 	bl	8001a7a <InitOutput>
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {

	  if(BCycleTimerFlag) {
 8001424:	4b09      	ldr	r3, [pc, #36]	; (800144c <main+0x68>)
 8001426:	781b      	ldrb	r3, [r3, #0]
 8001428:	b2db      	uxtb	r3, r3
 800142a:	2b00      	cmp	r3, #0
 800142c:	d0fa      	beq.n	8001424 <main+0x40>
		  BCycleTimerFlag = 0;
 800142e:	4b07      	ldr	r3, [pc, #28]	; (800144c <main+0x68>)
 8001430:	2200      	movs	r2, #0
 8001432:	701a      	strb	r2, [r3, #0]
		  ReadInputs(&Inputs);
 8001434:	4806      	ldr	r0, [pc, #24]	; (8001450 <main+0x6c>)
 8001436:	f7ff fb61 	bl	8000afc <ReadInputs>
		  Output(&Inputs);
 800143a:	4805      	ldr	r0, [pc, #20]	; (8001450 <main+0x6c>)
 800143c:	f000 fb24 	bl	8001a88 <Output>
	  if(BCycleTimerFlag) {
 8001440:	e7f0      	b.n	8001424 <main+0x40>
 8001442:	bf00      	nop
 8001444:	20000158 	.word	0x20000158
 8001448:	200001e8 	.word	0x200001e8
 800144c:	20001338 	.word	0x20001338
 8001450:	2000133c 	.word	0x2000133c

08001454 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8001454:	b580      	push	{r7, lr}
 8001456:	b094      	sub	sp, #80	; 0x50
 8001458:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800145a:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800145e:	2228      	movs	r2, #40	; 0x28
 8001460:	2100      	movs	r1, #0
 8001462:	4618      	mov	r0, r3
 8001464:	f004 fa98 	bl	8005998 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001468:	f107 0314 	add.w	r3, r7, #20
 800146c:	2200      	movs	r2, #0
 800146e:	601a      	str	r2, [r3, #0]
 8001470:	605a      	str	r2, [r3, #4]
 8001472:	609a      	str	r2, [r3, #8]
 8001474:	60da      	str	r2, [r3, #12]
 8001476:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8001478:	1d3b      	adds	r3, r7, #4
 800147a:	2200      	movs	r2, #0
 800147c:	601a      	str	r2, [r3, #0]
 800147e:	605a      	str	r2, [r3, #4]
 8001480:	609a      	str	r2, [r3, #8]
 8001482:	60da      	str	r2, [r3, #12]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8001484:	2301      	movs	r3, #1
 8001486:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001488:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 800148c:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 800148e:	2300      	movs	r3, #0
 8001490:	633b      	str	r3, [r7, #48]	; 0x30
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8001492:	2301      	movs	r3, #1
 8001494:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8001496:	2302      	movs	r3, #2
 8001498:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800149a:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 800149e:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 80014a0:	f44f 13e0 	mov.w	r3, #1835008	; 0x1c0000
 80014a4:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80014a6:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80014aa:	4618      	mov	r0, r3
 80014ac:	f002 ffb2 	bl	8004414 <HAL_RCC_OscConfig>
 80014b0:	4603      	mov	r3, r0
 80014b2:	2b00      	cmp	r3, #0
 80014b4:	d001      	beq.n	80014ba <SystemClock_Config+0x66>
  {
    Error_Handler();
 80014b6:	f000 fad7 	bl	8001a68 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80014ba:	230f      	movs	r3, #15
 80014bc:	617b      	str	r3, [r7, #20]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80014be:	2302      	movs	r3, #2
 80014c0:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80014c2:	2300      	movs	r3, #0
 80014c4:	61fb      	str	r3, [r7, #28]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 80014c6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80014ca:	623b      	str	r3, [r7, #32]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80014cc:	2300      	movs	r3, #0
 80014ce:	627b      	str	r3, [r7, #36]	; 0x24

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 80014d0:	f107 0314 	add.w	r3, r7, #20
 80014d4:	2102      	movs	r1, #2
 80014d6:	4618      	mov	r0, r3
 80014d8:	f003 fa1e 	bl	8004918 <HAL_RCC_ClockConfig>
 80014dc:	4603      	mov	r3, r0
 80014de:	2b00      	cmp	r3, #0
 80014e0:	d001      	beq.n	80014e6 <SystemClock_Config+0x92>
  {
    Error_Handler();
 80014e2:	f000 fac1 	bl	8001a68 <Error_Handler>
  }
  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 80014e6:	2302      	movs	r3, #2
 80014e8:	607b      	str	r3, [r7, #4]
  PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV8;
 80014ea:	f44f 4340 	mov.w	r3, #49152	; 0xc000
 80014ee:	60fb      	str	r3, [r7, #12]
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 80014f0:	1d3b      	adds	r3, r7, #4
 80014f2:	4618      	mov	r0, r3
 80014f4:	f003 fb9e 	bl	8004c34 <HAL_RCCEx_PeriphCLKConfig>
 80014f8:	4603      	mov	r3, r0
 80014fa:	2b00      	cmp	r3, #0
 80014fc:	d001      	beq.n	8001502 <SystemClock_Config+0xae>
  {
    Error_Handler();
 80014fe:	f000 fab3 	bl	8001a68 <Error_Handler>
  }
}
 8001502:	bf00      	nop
 8001504:	3750      	adds	r7, #80	; 0x50
 8001506:	46bd      	mov	sp, r7
 8001508:	bd80      	pop	{r7, pc}
	...

0800150c <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 800150c:	b580      	push	{r7, lr}
 800150e:	b084      	sub	sp, #16
 8001510:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 8001512:	1d3b      	adds	r3, r7, #4
 8001514:	2200      	movs	r2, #0
 8001516:	601a      	str	r2, [r3, #0]
 8001518:	605a      	str	r2, [r3, #4]
 800151a:	609a      	str	r2, [r3, #8]

  /* USER CODE END ADC1_Init 1 */

  /** Common config
  */
  hadc1.Instance = ADC1;
 800151c:	4b2e      	ldr	r3, [pc, #184]	; (80015d8 <MX_ADC1_Init+0xcc>)
 800151e:	4a2f      	ldr	r2, [pc, #188]	; (80015dc <MX_ADC1_Init+0xd0>)
 8001520:	601a      	str	r2, [r3, #0]
  hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
 8001522:	4b2d      	ldr	r3, [pc, #180]	; (80015d8 <MX_ADC1_Init+0xcc>)
 8001524:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001528:	609a      	str	r2, [r3, #8]
  hadc1.Init.ContinuousConvMode = ENABLE;
 800152a:	4b2b      	ldr	r3, [pc, #172]	; (80015d8 <MX_ADC1_Init+0xcc>)
 800152c:	2201      	movs	r2, #1
 800152e:	731a      	strb	r2, [r3, #12]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 8001530:	4b29      	ldr	r3, [pc, #164]	; (80015d8 <MX_ADC1_Init+0xcc>)
 8001532:	2200      	movs	r2, #0
 8001534:	751a      	strb	r2, [r3, #20]
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8001536:	4b28      	ldr	r3, [pc, #160]	; (80015d8 <MX_ADC1_Init+0xcc>)
 8001538:	f44f 2260 	mov.w	r2, #917504	; 0xe0000
 800153c:	61da      	str	r2, [r3, #28]
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 800153e:	4b26      	ldr	r3, [pc, #152]	; (80015d8 <MX_ADC1_Init+0xcc>)
 8001540:	2200      	movs	r2, #0
 8001542:	605a      	str	r2, [r3, #4]
  hadc1.Init.NbrOfConversion = 4;
 8001544:	4b24      	ldr	r3, [pc, #144]	; (80015d8 <MX_ADC1_Init+0xcc>)
 8001546:	2204      	movs	r2, #4
 8001548:	611a      	str	r2, [r3, #16]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 800154a:	4823      	ldr	r0, [pc, #140]	; (80015d8 <MX_ADC1_Init+0xcc>)
 800154c:	f000 ff9c 	bl	8002488 <HAL_ADC_Init>
 8001550:	4603      	mov	r3, r0
 8001552:	2b00      	cmp	r3, #0
 8001554:	d001      	beq.n	800155a <MX_ADC1_Init+0x4e>
  {
    Error_Handler();
 8001556:	f000 fa87 	bl	8001a68 <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_0;
 800155a:	2300      	movs	r3, #0
 800155c:	607b      	str	r3, [r7, #4]
  sConfig.Rank = ADC_REGULAR_RANK_1;
 800155e:	2301      	movs	r3, #1
 8001560:	60bb      	str	r3, [r7, #8]
  sConfig.SamplingTime = ADC_SAMPLETIME_71CYCLES_5;
 8001562:	2306      	movs	r3, #6
 8001564:	60fb      	str	r3, [r7, #12]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8001566:	1d3b      	adds	r3, r7, #4
 8001568:	4619      	mov	r1, r3
 800156a:	481b      	ldr	r0, [pc, #108]	; (80015d8 <MX_ADC1_Init+0xcc>)
 800156c:	f001 f954 	bl	8002818 <HAL_ADC_ConfigChannel>
 8001570:	4603      	mov	r3, r0
 8001572:	2b00      	cmp	r3, #0
 8001574:	d001      	beq.n	800157a <MX_ADC1_Init+0x6e>
  {
    Error_Handler();
 8001576:	f000 fa77 	bl	8001a68 <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_1;
 800157a:	2301      	movs	r3, #1
 800157c:	607b      	str	r3, [r7, #4]
  sConfig.Rank = ADC_REGULAR_RANK_2;
 800157e:	2302      	movs	r3, #2
 8001580:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8001582:	1d3b      	adds	r3, r7, #4
 8001584:	4619      	mov	r1, r3
 8001586:	4814      	ldr	r0, [pc, #80]	; (80015d8 <MX_ADC1_Init+0xcc>)
 8001588:	f001 f946 	bl	8002818 <HAL_ADC_ConfigChannel>
 800158c:	4603      	mov	r3, r0
 800158e:	2b00      	cmp	r3, #0
 8001590:	d001      	beq.n	8001596 <MX_ADC1_Init+0x8a>
  {
    Error_Handler();
 8001592:	f000 fa69 	bl	8001a68 <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_2;
 8001596:	2302      	movs	r3, #2
 8001598:	607b      	str	r3, [r7, #4]
  sConfig.Rank = ADC_REGULAR_RANK_3;
 800159a:	2303      	movs	r3, #3
 800159c:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 800159e:	1d3b      	adds	r3, r7, #4
 80015a0:	4619      	mov	r1, r3
 80015a2:	480d      	ldr	r0, [pc, #52]	; (80015d8 <MX_ADC1_Init+0xcc>)
 80015a4:	f001 f938 	bl	8002818 <HAL_ADC_ConfigChannel>
 80015a8:	4603      	mov	r3, r0
 80015aa:	2b00      	cmp	r3, #0
 80015ac:	d001      	beq.n	80015b2 <MX_ADC1_Init+0xa6>
  {
    Error_Handler();
 80015ae:	f000 fa5b 	bl	8001a68 <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_3;
 80015b2:	2303      	movs	r3, #3
 80015b4:	607b      	str	r3, [r7, #4]
  sConfig.Rank = ADC_REGULAR_RANK_4;
 80015b6:	2304      	movs	r3, #4
 80015b8:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 80015ba:	1d3b      	adds	r3, r7, #4
 80015bc:	4619      	mov	r1, r3
 80015be:	4806      	ldr	r0, [pc, #24]	; (80015d8 <MX_ADC1_Init+0xcc>)
 80015c0:	f001 f92a 	bl	8002818 <HAL_ADC_ConfigChannel>
 80015c4:	4603      	mov	r3, r0
 80015c6:	2b00      	cmp	r3, #0
 80015c8:	d001      	beq.n	80015ce <MX_ADC1_Init+0xc2>
  {
    Error_Handler();
 80015ca:	f000 fa4d 	bl	8001a68 <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 80015ce:	bf00      	nop
 80015d0:	3710      	adds	r7, #16
 80015d2:	46bd      	mov	sp, r7
 80015d4:	bd80      	pop	{r7, pc}
 80015d6:	bf00      	nop
 80015d8:	200000bc 	.word	0x200000bc
 80015dc:	40012400 	.word	0x40012400

080015e0 <MX_CAN_Init>:
  * @brief CAN Initialization Function
  * @param None
  * @retval None
  */
static void MX_CAN_Init(void)
{
 80015e0:	b580      	push	{r7, lr}
 80015e2:	b094      	sub	sp, #80	; 0x50
 80015e4:	af00      	add	r7, sp, #0
  /* USER CODE END CAN_Init 0 */

  /* USER CODE BEGIN CAN_Init 1 */

  /* USER CODE END CAN_Init 1 */
  hcan.Instance = CAN1;
 80015e6:	4b4b      	ldr	r3, [pc, #300]	; (8001714 <MX_CAN_Init+0x134>)
 80015e8:	4a4b      	ldr	r2, [pc, #300]	; (8001718 <MX_CAN_Init+0x138>)
 80015ea:	601a      	str	r2, [r3, #0]
  hcan.Init.Prescaler = 4;
 80015ec:	4b49      	ldr	r3, [pc, #292]	; (8001714 <MX_CAN_Init+0x134>)
 80015ee:	2204      	movs	r2, #4
 80015f0:	605a      	str	r2, [r3, #4]
  hcan.Init.Mode = CAN_MODE_NORMAL;
 80015f2:	4b48      	ldr	r3, [pc, #288]	; (8001714 <MX_CAN_Init+0x134>)
 80015f4:	2200      	movs	r2, #0
 80015f6:	609a      	str	r2, [r3, #8]
  hcan.Init.SyncJumpWidth = CAN_SJW_1TQ;
 80015f8:	4b46      	ldr	r3, [pc, #280]	; (8001714 <MX_CAN_Init+0x134>)
 80015fa:	2200      	movs	r2, #0
 80015fc:	60da      	str	r2, [r3, #12]
  hcan.Init.TimeSeg1 = CAN_BS1_6TQ;
 80015fe:	4b45      	ldr	r3, [pc, #276]	; (8001714 <MX_CAN_Init+0x134>)
 8001600:	f44f 22a0 	mov.w	r2, #327680	; 0x50000
 8001604:	611a      	str	r2, [r3, #16]
  hcan.Init.TimeSeg2 = CAN_BS2_2TQ;
 8001606:	4b43      	ldr	r3, [pc, #268]	; (8001714 <MX_CAN_Init+0x134>)
 8001608:	f44f 1280 	mov.w	r2, #1048576	; 0x100000
 800160c:	615a      	str	r2, [r3, #20]
  hcan.Init.TimeTriggeredMode = DISABLE;
 800160e:	4b41      	ldr	r3, [pc, #260]	; (8001714 <MX_CAN_Init+0x134>)
 8001610:	2200      	movs	r2, #0
 8001612:	761a      	strb	r2, [r3, #24]
  hcan.Init.AutoBusOff = ENABLE;
 8001614:	4b3f      	ldr	r3, [pc, #252]	; (8001714 <MX_CAN_Init+0x134>)
 8001616:	2201      	movs	r2, #1
 8001618:	765a      	strb	r2, [r3, #25]
  hcan.Init.AutoWakeUp = DISABLE;
 800161a:	4b3e      	ldr	r3, [pc, #248]	; (8001714 <MX_CAN_Init+0x134>)
 800161c:	2200      	movs	r2, #0
 800161e:	769a      	strb	r2, [r3, #26]
  hcan.Init.AutoRetransmission = DISABLE;
 8001620:	4b3c      	ldr	r3, [pc, #240]	; (8001714 <MX_CAN_Init+0x134>)
 8001622:	2200      	movs	r2, #0
 8001624:	76da      	strb	r2, [r3, #27]
  hcan.Init.ReceiveFifoLocked = DISABLE;
 8001626:	4b3b      	ldr	r3, [pc, #236]	; (8001714 <MX_CAN_Init+0x134>)
 8001628:	2200      	movs	r2, #0
 800162a:	771a      	strb	r2, [r3, #28]
  hcan.Init.TransmitFifoPriority = DISABLE;
 800162c:	4b39      	ldr	r3, [pc, #228]	; (8001714 <MX_CAN_Init+0x134>)
 800162e:	2200      	movs	r2, #0
 8001630:	775a      	strb	r2, [r3, #29]
  if (HAL_CAN_Init(&hcan) != HAL_OK)
 8001632:	4838      	ldr	r0, [pc, #224]	; (8001714 <MX_CAN_Init+0x134>)
 8001634:	f001 fb98 	bl	8002d68 <HAL_CAN_Init>
 8001638:	4603      	mov	r3, r0
 800163a:	2b00      	cmp	r3, #0
 800163c:	d001      	beq.n	8001642 <MX_CAN_Init+0x62>
  {
    Error_Handler();
 800163e:	f000 fa13 	bl	8001a68 <Error_Handler>
  }
  /* USER CODE BEGIN CAN_Init 2 */

  // SIU RECEIVE
     CAN_FilterTypeDef FilterConfig1;
     FilterConfig1.FilterIdHigh = SIU_RX_ID << 5 ;
 8001642:	f44f 43c8 	mov.w	r3, #25600	; 0x6400
 8001646:	62bb      	str	r3, [r7, #40]	; 0x28
     FilterConfig1.FilterIdLow = 0;
 8001648:	2300      	movs	r3, #0
 800164a:	62fb      	str	r3, [r7, #44]	; 0x2c
     FilterConfig1.FilterMaskIdHigh = 0xffe0;
 800164c:	f64f 73e0 	movw	r3, #65504	; 0xffe0
 8001650:	633b      	str	r3, [r7, #48]	; 0x30
     FilterConfig1.FilterMaskIdLow = 0;
 8001652:	2300      	movs	r3, #0
 8001654:	637b      	str	r3, [r7, #52]	; 0x34
     FilterConfig1.FilterFIFOAssignment = CAN_FILTER_FIFO0;
 8001656:	2300      	movs	r3, #0
 8001658:	63bb      	str	r3, [r7, #56]	; 0x38
     FilterConfig1.FilterBank = 0;
 800165a:	2300      	movs	r3, #0
 800165c:	63fb      	str	r3, [r7, #60]	; 0x3c
     FilterConfig1.SlaveStartFilterBank = 0;
 800165e:	2300      	movs	r3, #0
 8001660:	64fb      	str	r3, [r7, #76]	; 0x4c
     FilterConfig1.FilterMode = CAN_FILTERMODE_IDMASK;
 8001662:	2300      	movs	r3, #0
 8001664:	643b      	str	r3, [r7, #64]	; 0x40
     FilterConfig1.FilterScale = CAN_FILTERSCALE_32BIT;
 8001666:	2301      	movs	r3, #1
 8001668:	647b      	str	r3, [r7, #68]	; 0x44
     FilterConfig1.FilterActivation = ENABLE;
 800166a:	2301      	movs	r3, #1
 800166c:	64bb      	str	r3, [r7, #72]	; 0x48

     if(HAL_CAN_ConfigFilter(&hcan, &FilterConfig1)!=HAL_OK) {
 800166e:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8001672:	4619      	mov	r1, r3
 8001674:	4827      	ldr	r0, [pc, #156]	; (8001714 <MX_CAN_Init+0x134>)
 8001676:	f001 fc72 	bl	8002f5e <HAL_CAN_ConfigFilter>
 800167a:	4603      	mov	r3, r0
 800167c:	2b00      	cmp	r3, #0
 800167e:	d001      	beq.n	8001684 <MX_CAN_Init+0xa4>
   	  Error_Handler();
 8001680:	f000 f9f2 	bl	8001a68 <Error_Handler>
   	}

     CAN_FilterTypeDef FilterConfig11;
     FilterConfig11.FilterIdHigh = SIU_RX_ID << 5 ;
 8001684:	f44f 43c8 	mov.w	r3, #25600	; 0x6400
 8001688:	603b      	str	r3, [r7, #0]
     FilterConfig11.FilterIdLow = 0;
 800168a:	2300      	movs	r3, #0
 800168c:	607b      	str	r3, [r7, #4]
     FilterConfig11.FilterMaskIdHigh = 0xffe0;
 800168e:	f64f 73e0 	movw	r3, #65504	; 0xffe0
 8001692:	60bb      	str	r3, [r7, #8]
     FilterConfig11.FilterMaskIdLow = 0;
 8001694:	2300      	movs	r3, #0
 8001696:	60fb      	str	r3, [r7, #12]
     FilterConfig11.FilterFIFOAssignment = CAN_FILTER_FIFO1;
 8001698:	2301      	movs	r3, #1
 800169a:	613b      	str	r3, [r7, #16]
     FilterConfig11.FilterBank = 1;
 800169c:	2301      	movs	r3, #1
 800169e:	617b      	str	r3, [r7, #20]
     FilterConfig11.SlaveStartFilterBank = 0;
 80016a0:	2300      	movs	r3, #0
 80016a2:	627b      	str	r3, [r7, #36]	; 0x24
     FilterConfig11.FilterMode = CAN_FILTERMODE_IDMASK;
 80016a4:	2300      	movs	r3, #0
 80016a6:	61bb      	str	r3, [r7, #24]
     FilterConfig11.FilterScale = CAN_FILTERSCALE_32BIT;
 80016a8:	2301      	movs	r3, #1
 80016aa:	61fb      	str	r3, [r7, #28]
     FilterConfig11.FilterActivation = ENABLE;
 80016ac:	2301      	movs	r3, #1
 80016ae:	623b      	str	r3, [r7, #32]

     if(HAL_CAN_ConfigFilter(&hcan, &FilterConfig11)!=HAL_OK) {
 80016b0:	463b      	mov	r3, r7
 80016b2:	4619      	mov	r1, r3
 80016b4:	4817      	ldr	r0, [pc, #92]	; (8001714 <MX_CAN_Init+0x134>)
 80016b6:	f001 fc52 	bl	8002f5e <HAL_CAN_ConfigFilter>
 80016ba:	4603      	mov	r3, r0
 80016bc:	2b00      	cmp	r3, #0
 80016be:	d001      	beq.n	80016c4 <MX_CAN_Init+0xe4>
   	  Error_Handler();
 80016c0:	f000 f9d2 	bl	8001a68 <Error_Handler>
   	}

     // we activate the notifications (interrupts) for FIFO0
     if (HAL_CAN_ActivateNotification(&hcan, CAN_IT_RX_FIFO0_MSG_PENDING) != HAL_OK) {
 80016c4:	2102      	movs	r1, #2
 80016c6:	4813      	ldr	r0, [pc, #76]	; (8001714 <MX_CAN_Init+0x134>)
 80016c8:	f001 ffbe 	bl	8003648 <HAL_CAN_ActivateNotification>
 80016cc:	4603      	mov	r3, r0
 80016ce:	2b00      	cmp	r3, #0
 80016d0:	d001      	beq.n	80016d6 <MX_CAN_Init+0xf6>
  	   Error_Handler();
 80016d2:	f000 f9c9 	bl	8001a68 <Error_Handler>
   	}
     // we activate the notifications (interrupts) for FIFO1
     if (HAL_CAN_ActivateNotification(&hcan, CAN_IT_RX_FIFO1_MSG_PENDING) != HAL_OK) {
 80016d6:	2110      	movs	r1, #16
 80016d8:	480e      	ldr	r0, [pc, #56]	; (8001714 <MX_CAN_Init+0x134>)
 80016da:	f001 ffb5 	bl	8003648 <HAL_CAN_ActivateNotification>
 80016de:	4603      	mov	r3, r0
 80016e0:	2b00      	cmp	r3, #0
 80016e2:	d001      	beq.n	80016e8 <MX_CAN_Init+0x108>
  	   Error_Handler();
 80016e4:	f000 f9c0 	bl	8001a68 <Error_Handler>
   	}
     // we activate the notifications (interrupts) for all error codes
     if(HAL_CAN_ActivateNotification(&hcan, (CAN_IT_ERROR_WARNING | CAN_IT_ERROR_PASSIVE | CAN_IT_BUSOFF | CAN_IT_LAST_ERROR_CODE | CAN_IT_ERROR)) != HAL_OK) {
 80016e8:	f44f 410f 	mov.w	r1, #36608	; 0x8f00
 80016ec:	4809      	ldr	r0, [pc, #36]	; (8001714 <MX_CAN_Init+0x134>)
 80016ee:	f001 ffab 	bl	8003648 <HAL_CAN_ActivateNotification>
 80016f2:	4603      	mov	r3, r0
 80016f4:	2b00      	cmp	r3, #0
 80016f6:	d001      	beq.n	80016fc <MX_CAN_Init+0x11c>
  	   Error_Handler();
 80016f8:	f000 f9b6 	bl	8001a68 <Error_Handler>
     }
     // we start the CAN
     if(HAL_CAN_Start(&hcan)!=HAL_OK) {
 80016fc:	4805      	ldr	r0, [pc, #20]	; (8001714 <MX_CAN_Init+0x134>)
 80016fe:	f001 fcf7 	bl	80030f0 <HAL_CAN_Start>
 8001702:	4603      	mov	r3, r0
 8001704:	2b00      	cmp	r3, #0
 8001706:	d001      	beq.n	800170c <MX_CAN_Init+0x12c>
   	  Error_Handler();
 8001708:	f000 f9ae 	bl	8001a68 <Error_Handler>
     }
  /* USER CODE END CAN_Init 2 */

}
 800170c:	bf00      	nop
 800170e:	3750      	adds	r7, #80	; 0x50
 8001710:	46bd      	mov	sp, r7
 8001712:	bd80      	pop	{r7, pc}
 8001714:	20000130 	.word	0x20000130
 8001718:	40006400 	.word	0x40006400

0800171c <MX_TIM1_Init>:
  * @brief TIM1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM1_Init(void)
{
 800171c:	b580      	push	{r7, lr}
 800171e:	b086      	sub	sp, #24
 8001720:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001722:	f107 0308 	add.w	r3, r7, #8
 8001726:	2200      	movs	r2, #0
 8001728:	601a      	str	r2, [r3, #0]
 800172a:	605a      	str	r2, [r3, #4]
 800172c:	609a      	str	r2, [r3, #8]
 800172e:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001730:	463b      	mov	r3, r7
 8001732:	2200      	movs	r2, #0
 8001734:	601a      	str	r2, [r3, #0]
 8001736:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 8001738:	4b1e      	ldr	r3, [pc, #120]	; (80017b4 <MX_TIM1_Init+0x98>)
 800173a:	4a1f      	ldr	r2, [pc, #124]	; (80017b8 <MX_TIM1_Init+0x9c>)
 800173c:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 72-1;
 800173e:	4b1d      	ldr	r3, [pc, #116]	; (80017b4 <MX_TIM1_Init+0x98>)
 8001740:	2247      	movs	r2, #71	; 0x47
 8001742:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001744:	4b1b      	ldr	r3, [pc, #108]	; (80017b4 <MX_TIM1_Init+0x98>)
 8001746:	2200      	movs	r2, #0
 8001748:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 65535;
 800174a:	4b1a      	ldr	r3, [pc, #104]	; (80017b4 <MX_TIM1_Init+0x98>)
 800174c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001750:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001752:	4b18      	ldr	r3, [pc, #96]	; (80017b4 <MX_TIM1_Init+0x98>)
 8001754:	2200      	movs	r2, #0
 8001756:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 8001758:	4b16      	ldr	r3, [pc, #88]	; (80017b4 <MX_TIM1_Init+0x98>)
 800175a:	2200      	movs	r2, #0
 800175c:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800175e:	4b15      	ldr	r3, [pc, #84]	; (80017b4 <MX_TIM1_Init+0x98>)
 8001760:	2200      	movs	r2, #0
 8001762:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 8001764:	4813      	ldr	r0, [pc, #76]	; (80017b4 <MX_TIM1_Init+0x98>)
 8001766:	f003 fbd1 	bl	8004f0c <HAL_TIM_Base_Init>
 800176a:	4603      	mov	r3, r0
 800176c:	2b00      	cmp	r3, #0
 800176e:	d001      	beq.n	8001774 <MX_TIM1_Init+0x58>
  {
    Error_Handler();
 8001770:	f000 f97a 	bl	8001a68 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001774:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001778:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 800177a:	f107 0308 	add.w	r3, r7, #8
 800177e:	4619      	mov	r1, r3
 8001780:	480c      	ldr	r0, [pc, #48]	; (80017b4 <MX_TIM1_Init+0x98>)
 8001782:	f003 fdb7 	bl	80052f4 <HAL_TIM_ConfigClockSource>
 8001786:	4603      	mov	r3, r0
 8001788:	2b00      	cmp	r3, #0
 800178a:	d001      	beq.n	8001790 <MX_TIM1_Init+0x74>
  {
    Error_Handler();
 800178c:	f000 f96c 	bl	8001a68 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001790:	2300      	movs	r3, #0
 8001792:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001794:	2300      	movs	r3, #0
 8001796:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8001798:	463b      	mov	r3, r7
 800179a:	4619      	mov	r1, r3
 800179c:	4805      	ldr	r0, [pc, #20]	; (80017b4 <MX_TIM1_Init+0x98>)
 800179e:	f003 ff8d 	bl	80056bc <HAL_TIMEx_MasterConfigSynchronization>
 80017a2:	4603      	mov	r3, r0
 80017a4:	2b00      	cmp	r3, #0
 80017a6:	d001      	beq.n	80017ac <MX_TIM1_Init+0x90>
  {
    Error_Handler();
 80017a8:	f000 f95e 	bl	8001a68 <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */

}
 80017ac:	bf00      	nop
 80017ae:	3718      	adds	r7, #24
 80017b0:	46bd      	mov	sp, r7
 80017b2:	bd80      	pop	{r7, pc}
 80017b4:	20000158 	.word	0x20000158
 80017b8:	40012c00 	.word	0x40012c00

080017bc <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 80017bc:	b580      	push	{r7, lr}
 80017be:	b086      	sub	sp, #24
 80017c0:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80017c2:	f107 0308 	add.w	r3, r7, #8
 80017c6:	2200      	movs	r2, #0
 80017c8:	601a      	str	r2, [r3, #0]
 80017ca:	605a      	str	r2, [r3, #4]
 80017cc:	609a      	str	r2, [r3, #8]
 80017ce:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80017d0:	463b      	mov	r3, r7
 80017d2:	2200      	movs	r2, #0
 80017d4:	601a      	str	r2, [r3, #0]
 80017d6:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 80017d8:	4b1e      	ldr	r3, [pc, #120]	; (8001854 <MX_TIM2_Init+0x98>)
 80017da:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80017de:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 1440;
 80017e0:	4b1c      	ldr	r3, [pc, #112]	; (8001854 <MX_TIM2_Init+0x98>)
 80017e2:	f44f 62b4 	mov.w	r2, #1440	; 0x5a0
 80017e6:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 80017e8:	4b1a      	ldr	r3, [pc, #104]	; (8001854 <MX_TIM2_Init+0x98>)
 80017ea:	2200      	movs	r2, #0
 80017ec:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 999;
 80017ee:	4b19      	ldr	r3, [pc, #100]	; (8001854 <MX_TIM2_Init+0x98>)
 80017f0:	f240 32e7 	movw	r2, #999	; 0x3e7
 80017f4:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80017f6:	4b17      	ldr	r3, [pc, #92]	; (8001854 <MX_TIM2_Init+0x98>)
 80017f8:	2200      	movs	r2, #0
 80017fa:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80017fc:	4b15      	ldr	r3, [pc, #84]	; (8001854 <MX_TIM2_Init+0x98>)
 80017fe:	2200      	movs	r2, #0
 8001800:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8001802:	4814      	ldr	r0, [pc, #80]	; (8001854 <MX_TIM2_Init+0x98>)
 8001804:	f003 fb82 	bl	8004f0c <HAL_TIM_Base_Init>
 8001808:	4603      	mov	r3, r0
 800180a:	2b00      	cmp	r3, #0
 800180c:	d001      	beq.n	8001812 <MX_TIM2_Init+0x56>
  {
    Error_Handler();
 800180e:	f000 f92b 	bl	8001a68 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001812:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001816:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8001818:	f107 0308 	add.w	r3, r7, #8
 800181c:	4619      	mov	r1, r3
 800181e:	480d      	ldr	r0, [pc, #52]	; (8001854 <MX_TIM2_Init+0x98>)
 8001820:	f003 fd68 	bl	80052f4 <HAL_TIM_ConfigClockSource>
 8001824:	4603      	mov	r3, r0
 8001826:	2b00      	cmp	r3, #0
 8001828:	d001      	beq.n	800182e <MX_TIM2_Init+0x72>
  {
    Error_Handler();
 800182a:	f000 f91d 	bl	8001a68 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800182e:	2300      	movs	r3, #0
 8001830:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001832:	2300      	movs	r3, #0
 8001834:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001836:	463b      	mov	r3, r7
 8001838:	4619      	mov	r1, r3
 800183a:	4806      	ldr	r0, [pc, #24]	; (8001854 <MX_TIM2_Init+0x98>)
 800183c:	f003 ff3e 	bl	80056bc <HAL_TIMEx_MasterConfigSynchronization>
 8001840:	4603      	mov	r3, r0
 8001842:	2b00      	cmp	r3, #0
 8001844:	d001      	beq.n	800184a <MX_TIM2_Init+0x8e>
  {
    Error_Handler();
 8001846:	f000 f90f 	bl	8001a68 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 800184a:	bf00      	nop
 800184c:	3718      	adds	r7, #24
 800184e:	46bd      	mov	sp, r7
 8001850:	bd80      	pop	{r7, pc}
 8001852:	bf00      	nop
 8001854:	200001a0 	.word	0x200001a0

08001858 <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 8001858:	b580      	push	{r7, lr}
 800185a:	b086      	sub	sp, #24
 800185c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800185e:	f107 0308 	add.w	r3, r7, #8
 8001862:	2200      	movs	r2, #0
 8001864:	601a      	str	r2, [r3, #0]
 8001866:	605a      	str	r2, [r3, #4]
 8001868:	609a      	str	r2, [r3, #8]
 800186a:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800186c:	463b      	mov	r3, r7
 800186e:	2200      	movs	r2, #0
 8001870:	601a      	str	r2, [r3, #0]
 8001872:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 8001874:	4b1d      	ldr	r3, [pc, #116]	; (80018ec <MX_TIM3_Init+0x94>)
 8001876:	4a1e      	ldr	r2, [pc, #120]	; (80018f0 <MX_TIM3_Init+0x98>)
 8001878:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 7200-1;
 800187a:	4b1c      	ldr	r3, [pc, #112]	; (80018ec <MX_TIM3_Init+0x94>)
 800187c:	f641 421f 	movw	r2, #7199	; 0x1c1f
 8001880:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001882:	4b1a      	ldr	r3, [pc, #104]	; (80018ec <MX_TIM3_Init+0x94>)
 8001884:	2200      	movs	r2, #0
 8001886:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 100-1;
 8001888:	4b18      	ldr	r3, [pc, #96]	; (80018ec <MX_TIM3_Init+0x94>)
 800188a:	2263      	movs	r2, #99	; 0x63
 800188c:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800188e:	4b17      	ldr	r3, [pc, #92]	; (80018ec <MX_TIM3_Init+0x94>)
 8001890:	2200      	movs	r2, #0
 8001892:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001894:	4b15      	ldr	r3, [pc, #84]	; (80018ec <MX_TIM3_Init+0x94>)
 8001896:	2200      	movs	r2, #0
 8001898:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 800189a:	4814      	ldr	r0, [pc, #80]	; (80018ec <MX_TIM3_Init+0x94>)
 800189c:	f003 fb36 	bl	8004f0c <HAL_TIM_Base_Init>
 80018a0:	4603      	mov	r3, r0
 80018a2:	2b00      	cmp	r3, #0
 80018a4:	d001      	beq.n	80018aa <MX_TIM3_Init+0x52>
  {
    Error_Handler();
 80018a6:	f000 f8df 	bl	8001a68 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80018aa:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80018ae:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 80018b0:	f107 0308 	add.w	r3, r7, #8
 80018b4:	4619      	mov	r1, r3
 80018b6:	480d      	ldr	r0, [pc, #52]	; (80018ec <MX_TIM3_Init+0x94>)
 80018b8:	f003 fd1c 	bl	80052f4 <HAL_TIM_ConfigClockSource>
 80018bc:	4603      	mov	r3, r0
 80018be:	2b00      	cmp	r3, #0
 80018c0:	d001      	beq.n	80018c6 <MX_TIM3_Init+0x6e>
  {
    Error_Handler();
 80018c2:	f000 f8d1 	bl	8001a68 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80018c6:	2300      	movs	r3, #0
 80018c8:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80018ca:	2300      	movs	r3, #0
 80018cc:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80018ce:	463b      	mov	r3, r7
 80018d0:	4619      	mov	r1, r3
 80018d2:	4806      	ldr	r0, [pc, #24]	; (80018ec <MX_TIM3_Init+0x94>)
 80018d4:	f003 fef2 	bl	80056bc <HAL_TIMEx_MasterConfigSynchronization>
 80018d8:	4603      	mov	r3, r0
 80018da:	2b00      	cmp	r3, #0
 80018dc:	d001      	beq.n	80018e2 <MX_TIM3_Init+0x8a>
  {
    Error_Handler();
 80018de:	f000 f8c3 	bl	8001a68 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */

}
 80018e2:	bf00      	nop
 80018e4:	3718      	adds	r7, #24
 80018e6:	46bd      	mov	sp, r7
 80018e8:	bd80      	pop	{r7, pc}
 80018ea:	bf00      	nop
 80018ec:	200001e8 	.word	0x200001e8
 80018f0:	40000400 	.word	0x40000400

080018f4 <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 80018f4:	b580      	push	{r7, lr}
 80018f6:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 80018f8:	4b11      	ldr	r3, [pc, #68]	; (8001940 <MX_USART1_UART_Init+0x4c>)
 80018fa:	4a12      	ldr	r2, [pc, #72]	; (8001944 <MX_USART1_UART_Init+0x50>)
 80018fc:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 80018fe:	4b10      	ldr	r3, [pc, #64]	; (8001940 <MX_USART1_UART_Init+0x4c>)
 8001900:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8001904:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 8001906:	4b0e      	ldr	r3, [pc, #56]	; (8001940 <MX_USART1_UART_Init+0x4c>)
 8001908:	2200      	movs	r2, #0
 800190a:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 800190c:	4b0c      	ldr	r3, [pc, #48]	; (8001940 <MX_USART1_UART_Init+0x4c>)
 800190e:	2200      	movs	r2, #0
 8001910:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 8001912:	4b0b      	ldr	r3, [pc, #44]	; (8001940 <MX_USART1_UART_Init+0x4c>)
 8001914:	2200      	movs	r2, #0
 8001916:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8001918:	4b09      	ldr	r3, [pc, #36]	; (8001940 <MX_USART1_UART_Init+0x4c>)
 800191a:	220c      	movs	r2, #12
 800191c:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800191e:	4b08      	ldr	r3, [pc, #32]	; (8001940 <MX_USART1_UART_Init+0x4c>)
 8001920:	2200      	movs	r2, #0
 8001922:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8001924:	4b06      	ldr	r3, [pc, #24]	; (8001940 <MX_USART1_UART_Init+0x4c>)
 8001926:	2200      	movs	r2, #0
 8001928:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 800192a:	4805      	ldr	r0, [pc, #20]	; (8001940 <MX_USART1_UART_Init+0x4c>)
 800192c:	f003 ff36 	bl	800579c <HAL_UART_Init>
 8001930:	4603      	mov	r3, r0
 8001932:	2b00      	cmp	r3, #0
 8001934:	d001      	beq.n	800193a <MX_USART1_UART_Init+0x46>
  {
    Error_Handler();
 8001936:	f000 f897 	bl	8001a68 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 800193a:	bf00      	nop
 800193c:	bd80      	pop	{r7, pc}
 800193e:	bf00      	nop
 8001940:	20000230 	.word	0x20000230
 8001944:	40013800 	.word	0x40013800

08001948 <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 8001948:	b580      	push	{r7, lr}
 800194a:	b082      	sub	sp, #8
 800194c:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 800194e:	4b0c      	ldr	r3, [pc, #48]	; (8001980 <MX_DMA_Init+0x38>)
 8001950:	695b      	ldr	r3, [r3, #20]
 8001952:	4a0b      	ldr	r2, [pc, #44]	; (8001980 <MX_DMA_Init+0x38>)
 8001954:	f043 0301 	orr.w	r3, r3, #1
 8001958:	6153      	str	r3, [r2, #20]
 800195a:	4b09      	ldr	r3, [pc, #36]	; (8001980 <MX_DMA_Init+0x38>)
 800195c:	695b      	ldr	r3, [r3, #20]
 800195e:	f003 0301 	and.w	r3, r3, #1
 8001962:	607b      	str	r3, [r7, #4]
 8001964:	687b      	ldr	r3, [r7, #4]

  /* DMA interrupt init */
  /* DMA1_Channel1_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 0, 0);
 8001966:	2200      	movs	r2, #0
 8001968:	2100      	movs	r1, #0
 800196a:	200b      	movs	r0, #11
 800196c:	f002 f979 	bl	8003c62 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 8001970:	200b      	movs	r0, #11
 8001972:	f002 f992 	bl	8003c9a <HAL_NVIC_EnableIRQ>

}
 8001976:	bf00      	nop
 8001978:	3708      	adds	r7, #8
 800197a:	46bd      	mov	sp, r7
 800197c:	bd80      	pop	{r7, pc}
 800197e:	bf00      	nop
 8001980:	40021000 	.word	0x40021000

08001984 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8001984:	b580      	push	{r7, lr}
 8001986:	b088      	sub	sp, #32
 8001988:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800198a:	f107 0310 	add.w	r3, r7, #16
 800198e:	2200      	movs	r2, #0
 8001990:	601a      	str	r2, [r3, #0]
 8001992:	605a      	str	r2, [r3, #4]
 8001994:	609a      	str	r2, [r3, #8]
 8001996:	60da      	str	r2, [r3, #12]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001998:	4b27      	ldr	r3, [pc, #156]	; (8001a38 <MX_GPIO_Init+0xb4>)
 800199a:	699b      	ldr	r3, [r3, #24]
 800199c:	4a26      	ldr	r2, [pc, #152]	; (8001a38 <MX_GPIO_Init+0xb4>)
 800199e:	f043 0320 	orr.w	r3, r3, #32
 80019a2:	6193      	str	r3, [r2, #24]
 80019a4:	4b24      	ldr	r3, [pc, #144]	; (8001a38 <MX_GPIO_Init+0xb4>)
 80019a6:	699b      	ldr	r3, [r3, #24]
 80019a8:	f003 0320 	and.w	r3, r3, #32
 80019ac:	60fb      	str	r3, [r7, #12]
 80019ae:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80019b0:	4b21      	ldr	r3, [pc, #132]	; (8001a38 <MX_GPIO_Init+0xb4>)
 80019b2:	699b      	ldr	r3, [r3, #24]
 80019b4:	4a20      	ldr	r2, [pc, #128]	; (8001a38 <MX_GPIO_Init+0xb4>)
 80019b6:	f043 0304 	orr.w	r3, r3, #4
 80019ba:	6193      	str	r3, [r2, #24]
 80019bc:	4b1e      	ldr	r3, [pc, #120]	; (8001a38 <MX_GPIO_Init+0xb4>)
 80019be:	699b      	ldr	r3, [r3, #24]
 80019c0:	f003 0304 	and.w	r3, r3, #4
 80019c4:	60bb      	str	r3, [r7, #8]
 80019c6:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80019c8:	4b1b      	ldr	r3, [pc, #108]	; (8001a38 <MX_GPIO_Init+0xb4>)
 80019ca:	699b      	ldr	r3, [r3, #24]
 80019cc:	4a1a      	ldr	r2, [pc, #104]	; (8001a38 <MX_GPIO_Init+0xb4>)
 80019ce:	f043 0308 	orr.w	r3, r3, #8
 80019d2:	6193      	str	r3, [r2, #24]
 80019d4:	4b18      	ldr	r3, [pc, #96]	; (8001a38 <MX_GPIO_Init+0xb4>)
 80019d6:	699b      	ldr	r3, [r3, #24]
 80019d8:	f003 0308 	and.w	r3, r3, #8
 80019dc:	607b      	str	r3, [r7, #4]
 80019de:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_SET);
 80019e0:	2201      	movs	r2, #1
 80019e2:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80019e6:	4815      	ldr	r0, [pc, #84]	; (8001a3c <MX_GPIO_Init+0xb8>)
 80019e8:	f002 fcfb 	bl	80043e2 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, DO01_Pin|DO02_Pin|DO03_Pin|DO04_Pin, GPIO_PIN_RESET);
 80019ec:	2200      	movs	r2, #0
 80019ee:	f44f 4170 	mov.w	r1, #61440	; 0xf000
 80019f2:	4812      	ldr	r0, [pc, #72]	; (8001a3c <MX_GPIO_Init+0xb8>)
 80019f4:	f002 fcf5 	bl	80043e2 <HAL_GPIO_WritePin>

  /*Configure GPIO pins : DIN03_Pin DIN02_Pin DIN01_Pin DIN04_Pin
                           DIN05_Pin DIN06_Pin DIN07_Pin DIN08_Pin */
  GPIO_InitStruct.Pin = DIN03_Pin|DIN02_Pin|DIN01_Pin|DIN04_Pin
 80019f8:	23ff      	movs	r3, #255	; 0xff
 80019fa:	613b      	str	r3, [r7, #16]
                          |DIN05_Pin|DIN06_Pin|DIN07_Pin|DIN08_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80019fc:	2300      	movs	r3, #0
 80019fe:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001a00:	2300      	movs	r3, #0
 8001a02:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001a04:	f107 0310 	add.w	r3, r7, #16
 8001a08:	4619      	mov	r1, r3
 8001a0a:	480c      	ldr	r0, [pc, #48]	; (8001a3c <MX_GPIO_Init+0xb8>)
 8001a0c:	f002 fb4e 	bl	80040ac <HAL_GPIO_Init>

  /*Configure GPIO pins : LED_Pin DO01_Pin DO02_Pin DO03_Pin
                           DO04_Pin */
  GPIO_InitStruct.Pin = LED_Pin|DO01_Pin|DO02_Pin|DO03_Pin
 8001a10:	f44f 4374 	mov.w	r3, #62464	; 0xf400
 8001a14:	613b      	str	r3, [r7, #16]
                          |DO04_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001a16:	2301      	movs	r3, #1
 8001a18:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001a1a:	2300      	movs	r3, #0
 8001a1c:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001a1e:	2302      	movs	r3, #2
 8001a20:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001a22:	f107 0310 	add.w	r3, r7, #16
 8001a26:	4619      	mov	r1, r3
 8001a28:	4804      	ldr	r0, [pc, #16]	; (8001a3c <MX_GPIO_Init+0xb8>)
 8001a2a:	f002 fb3f 	bl	80040ac <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8001a2e:	bf00      	nop
 8001a30:	3720      	adds	r7, #32
 8001a32:	46bd      	mov	sp, r7
 8001a34:	bd80      	pop	{r7, pc}
 8001a36:	bf00      	nop
 8001a38:	40021000 	.word	0x40021000
 8001a3c:	40010c00 	.word	0x40010c00

08001a40 <HAL_TIM_PeriodElapsedCallback>:

/* USER CODE BEGIN 4 */

void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim) {
 8001a40:	b480      	push	{r7}
 8001a42:	b083      	sub	sp, #12
 8001a44:	af00      	add	r7, sp, #0
 8001a46:	6078      	str	r0, [r7, #4]

	if(htim == &htim3) {	// Code Cycle interrupt
 8001a48:	687b      	ldr	r3, [r7, #4]
 8001a4a:	4a05      	ldr	r2, [pc, #20]	; (8001a60 <HAL_TIM_PeriodElapsedCallback+0x20>)
 8001a4c:	4293      	cmp	r3, r2
 8001a4e:	d102      	bne.n	8001a56 <HAL_TIM_PeriodElapsedCallback+0x16>
		BCycleTimerFlag = 1;
 8001a50:	4b04      	ldr	r3, [pc, #16]	; (8001a64 <HAL_TIM_PeriodElapsedCallback+0x24>)
 8001a52:	2201      	movs	r2, #1
 8001a54:	701a      	strb	r2, [r3, #0]
	}
}
 8001a56:	bf00      	nop
 8001a58:	370c      	adds	r7, #12
 8001a5a:	46bd      	mov	sp, r7
 8001a5c:	bc80      	pop	{r7}
 8001a5e:	4770      	bx	lr
 8001a60:	200001e8 	.word	0x200001e8
 8001a64:	20001338 	.word	0x20001338

08001a68 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8001a68:	b580      	push	{r7, lr}
 8001a6a:	af00      	add	r7, sp, #0
  __ASM volatile ("cpsid i" : : : "memory");
 8001a6c:	b672      	cpsid	i
}
 8001a6e:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
  {
	  HAL_Delay(200);
 8001a70:	20c8      	movs	r0, #200	; 0xc8
 8001a72:	f000 fce5 	bl	8002440 <HAL_Delay>
	  NVIC_SystemReset();
 8001a76:	f7ff fc9f 	bl	80013b8 <__NVIC_SystemReset>

08001a7a <InitOutput>:

uint32_t nCanTxErrorCount=0;
uint32_t nCanOldestMailbox=4, nCanSecondOldestMailbox=2, nCanYoungestMailbox=1;


void InitOutput() {
 8001a7a:	b480      	push	{r7}
 8001a7c:	af00      	add	r7, sp, #0

}
 8001a7e:	bf00      	nop
 8001a80:	46bd      	mov	sp, r7
 8001a82:	bc80      	pop	{r7}
 8001a84:	4770      	bx	lr
	...

08001a88 <Output>:
void Output(InputStruct* inputs) {
 8001a88:	b580      	push	{r7, lr}
 8001a8a:	b084      	sub	sp, #16
 8001a8c:	af00      	add	r7, sp, #0
 8001a8e:	6078      	str	r0, [r7, #4]

	// Digital Outputs
	HAL_GPIO_WritePin(DO01_GPIO_Port, DO01_Pin, inputs->BSIUDO01Demand);
 8001a90:	687b      	ldr	r3, [r7, #4]
 8001a92:	f893 3020 	ldrb.w	r3, [r3, #32]
 8001a96:	461a      	mov	r2, r3
 8001a98:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001a9c:	4884      	ldr	r0, [pc, #528]	; (8001cb0 <Output+0x228>)
 8001a9e:	f002 fca0 	bl	80043e2 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(DO02_GPIO_Port, DO02_Pin, inputs->BSIUDO02Demand);
 8001aa2:	687b      	ldr	r3, [r7, #4]
 8001aa4:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 8001aa8:	461a      	mov	r2, r3
 8001aaa:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001aae:	4880      	ldr	r0, [pc, #512]	; (8001cb0 <Output+0x228>)
 8001ab0:	f002 fc97 	bl	80043e2 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(DO03_GPIO_Port, DO03_Pin, inputs->BSIUDO03Demand);
 8001ab4:	687b      	ldr	r3, [r7, #4]
 8001ab6:	f893 3022 	ldrb.w	r3, [r3, #34]	; 0x22
 8001aba:	461a      	mov	r2, r3
 8001abc:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8001ac0:	487b      	ldr	r0, [pc, #492]	; (8001cb0 <Output+0x228>)
 8001ac2:	f002 fc8e 	bl	80043e2 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(DO04_GPIO_Port, DO04_Pin, inputs->BSIUDO04Demand);
 8001ac6:	687b      	ldr	r3, [r7, #4]
 8001ac8:	f893 3023 	ldrb.w	r3, [r3, #35]	; 0x23
 8001acc:	461a      	mov	r2, r3
 8001ace:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8001ad2:	4877      	ldr	r0, [pc, #476]	; (8001cb0 <Output+0x228>)
 8001ad4:	f002 fc85 	bl	80043e2 <HAL_GPIO_WritePin>


	// CAN
	CANTxBuffer[0] = 0;
 8001ad8:	4b76      	ldr	r3, [pc, #472]	; (8001cb4 <Output+0x22c>)
 8001ada:	2200      	movs	r2, #0
 8001adc:	701a      	strb	r2, [r3, #0]
	CANTxBuffer[0] |= (inputs->BUpShiftButtonInError 	& 0x01) << 0;
 8001ade:	4b75      	ldr	r3, [pc, #468]	; (8001cb4 <Output+0x22c>)
 8001ae0:	781b      	ldrb	r3, [r3, #0]
 8001ae2:	b25a      	sxtb	r2, r3
 8001ae4:	687b      	ldr	r3, [r7, #4]
 8001ae6:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8001aea:	b25b      	sxtb	r3, r3
 8001aec:	f003 0301 	and.w	r3, r3, #1
 8001af0:	b25b      	sxtb	r3, r3
 8001af2:	4313      	orrs	r3, r2
 8001af4:	b25b      	sxtb	r3, r3
 8001af6:	b2da      	uxtb	r2, r3
 8001af8:	4b6e      	ldr	r3, [pc, #440]	; (8001cb4 <Output+0x22c>)
 8001afa:	701a      	strb	r2, [r3, #0]
	CANTxBuffer[0] |= (inputs->BDnShiftButtonInError 	& 0x01) << 1;
 8001afc:	4b6d      	ldr	r3, [pc, #436]	; (8001cb4 <Output+0x22c>)
 8001afe:	781b      	ldrb	r3, [r3, #0]
 8001b00:	b25a      	sxtb	r2, r3
 8001b02:	687b      	ldr	r3, [r7, #4]
 8001b04:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 8001b08:	005b      	lsls	r3, r3, #1
 8001b0a:	b25b      	sxtb	r3, r3
 8001b0c:	f003 0302 	and.w	r3, r3, #2
 8001b10:	b25b      	sxtb	r3, r3
 8001b12:	4313      	orrs	r3, r2
 8001b14:	b25b      	sxtb	r3, r3
 8001b16:	b2da      	uxtb	r2, r3
 8001b18:	4b66      	ldr	r3, [pc, #408]	; (8001cb4 <Output+0x22c>)
 8001b1a:	701a      	strb	r2, [r3, #0]
	CANTxBuffer[0] |= (0							  	& 0x01) << 2;
 8001b1c:	4b65      	ldr	r3, [pc, #404]	; (8001cb4 <Output+0x22c>)
 8001b1e:	781a      	ldrb	r2, [r3, #0]
 8001b20:	4b64      	ldr	r3, [pc, #400]	; (8001cb4 <Output+0x22c>)
 8001b22:	701a      	strb	r2, [r3, #0]
	CANTxBuffer[0] |= (0								& 0x01) << 3;
 8001b24:	4b63      	ldr	r3, [pc, #396]	; (8001cb4 <Output+0x22c>)
 8001b26:	781a      	ldrb	r2, [r3, #0]
 8001b28:	4b62      	ldr	r3, [pc, #392]	; (8001cb4 <Output+0x22c>)
 8001b2a:	701a      	strb	r2, [r3, #0]
	CANTxBuffer[0] |= (0							    & 0x01) << 4;
 8001b2c:	4b61      	ldr	r3, [pc, #388]	; (8001cb4 <Output+0x22c>)
 8001b2e:	781a      	ldrb	r2, [r3, #0]
 8001b30:	4b60      	ldr	r3, [pc, #384]	; (8001cb4 <Output+0x22c>)
 8001b32:	701a      	strb	r2, [r3, #0]
	CANTxBuffer[0] |= (0								& 0x01) << 5;
 8001b34:	4b5f      	ldr	r3, [pc, #380]	; (8001cb4 <Output+0x22c>)
 8001b36:	781a      	ldrb	r2, [r3, #0]
 8001b38:	4b5e      	ldr	r3, [pc, #376]	; (8001cb4 <Output+0x22c>)
 8001b3a:	701a      	strb	r2, [r3, #0]
	CANTxBuffer[0] |= (inputs->BrClutchPaddleInError	& 0x01) << 6;
 8001b3c:	4b5d      	ldr	r3, [pc, #372]	; (8001cb4 <Output+0x22c>)
 8001b3e:	781b      	ldrb	r3, [r3, #0]
 8001b40:	b25a      	sxtb	r2, r3
 8001b42:	687b      	ldr	r3, [r7, #4]
 8001b44:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
 8001b48:	019b      	lsls	r3, r3, #6
 8001b4a:	b25b      	sxtb	r3, r3
 8001b4c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8001b50:	b25b      	sxtb	r3, r3
 8001b52:	4313      	orrs	r3, r2
 8001b54:	b25b      	sxtb	r3, r3
 8001b56:	b2da      	uxtb	r2, r3
 8001b58:	4b56      	ldr	r3, [pc, #344]	; (8001cb4 <Output+0x22c>)
 8001b5a:	701a      	strb	r2, [r3, #0]
	CANTxBuffer[0] |= (0								& 0x01) << 7;
 8001b5c:	4b55      	ldr	r3, [pc, #340]	; (8001cb4 <Output+0x22c>)
 8001b5e:	781a      	ldrb	r2, [r3, #0]
 8001b60:	4b54      	ldr	r3, [pc, #336]	; (8001cb4 <Output+0x22c>)
 8001b62:	701a      	strb	r2, [r3, #0]

	CANTxBuffer[1] = 0;
 8001b64:	4b53      	ldr	r3, [pc, #332]	; (8001cb4 <Output+0x22c>)
 8001b66:	2200      	movs	r2, #0
 8001b68:	705a      	strb	r2, [r3, #1]
	CANTxBuffer[1] |= (inputs->BUpShiftButtonPressed 	& 0x01) << 0;
 8001b6a:	4b52      	ldr	r3, [pc, #328]	; (8001cb4 <Output+0x22c>)
 8001b6c:	785b      	ldrb	r3, [r3, #1]
 8001b6e:	b25a      	sxtb	r2, r3
 8001b70:	687b      	ldr	r3, [r7, #4]
 8001b72:	f893 3031 	ldrb.w	r3, [r3, #49]	; 0x31
 8001b76:	b25b      	sxtb	r3, r3
 8001b78:	f003 0301 	and.w	r3, r3, #1
 8001b7c:	b25b      	sxtb	r3, r3
 8001b7e:	4313      	orrs	r3, r2
 8001b80:	b25b      	sxtb	r3, r3
 8001b82:	b2da      	uxtb	r2, r3
 8001b84:	4b4b      	ldr	r3, [pc, #300]	; (8001cb4 <Output+0x22c>)
 8001b86:	705a      	strb	r2, [r3, #1]
	CANTxBuffer[1] |= (inputs->BDnShiftButtonPressed 	& 0x01) << 1;
 8001b88:	4b4a      	ldr	r3, [pc, #296]	; (8001cb4 <Output+0x22c>)
 8001b8a:	785b      	ldrb	r3, [r3, #1]
 8001b8c:	b25a      	sxtb	r2, r3
 8001b8e:	687b      	ldr	r3, [r7, #4]
 8001b90:	f893 3032 	ldrb.w	r3, [r3, #50]	; 0x32
 8001b94:	005b      	lsls	r3, r3, #1
 8001b96:	b25b      	sxtb	r3, r3
 8001b98:	f003 0302 	and.w	r3, r3, #2
 8001b9c:	b25b      	sxtb	r3, r3
 8001b9e:	4313      	orrs	r3, r2
 8001ba0:	b25b      	sxtb	r3, r3
 8001ba2:	b2da      	uxtb	r2, r3
 8001ba4:	4b43      	ldr	r3, [pc, #268]	; (8001cb4 <Output+0x22c>)
 8001ba6:	705a      	strb	r2, [r3, #1]
	CANTxBuffer[1] |= (inputs->BButtonAPressed  		& 0x01) << 2;
 8001ba8:	4b42      	ldr	r3, [pc, #264]	; (8001cb4 <Output+0x22c>)
 8001baa:	785b      	ldrb	r3, [r3, #1]
 8001bac:	b25a      	sxtb	r2, r3
 8001bae:	687b      	ldr	r3, [r7, #4]
 8001bb0:	f893 3033 	ldrb.w	r3, [r3, #51]	; 0x33
 8001bb4:	009b      	lsls	r3, r3, #2
 8001bb6:	b25b      	sxtb	r3, r3
 8001bb8:	f003 0304 	and.w	r3, r3, #4
 8001bbc:	b25b      	sxtb	r3, r3
 8001bbe:	4313      	orrs	r3, r2
 8001bc0:	b25b      	sxtb	r3, r3
 8001bc2:	b2da      	uxtb	r2, r3
 8001bc4:	4b3b      	ldr	r3, [pc, #236]	; (8001cb4 <Output+0x22c>)
 8001bc6:	705a      	strb	r2, [r3, #1]
	CANTxBuffer[1] |= (inputs->BButtonBPressed 			& 0x01) << 3;
 8001bc8:	4b3a      	ldr	r3, [pc, #232]	; (8001cb4 <Output+0x22c>)
 8001bca:	785b      	ldrb	r3, [r3, #1]
 8001bcc:	b25a      	sxtb	r2, r3
 8001bce:	687b      	ldr	r3, [r7, #4]
 8001bd0:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 8001bd4:	00db      	lsls	r3, r3, #3
 8001bd6:	b25b      	sxtb	r3, r3
 8001bd8:	f003 0308 	and.w	r3, r3, #8
 8001bdc:	b25b      	sxtb	r3, r3
 8001bde:	4313      	orrs	r3, r2
 8001be0:	b25b      	sxtb	r3, r3
 8001be2:	b2da      	uxtb	r2, r3
 8001be4:	4b33      	ldr	r3, [pc, #204]	; (8001cb4 <Output+0x22c>)
 8001be6:	705a      	strb	r2, [r3, #1]
	CANTxBuffer[1] |= (inputs->BButtonCPressed   		& 0x01) << 4;
 8001be8:	4b32      	ldr	r3, [pc, #200]	; (8001cb4 <Output+0x22c>)
 8001bea:	785b      	ldrb	r3, [r3, #1]
 8001bec:	b25a      	sxtb	r2, r3
 8001bee:	687b      	ldr	r3, [r7, #4]
 8001bf0:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8001bf4:	011b      	lsls	r3, r3, #4
 8001bf6:	b25b      	sxtb	r3, r3
 8001bf8:	f003 0310 	and.w	r3, r3, #16
 8001bfc:	b25b      	sxtb	r3, r3
 8001bfe:	4313      	orrs	r3, r2
 8001c00:	b25b      	sxtb	r3, r3
 8001c02:	b2da      	uxtb	r2, r3
 8001c04:	4b2b      	ldr	r3, [pc, #172]	; (8001cb4 <Output+0x22c>)
 8001c06:	705a      	strb	r2, [r3, #1]
	CANTxBuffer[1] |= (inputs->BButtonDPressed			& 0x01) << 5;
 8001c08:	4b2a      	ldr	r3, [pc, #168]	; (8001cb4 <Output+0x22c>)
 8001c0a:	785b      	ldrb	r3, [r3, #1]
 8001c0c:	b25a      	sxtb	r2, r3
 8001c0e:	687b      	ldr	r3, [r7, #4]
 8001c10:	f893 3036 	ldrb.w	r3, [r3, #54]	; 0x36
 8001c14:	015b      	lsls	r3, r3, #5
 8001c16:	b25b      	sxtb	r3, r3
 8001c18:	f003 0320 	and.w	r3, r3, #32
 8001c1c:	b25b      	sxtb	r3, r3
 8001c1e:	4313      	orrs	r3, r2
 8001c20:	b25b      	sxtb	r3, r3
 8001c22:	b2da      	uxtb	r2, r3
 8001c24:	4b23      	ldr	r3, [pc, #140]	; (8001cb4 <Output+0x22c>)
 8001c26:	705a      	strb	r2, [r3, #1]
	CANTxBuffer[1] |= (inputs->BButtonEPressed			& 0x01) << 6;
 8001c28:	4b22      	ldr	r3, [pc, #136]	; (8001cb4 <Output+0x22c>)
 8001c2a:	785b      	ldrb	r3, [r3, #1]
 8001c2c:	b25a      	sxtb	r2, r3
 8001c2e:	687b      	ldr	r3, [r7, #4]
 8001c30:	f893 3037 	ldrb.w	r3, [r3, #55]	; 0x37
 8001c34:	019b      	lsls	r3, r3, #6
 8001c36:	b25b      	sxtb	r3, r3
 8001c38:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8001c3c:	b25b      	sxtb	r3, r3
 8001c3e:	4313      	orrs	r3, r2
 8001c40:	b25b      	sxtb	r3, r3
 8001c42:	b2da      	uxtb	r2, r3
 8001c44:	4b1b      	ldr	r3, [pc, #108]	; (8001cb4 <Output+0x22c>)
 8001c46:	705a      	strb	r2, [r3, #1]
	CANTxBuffer[1] |= (inputs->BButtonFPressed			& 0x01) << 7;
 8001c48:	4b1a      	ldr	r3, [pc, #104]	; (8001cb4 <Output+0x22c>)
 8001c4a:	785b      	ldrb	r3, [r3, #1]
 8001c4c:	b25a      	sxtb	r2, r3
 8001c4e:	687b      	ldr	r3, [r7, #4]
 8001c50:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 8001c54:	01db      	lsls	r3, r3, #7
 8001c56:	b25b      	sxtb	r3, r3
 8001c58:	4313      	orrs	r3, r2
 8001c5a:	b25b      	sxtb	r3, r3
 8001c5c:	b2da      	uxtb	r2, r3
 8001c5e:	4b15      	ldr	r3, [pc, #84]	; (8001cb4 <Output+0x22c>)
 8001c60:	705a      	strb	r2, [r3, #1]

	CANTxBuffer[2] = inputs->rClutchPaddle;
 8001c62:	687b      	ldr	r3, [r7, #4]
 8001c64:	f993 3030 	ldrsb.w	r3, [r3, #48]	; 0x30
 8001c68:	b2da      	uxtb	r2, r3
 8001c6a:	4b12      	ldr	r3, [pc, #72]	; (8001cb4 <Output+0x22c>)
 8001c6c:	709a      	strb	r2, [r3, #2]

	uint16_t VSupplyCAN = (uint16_t)(inputs->VSupply * 1000);
 8001c6e:	687b      	ldr	r3, [r7, #4]
 8001c70:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8001c72:	4911      	ldr	r1, [pc, #68]	; (8001cb8 <Output+0x230>)
 8001c74:	4618      	mov	r0, r3
 8001c76:	f7fe fd5b 	bl	8000730 <__aeabi_fmul>
 8001c7a:	4603      	mov	r3, r0
 8001c7c:	4618      	mov	r0, r3
 8001c7e:	f7fe ff1d 	bl	8000abc <__aeabi_f2uiz>
 8001c82:	4603      	mov	r3, r0
 8001c84:	81fb      	strh	r3, [r7, #14]

	CANTxBuffer[3] = (VSupplyCAN & 0xFF00) >> 8;
 8001c86:	89fb      	ldrh	r3, [r7, #14]
 8001c88:	0a1b      	lsrs	r3, r3, #8
 8001c8a:	b29b      	uxth	r3, r3
 8001c8c:	b2da      	uxtb	r2, r3
 8001c8e:	4b09      	ldr	r3, [pc, #36]	; (8001cb4 <Output+0x22c>)
 8001c90:	70da      	strb	r2, [r3, #3]
	CANTxBuffer[4] = (VSupplyCAN & 0x00FF) >> 0;
 8001c92:	89fb      	ldrh	r3, [r7, #14]
 8001c94:	b2da      	uxtb	r2, r3
 8001c96:	4b07      	ldr	r3, [pc, #28]	; (8001cb4 <Output+0x22c>)
 8001c98:	711a      	strb	r2, [r3, #4]

	CAN_TX(SHIFTER_TX_ID, 8, CANTxBuffer);
 8001c9a:	4a06      	ldr	r2, [pc, #24]	; (8001cb4 <Output+0x22c>)
 8001c9c:	2108      	movs	r1, #8
 8001c9e:	f44f 7044 	mov.w	r0, #784	; 0x310
 8001ca2:	f000 f80b 	bl	8001cbc <CAN_TX>
}
 8001ca6:	bf00      	nop
 8001ca8:	3710      	adds	r7, #16
 8001caa:	46bd      	mov	sp, r7
 8001cac:	bd80      	pop	{r7, pc}
 8001cae:	bf00      	nop
 8001cb0:	40010c00 	.word	0x40010c00
 8001cb4:	20001388 	.word	0x20001388
 8001cb8:	447a0000 	.word	0x447a0000

08001cbc <CAN_TX>:


void CAN_TX(uint32_t ID, uint8_t dlc, uint8_t* data) {
 8001cbc:	b580      	push	{r7, lr}
 8001cbe:	b08c      	sub	sp, #48	; 0x30
 8001cc0:	af00      	add	r7, sp, #0
 8001cc2:	60f8      	str	r0, [r7, #12]
 8001cc4:	460b      	mov	r3, r1
 8001cc6:	607a      	str	r2, [r7, #4]
 8001cc8:	72fb      	strb	r3, [r7, #11]

	CAN_TxHeaderTypeDef CanTxHeader;
	uint32_t nCanTxMailbox;

	CanTxHeader.DLC = dlc;
 8001cca:	7afb      	ldrb	r3, [r7, #11]
 8001ccc:	627b      	str	r3, [r7, #36]	; 0x24
	CanTxHeader.StdId = ID;
 8001cce:	68fb      	ldr	r3, [r7, #12]
 8001cd0:	617b      	str	r3, [r7, #20]
	CanTxHeader.IDE = CAN_ID_STD;
 8001cd2:	2300      	movs	r3, #0
 8001cd4:	61fb      	str	r3, [r7, #28]
	CanTxHeader.RTR = CAN_RTR_DATA;
 8001cd6:	2300      	movs	r3, #0
 8001cd8:	623b      	str	r3, [r7, #32]

	uint32_t wait = __HAL_TIM_GET_COUNTER(&htim2) + CAN_TX_TIMEOUT;
 8001cda:	4b29      	ldr	r3, [pc, #164]	; (8001d80 <CAN_TX+0xc4>)
 8001cdc:	681b      	ldr	r3, [r3, #0]
 8001cde:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001ce0:	33c8      	adds	r3, #200	; 0xc8
 8001ce2:	62fb      	str	r3, [r7, #44]	; 0x2c
	while((HAL_CAN_GetTxMailboxesFreeLevel(&hcan) == 0) && (__HAL_TIM_GET_COUNTER(&htim2) < wait));
 8001ce4:	bf00      	nop
 8001ce6:	4827      	ldr	r0, [pc, #156]	; (8001d84 <CAN_TX+0xc8>)
 8001ce8:	f001 fb59 	bl	800339e <HAL_CAN_GetTxMailboxesFreeLevel>
 8001cec:	4603      	mov	r3, r0
 8001cee:	2b00      	cmp	r3, #0
 8001cf0:	d105      	bne.n	8001cfe <CAN_TX+0x42>
 8001cf2:	4b23      	ldr	r3, [pc, #140]	; (8001d80 <CAN_TX+0xc4>)
 8001cf4:	681b      	ldr	r3, [r3, #0]
 8001cf6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001cf8:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8001cfa:	429a      	cmp	r2, r3
 8001cfc:	d8f3      	bhi.n	8001ce6 <CAN_TX+0x2a>

	if(HAL_CAN_GetTxMailboxesFreeLevel(&hcan) == 0) {	// all mailboxes are still filled
 8001cfe:	4821      	ldr	r0, [pc, #132]	; (8001d84 <CAN_TX+0xc8>)
 8001d00:	f001 fb4d 	bl	800339e <HAL_CAN_GetTxMailboxesFreeLevel>
 8001d04:	4603      	mov	r3, r0
 8001d06:	2b00      	cmp	r3, #0
 8001d08:	d105      	bne.n	8001d16 <CAN_TX+0x5a>
		HAL_CAN_AbortTxRequest(&hcan, nCanOldestMailbox);
 8001d0a:	4b1f      	ldr	r3, [pc, #124]	; (8001d88 <CAN_TX+0xcc>)
 8001d0c:	681b      	ldr	r3, [r3, #0]
 8001d0e:	4619      	mov	r1, r3
 8001d10:	481c      	ldr	r0, [pc, #112]	; (8001d84 <CAN_TX+0xc8>)
 8001d12:	f001 fb00 	bl	8003316 <HAL_CAN_AbortTxRequest>
	}

	if(HAL_CAN_AddTxMessage(&hcan, &CanTxHeader, data, &nCanTxMailbox) != HAL_OK) {
 8001d16:	f107 0310 	add.w	r3, r7, #16
 8001d1a:	f107 0114 	add.w	r1, r7, #20
 8001d1e:	687a      	ldr	r2, [r7, #4]
 8001d20:	4818      	ldr	r0, [pc, #96]	; (8001d84 <CAN_TX+0xc8>)
 8001d22:	f001 fa29 	bl	8003178 <HAL_CAN_AddTxMessage>
 8001d26:	4603      	mov	r3, r0
 8001d28:	2b00      	cmp	r3, #0
 8001d2a:	d008      	beq.n	8001d3e <CAN_TX+0x82>
		print("Failed to Add Message can 1\n");
 8001d2c:	4817      	ldr	r0, [pc, #92]	; (8001d8c <CAN_TX+0xd0>)
 8001d2e:	f000 fa3d 	bl	80021ac <print>
		nCanTxErrorCount++;
 8001d32:	4b17      	ldr	r3, [pc, #92]	; (8001d90 <CAN_TX+0xd4>)
 8001d34:	681b      	ldr	r3, [r3, #0]
 8001d36:	3301      	adds	r3, #1
 8001d38:	4a15      	ldr	r2, [pc, #84]	; (8001d90 <CAN_TX+0xd4>)
 8001d3a:	6013      	str	r3, [r2, #0]
 8001d3c:	e01c      	b.n	8001d78 <CAN_TX+0xbc>
		return;
	}

	// Mailbox aging adjustment
	if(nCanTxMailbox != nCanYoungestMailbox) {
 8001d3e:	693a      	ldr	r2, [r7, #16]
 8001d40:	4b14      	ldr	r3, [pc, #80]	; (8001d94 <CAN_TX+0xd8>)
 8001d42:	681b      	ldr	r3, [r3, #0]
 8001d44:	429a      	cmp	r2, r3
 8001d46:	d017      	beq.n	8001d78 <CAN_TX+0xbc>

		if(nCanTxMailbox != nCanSecondOldestMailbox) {
 8001d48:	693a      	ldr	r2, [r7, #16]
 8001d4a:	4b13      	ldr	r3, [pc, #76]	; (8001d98 <CAN_TX+0xdc>)
 8001d4c:	681b      	ldr	r3, [r3, #0]
 8001d4e:	429a      	cmp	r2, r3
 8001d50:	d00b      	beq.n	8001d6a <CAN_TX+0xae>
			nCanOldestMailbox = nCanSecondOldestMailbox;
 8001d52:	4b11      	ldr	r3, [pc, #68]	; (8001d98 <CAN_TX+0xdc>)
 8001d54:	681b      	ldr	r3, [r3, #0]
 8001d56:	4a0c      	ldr	r2, [pc, #48]	; (8001d88 <CAN_TX+0xcc>)
 8001d58:	6013      	str	r3, [r2, #0]
			nCanSecondOldestMailbox = nCanYoungestMailbox;
 8001d5a:	4b0e      	ldr	r3, [pc, #56]	; (8001d94 <CAN_TX+0xd8>)
 8001d5c:	681b      	ldr	r3, [r3, #0]
 8001d5e:	4a0e      	ldr	r2, [pc, #56]	; (8001d98 <CAN_TX+0xdc>)
 8001d60:	6013      	str	r3, [r2, #0]
			nCanYoungestMailbox = nCanTxMailbox;
 8001d62:	693b      	ldr	r3, [r7, #16]
 8001d64:	4a0b      	ldr	r2, [pc, #44]	; (8001d94 <CAN_TX+0xd8>)
 8001d66:	6013      	str	r3, [r2, #0]
 8001d68:	e006      	b.n	8001d78 <CAN_TX+0xbc>
		}
		else {
			nCanSecondOldestMailbox = nCanYoungestMailbox;
 8001d6a:	4b0a      	ldr	r3, [pc, #40]	; (8001d94 <CAN_TX+0xd8>)
 8001d6c:	681b      	ldr	r3, [r3, #0]
 8001d6e:	4a0a      	ldr	r2, [pc, #40]	; (8001d98 <CAN_TX+0xdc>)
 8001d70:	6013      	str	r3, [r2, #0]
			nCanYoungestMailbox = nCanTxMailbox;
 8001d72:	693b      	ldr	r3, [r7, #16]
 8001d74:	4a07      	ldr	r2, [pc, #28]	; (8001d94 <CAN_TX+0xd8>)
 8001d76:	6013      	str	r3, [r2, #0]
		}
	}

}
 8001d78:	3730      	adds	r7, #48	; 0x30
 8001d7a:	46bd      	mov	sp, r7
 8001d7c:	bd80      	pop	{r7, pc}
 8001d7e:	bf00      	nop
 8001d80:	200001a0 	.word	0x200001a0
 8001d84:	20000130 	.word	0x20000130
 8001d88:	20000000 	.word	0x20000000
 8001d8c:	08006360 	.word	0x08006360
 8001d90:	20001390 	.word	0x20001390
 8001d94:	20000008 	.word	0x20000008
 8001d98:	20000004 	.word	0x20000004

08001d9c <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001d9c:	b480      	push	{r7}
 8001d9e:	b085      	sub	sp, #20
 8001da0:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_AFIO_CLK_ENABLE();
 8001da2:	4b15      	ldr	r3, [pc, #84]	; (8001df8 <HAL_MspInit+0x5c>)
 8001da4:	699b      	ldr	r3, [r3, #24]
 8001da6:	4a14      	ldr	r2, [pc, #80]	; (8001df8 <HAL_MspInit+0x5c>)
 8001da8:	f043 0301 	orr.w	r3, r3, #1
 8001dac:	6193      	str	r3, [r2, #24]
 8001dae:	4b12      	ldr	r3, [pc, #72]	; (8001df8 <HAL_MspInit+0x5c>)
 8001db0:	699b      	ldr	r3, [r3, #24]
 8001db2:	f003 0301 	and.w	r3, r3, #1
 8001db6:	60bb      	str	r3, [r7, #8]
 8001db8:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001dba:	4b0f      	ldr	r3, [pc, #60]	; (8001df8 <HAL_MspInit+0x5c>)
 8001dbc:	69db      	ldr	r3, [r3, #28]
 8001dbe:	4a0e      	ldr	r2, [pc, #56]	; (8001df8 <HAL_MspInit+0x5c>)
 8001dc0:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001dc4:	61d3      	str	r3, [r2, #28]
 8001dc6:	4b0c      	ldr	r3, [pc, #48]	; (8001df8 <HAL_MspInit+0x5c>)
 8001dc8:	69db      	ldr	r3, [r3, #28]
 8001dca:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001dce:	607b      	str	r3, [r7, #4]
 8001dd0:	687b      	ldr	r3, [r7, #4]

  /* System interrupt init*/

  /** NOJTAG: JTAG-DP Disabled and SW-DP Enabled
  */
  __HAL_AFIO_REMAP_SWJ_NOJTAG();
 8001dd2:	4b0a      	ldr	r3, [pc, #40]	; (8001dfc <HAL_MspInit+0x60>)
 8001dd4:	685b      	ldr	r3, [r3, #4]
 8001dd6:	60fb      	str	r3, [r7, #12]
 8001dd8:	68fb      	ldr	r3, [r7, #12]
 8001dda:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 8001dde:	60fb      	str	r3, [r7, #12]
 8001de0:	68fb      	ldr	r3, [r7, #12]
 8001de2:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8001de6:	60fb      	str	r3, [r7, #12]
 8001de8:	4a04      	ldr	r2, [pc, #16]	; (8001dfc <HAL_MspInit+0x60>)
 8001dea:	68fb      	ldr	r3, [r7, #12]
 8001dec:	6053      	str	r3, [r2, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001dee:	bf00      	nop
 8001df0:	3714      	adds	r7, #20
 8001df2:	46bd      	mov	sp, r7
 8001df4:	bc80      	pop	{r7}
 8001df6:	4770      	bx	lr
 8001df8:	40021000 	.word	0x40021000
 8001dfc:	40010000 	.word	0x40010000

08001e00 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 8001e00:	b580      	push	{r7, lr}
 8001e02:	b088      	sub	sp, #32
 8001e04:	af00      	add	r7, sp, #0
 8001e06:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001e08:	f107 0310 	add.w	r3, r7, #16
 8001e0c:	2200      	movs	r2, #0
 8001e0e:	601a      	str	r2, [r3, #0]
 8001e10:	605a      	str	r2, [r3, #4]
 8001e12:	609a      	str	r2, [r3, #8]
 8001e14:	60da      	str	r2, [r3, #12]
  if(hadc->Instance==ADC1)
 8001e16:	687b      	ldr	r3, [r7, #4]
 8001e18:	681b      	ldr	r3, [r3, #0]
 8001e1a:	4a28      	ldr	r2, [pc, #160]	; (8001ebc <HAL_ADC_MspInit+0xbc>)
 8001e1c:	4293      	cmp	r3, r2
 8001e1e:	d149      	bne.n	8001eb4 <HAL_ADC_MspInit+0xb4>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 8001e20:	4b27      	ldr	r3, [pc, #156]	; (8001ec0 <HAL_ADC_MspInit+0xc0>)
 8001e22:	699b      	ldr	r3, [r3, #24]
 8001e24:	4a26      	ldr	r2, [pc, #152]	; (8001ec0 <HAL_ADC_MspInit+0xc0>)
 8001e26:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8001e2a:	6193      	str	r3, [r2, #24]
 8001e2c:	4b24      	ldr	r3, [pc, #144]	; (8001ec0 <HAL_ADC_MspInit+0xc0>)
 8001e2e:	699b      	ldr	r3, [r3, #24]
 8001e30:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8001e34:	60fb      	str	r3, [r7, #12]
 8001e36:	68fb      	ldr	r3, [r7, #12]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001e38:	4b21      	ldr	r3, [pc, #132]	; (8001ec0 <HAL_ADC_MspInit+0xc0>)
 8001e3a:	699b      	ldr	r3, [r3, #24]
 8001e3c:	4a20      	ldr	r2, [pc, #128]	; (8001ec0 <HAL_ADC_MspInit+0xc0>)
 8001e3e:	f043 0304 	orr.w	r3, r3, #4
 8001e42:	6193      	str	r3, [r2, #24]
 8001e44:	4b1e      	ldr	r3, [pc, #120]	; (8001ec0 <HAL_ADC_MspInit+0xc0>)
 8001e46:	699b      	ldr	r3, [r3, #24]
 8001e48:	f003 0304 	and.w	r3, r3, #4
 8001e4c:	60bb      	str	r3, [r7, #8]
 8001e4e:	68bb      	ldr	r3, [r7, #8]
    PA0-WKUP     ------> ADC1_IN0
    PA1     ------> ADC1_IN1
    PA2     ------> ADC1_IN2
    PA3     ------> ADC1_IN3
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3;
 8001e50:	230f      	movs	r3, #15
 8001e52:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001e54:	2303      	movs	r3, #3
 8001e56:	617b      	str	r3, [r7, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001e58:	f107 0310 	add.w	r3, r7, #16
 8001e5c:	4619      	mov	r1, r3
 8001e5e:	4819      	ldr	r0, [pc, #100]	; (8001ec4 <HAL_ADC_MspInit+0xc4>)
 8001e60:	f002 f924 	bl	80040ac <HAL_GPIO_Init>

    /* ADC1 DMA Init */
    /* ADC1 Init */
    hdma_adc1.Instance = DMA1_Channel1;
 8001e64:	4b18      	ldr	r3, [pc, #96]	; (8001ec8 <HAL_ADC_MspInit+0xc8>)
 8001e66:	4a19      	ldr	r2, [pc, #100]	; (8001ecc <HAL_ADC_MspInit+0xcc>)
 8001e68:	601a      	str	r2, [r3, #0]
    hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 8001e6a:	4b17      	ldr	r3, [pc, #92]	; (8001ec8 <HAL_ADC_MspInit+0xc8>)
 8001e6c:	2200      	movs	r2, #0
 8001e6e:	605a      	str	r2, [r3, #4]
    hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 8001e70:	4b15      	ldr	r3, [pc, #84]	; (8001ec8 <HAL_ADC_MspInit+0xc8>)
 8001e72:	2200      	movs	r2, #0
 8001e74:	609a      	str	r2, [r3, #8]
    hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 8001e76:	4b14      	ldr	r3, [pc, #80]	; (8001ec8 <HAL_ADC_MspInit+0xc8>)
 8001e78:	2280      	movs	r2, #128	; 0x80
 8001e7a:	60da      	str	r2, [r3, #12]
    hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 8001e7c:	4b12      	ldr	r3, [pc, #72]	; (8001ec8 <HAL_ADC_MspInit+0xc8>)
 8001e7e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001e82:	611a      	str	r2, [r3, #16]
    hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 8001e84:	4b10      	ldr	r3, [pc, #64]	; (8001ec8 <HAL_ADC_MspInit+0xc8>)
 8001e86:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8001e8a:	615a      	str	r2, [r3, #20]
    hdma_adc1.Init.Mode = DMA_CIRCULAR;
 8001e8c:	4b0e      	ldr	r3, [pc, #56]	; (8001ec8 <HAL_ADC_MspInit+0xc8>)
 8001e8e:	2220      	movs	r2, #32
 8001e90:	619a      	str	r2, [r3, #24]
    hdma_adc1.Init.Priority = DMA_PRIORITY_LOW;
 8001e92:	4b0d      	ldr	r3, [pc, #52]	; (8001ec8 <HAL_ADC_MspInit+0xc8>)
 8001e94:	2200      	movs	r2, #0
 8001e96:	61da      	str	r2, [r3, #28]
    if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 8001e98:	480b      	ldr	r0, [pc, #44]	; (8001ec8 <HAL_ADC_MspInit+0xc8>)
 8001e9a:	f001 ff19 	bl	8003cd0 <HAL_DMA_Init>
 8001e9e:	4603      	mov	r3, r0
 8001ea0:	2b00      	cmp	r3, #0
 8001ea2:	d001      	beq.n	8001ea8 <HAL_ADC_MspInit+0xa8>
    {
      Error_Handler();
 8001ea4:	f7ff fde0 	bl	8001a68 <Error_Handler>
    }

    __HAL_LINKDMA(hadc,DMA_Handle,hdma_adc1);
 8001ea8:	687b      	ldr	r3, [r7, #4]
 8001eaa:	4a07      	ldr	r2, [pc, #28]	; (8001ec8 <HAL_ADC_MspInit+0xc8>)
 8001eac:	621a      	str	r2, [r3, #32]
 8001eae:	4a06      	ldr	r2, [pc, #24]	; (8001ec8 <HAL_ADC_MspInit+0xc8>)
 8001eb0:	687b      	ldr	r3, [r7, #4]
 8001eb2:	6253      	str	r3, [r2, #36]	; 0x24
  /* USER CODE BEGIN ADC1_MspInit 1 */

  /* USER CODE END ADC1_MspInit 1 */
  }

}
 8001eb4:	bf00      	nop
 8001eb6:	3720      	adds	r7, #32
 8001eb8:	46bd      	mov	sp, r7
 8001eba:	bd80      	pop	{r7, pc}
 8001ebc:	40012400 	.word	0x40012400
 8001ec0:	40021000 	.word	0x40021000
 8001ec4:	40010800 	.word	0x40010800
 8001ec8:	200000ec 	.word	0x200000ec
 8001ecc:	40020008 	.word	0x40020008

08001ed0 <HAL_CAN_MspInit>:
* This function configures the hardware resources used in this example
* @param hcan: CAN handle pointer
* @retval None
*/
void HAL_CAN_MspInit(CAN_HandleTypeDef* hcan)
{
 8001ed0:	b580      	push	{r7, lr}
 8001ed2:	b088      	sub	sp, #32
 8001ed4:	af00      	add	r7, sp, #0
 8001ed6:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001ed8:	f107 0310 	add.w	r3, r7, #16
 8001edc:	2200      	movs	r2, #0
 8001ede:	601a      	str	r2, [r3, #0]
 8001ee0:	605a      	str	r2, [r3, #4]
 8001ee2:	609a      	str	r2, [r3, #8]
 8001ee4:	60da      	str	r2, [r3, #12]
  if(hcan->Instance==CAN1)
 8001ee6:	687b      	ldr	r3, [r7, #4]
 8001ee8:	681b      	ldr	r3, [r3, #0]
 8001eea:	4a20      	ldr	r2, [pc, #128]	; (8001f6c <HAL_CAN_MspInit+0x9c>)
 8001eec:	4293      	cmp	r3, r2
 8001eee:	d139      	bne.n	8001f64 <HAL_CAN_MspInit+0x94>
  {
  /* USER CODE BEGIN CAN1_MspInit 0 */

  /* USER CODE END CAN1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CAN1_CLK_ENABLE();
 8001ef0:	4b1f      	ldr	r3, [pc, #124]	; (8001f70 <HAL_CAN_MspInit+0xa0>)
 8001ef2:	69db      	ldr	r3, [r3, #28]
 8001ef4:	4a1e      	ldr	r2, [pc, #120]	; (8001f70 <HAL_CAN_MspInit+0xa0>)
 8001ef6:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8001efa:	61d3      	str	r3, [r2, #28]
 8001efc:	4b1c      	ldr	r3, [pc, #112]	; (8001f70 <HAL_CAN_MspInit+0xa0>)
 8001efe:	69db      	ldr	r3, [r3, #28]
 8001f00:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001f04:	60fb      	str	r3, [r7, #12]
 8001f06:	68fb      	ldr	r3, [r7, #12]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001f08:	4b19      	ldr	r3, [pc, #100]	; (8001f70 <HAL_CAN_MspInit+0xa0>)
 8001f0a:	699b      	ldr	r3, [r3, #24]
 8001f0c:	4a18      	ldr	r2, [pc, #96]	; (8001f70 <HAL_CAN_MspInit+0xa0>)
 8001f0e:	f043 0304 	orr.w	r3, r3, #4
 8001f12:	6193      	str	r3, [r2, #24]
 8001f14:	4b16      	ldr	r3, [pc, #88]	; (8001f70 <HAL_CAN_MspInit+0xa0>)
 8001f16:	699b      	ldr	r3, [r3, #24]
 8001f18:	f003 0304 	and.w	r3, r3, #4
 8001f1c:	60bb      	str	r3, [r7, #8]
 8001f1e:	68bb      	ldr	r3, [r7, #8]
    /**CAN GPIO Configuration
    PA11     ------> CAN_RX
    PA12     ------> CAN_TX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_11;
 8001f20:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8001f24:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001f26:	2300      	movs	r3, #0
 8001f28:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001f2a:	2300      	movs	r3, #0
 8001f2c:	61bb      	str	r3, [r7, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001f2e:	f107 0310 	add.w	r3, r7, #16
 8001f32:	4619      	mov	r1, r3
 8001f34:	480f      	ldr	r0, [pc, #60]	; (8001f74 <HAL_CAN_MspInit+0xa4>)
 8001f36:	f002 f8b9 	bl	80040ac <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_12;
 8001f3a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001f3e:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f40:	2302      	movs	r3, #2
 8001f42:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001f44:	2303      	movs	r3, #3
 8001f46:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001f48:	f107 0310 	add.w	r3, r7, #16
 8001f4c:	4619      	mov	r1, r3
 8001f4e:	4809      	ldr	r0, [pc, #36]	; (8001f74 <HAL_CAN_MspInit+0xa4>)
 8001f50:	f002 f8ac 	bl	80040ac <HAL_GPIO_Init>

    /* CAN1 interrupt Init */
    HAL_NVIC_SetPriority(USB_LP_CAN1_RX0_IRQn, 0, 0);
 8001f54:	2200      	movs	r2, #0
 8001f56:	2100      	movs	r1, #0
 8001f58:	2014      	movs	r0, #20
 8001f5a:	f001 fe82 	bl	8003c62 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USB_LP_CAN1_RX0_IRQn);
 8001f5e:	2014      	movs	r0, #20
 8001f60:	f001 fe9b 	bl	8003c9a <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN CAN1_MspInit 1 */

  /* USER CODE END CAN1_MspInit 1 */
  }

}
 8001f64:	bf00      	nop
 8001f66:	3720      	adds	r7, #32
 8001f68:	46bd      	mov	sp, r7
 8001f6a:	bd80      	pop	{r7, pc}
 8001f6c:	40006400 	.word	0x40006400
 8001f70:	40021000 	.word	0x40021000
 8001f74:	40010800 	.word	0x40010800

08001f78 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8001f78:	b580      	push	{r7, lr}
 8001f7a:	b086      	sub	sp, #24
 8001f7c:	af00      	add	r7, sp, #0
 8001f7e:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM1)
 8001f80:	687b      	ldr	r3, [r7, #4]
 8001f82:	681b      	ldr	r3, [r3, #0]
 8001f84:	4a1f      	ldr	r2, [pc, #124]	; (8002004 <HAL_TIM_Base_MspInit+0x8c>)
 8001f86:	4293      	cmp	r3, r2
 8001f88:	d10c      	bne.n	8001fa4 <HAL_TIM_Base_MspInit+0x2c>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 8001f8a:	4b1f      	ldr	r3, [pc, #124]	; (8002008 <HAL_TIM_Base_MspInit+0x90>)
 8001f8c:	699b      	ldr	r3, [r3, #24]
 8001f8e:	4a1e      	ldr	r2, [pc, #120]	; (8002008 <HAL_TIM_Base_MspInit+0x90>)
 8001f90:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8001f94:	6193      	str	r3, [r2, #24]
 8001f96:	4b1c      	ldr	r3, [pc, #112]	; (8002008 <HAL_TIM_Base_MspInit+0x90>)
 8001f98:	699b      	ldr	r3, [r3, #24]
 8001f9a:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8001f9e:	617b      	str	r3, [r7, #20]
 8001fa0:	697b      	ldr	r3, [r7, #20]
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }

}
 8001fa2:	e02a      	b.n	8001ffa <HAL_TIM_Base_MspInit+0x82>
  else if(htim_base->Instance==TIM2)
 8001fa4:	687b      	ldr	r3, [r7, #4]
 8001fa6:	681b      	ldr	r3, [r3, #0]
 8001fa8:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8001fac:	d10c      	bne.n	8001fc8 <HAL_TIM_Base_MspInit+0x50>
    __HAL_RCC_TIM2_CLK_ENABLE();
 8001fae:	4b16      	ldr	r3, [pc, #88]	; (8002008 <HAL_TIM_Base_MspInit+0x90>)
 8001fb0:	69db      	ldr	r3, [r3, #28]
 8001fb2:	4a15      	ldr	r2, [pc, #84]	; (8002008 <HAL_TIM_Base_MspInit+0x90>)
 8001fb4:	f043 0301 	orr.w	r3, r3, #1
 8001fb8:	61d3      	str	r3, [r2, #28]
 8001fba:	4b13      	ldr	r3, [pc, #76]	; (8002008 <HAL_TIM_Base_MspInit+0x90>)
 8001fbc:	69db      	ldr	r3, [r3, #28]
 8001fbe:	f003 0301 	and.w	r3, r3, #1
 8001fc2:	613b      	str	r3, [r7, #16]
 8001fc4:	693b      	ldr	r3, [r7, #16]
}
 8001fc6:	e018      	b.n	8001ffa <HAL_TIM_Base_MspInit+0x82>
  else if(htim_base->Instance==TIM3)
 8001fc8:	687b      	ldr	r3, [r7, #4]
 8001fca:	681b      	ldr	r3, [r3, #0]
 8001fcc:	4a0f      	ldr	r2, [pc, #60]	; (800200c <HAL_TIM_Base_MspInit+0x94>)
 8001fce:	4293      	cmp	r3, r2
 8001fd0:	d113      	bne.n	8001ffa <HAL_TIM_Base_MspInit+0x82>
    __HAL_RCC_TIM3_CLK_ENABLE();
 8001fd2:	4b0d      	ldr	r3, [pc, #52]	; (8002008 <HAL_TIM_Base_MspInit+0x90>)
 8001fd4:	69db      	ldr	r3, [r3, #28]
 8001fd6:	4a0c      	ldr	r2, [pc, #48]	; (8002008 <HAL_TIM_Base_MspInit+0x90>)
 8001fd8:	f043 0302 	orr.w	r3, r3, #2
 8001fdc:	61d3      	str	r3, [r2, #28]
 8001fde:	4b0a      	ldr	r3, [pc, #40]	; (8002008 <HAL_TIM_Base_MspInit+0x90>)
 8001fe0:	69db      	ldr	r3, [r3, #28]
 8001fe2:	f003 0302 	and.w	r3, r3, #2
 8001fe6:	60fb      	str	r3, [r7, #12]
 8001fe8:	68fb      	ldr	r3, [r7, #12]
    HAL_NVIC_SetPriority(TIM3_IRQn, 0, 0);
 8001fea:	2200      	movs	r2, #0
 8001fec:	2100      	movs	r1, #0
 8001fee:	201d      	movs	r0, #29
 8001ff0:	f001 fe37 	bl	8003c62 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM3_IRQn);
 8001ff4:	201d      	movs	r0, #29
 8001ff6:	f001 fe50 	bl	8003c9a <HAL_NVIC_EnableIRQ>
}
 8001ffa:	bf00      	nop
 8001ffc:	3718      	adds	r7, #24
 8001ffe:	46bd      	mov	sp, r7
 8002000:	bd80      	pop	{r7, pc}
 8002002:	bf00      	nop
 8002004:	40012c00 	.word	0x40012c00
 8002008:	40021000 	.word	0x40021000
 800200c:	40000400 	.word	0x40000400

08002010 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8002010:	b580      	push	{r7, lr}
 8002012:	b088      	sub	sp, #32
 8002014:	af00      	add	r7, sp, #0
 8002016:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002018:	f107 0310 	add.w	r3, r7, #16
 800201c:	2200      	movs	r2, #0
 800201e:	601a      	str	r2, [r3, #0]
 8002020:	605a      	str	r2, [r3, #4]
 8002022:	609a      	str	r2, [r3, #8]
 8002024:	60da      	str	r2, [r3, #12]
  if(huart->Instance==USART1)
 8002026:	687b      	ldr	r3, [r7, #4]
 8002028:	681b      	ldr	r3, [r3, #0]
 800202a:	4a1c      	ldr	r2, [pc, #112]	; (800209c <HAL_UART_MspInit+0x8c>)
 800202c:	4293      	cmp	r3, r2
 800202e:	d131      	bne.n	8002094 <HAL_UART_MspInit+0x84>
  {
  /* USER CODE BEGIN USART1_MspInit 0 */

  /* USER CODE END USART1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 8002030:	4b1b      	ldr	r3, [pc, #108]	; (80020a0 <HAL_UART_MspInit+0x90>)
 8002032:	699b      	ldr	r3, [r3, #24]
 8002034:	4a1a      	ldr	r2, [pc, #104]	; (80020a0 <HAL_UART_MspInit+0x90>)
 8002036:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800203a:	6193      	str	r3, [r2, #24]
 800203c:	4b18      	ldr	r3, [pc, #96]	; (80020a0 <HAL_UART_MspInit+0x90>)
 800203e:	699b      	ldr	r3, [r3, #24]
 8002040:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8002044:	60fb      	str	r3, [r7, #12]
 8002046:	68fb      	ldr	r3, [r7, #12]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002048:	4b15      	ldr	r3, [pc, #84]	; (80020a0 <HAL_UART_MspInit+0x90>)
 800204a:	699b      	ldr	r3, [r3, #24]
 800204c:	4a14      	ldr	r2, [pc, #80]	; (80020a0 <HAL_UART_MspInit+0x90>)
 800204e:	f043 0304 	orr.w	r3, r3, #4
 8002052:	6193      	str	r3, [r2, #24]
 8002054:	4b12      	ldr	r3, [pc, #72]	; (80020a0 <HAL_UART_MspInit+0x90>)
 8002056:	699b      	ldr	r3, [r3, #24]
 8002058:	f003 0304 	and.w	r3, r3, #4
 800205c:	60bb      	str	r3, [r7, #8]
 800205e:	68bb      	ldr	r3, [r7, #8]
    /**USART1 GPIO Configuration
    PA9     ------> USART1_TX
    PA10     ------> USART1_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8002060:	f44f 7300 	mov.w	r3, #512	; 0x200
 8002064:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002066:	2302      	movs	r3, #2
 8002068:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800206a:	2303      	movs	r3, #3
 800206c:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800206e:	f107 0310 	add.w	r3, r7, #16
 8002072:	4619      	mov	r1, r3
 8002074:	480b      	ldr	r0, [pc, #44]	; (80020a4 <HAL_UART_MspInit+0x94>)
 8002076:	f002 f819 	bl	80040ac <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10;
 800207a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800207e:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8002080:	2300      	movs	r3, #0
 8002082:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002084:	2300      	movs	r3, #0
 8002086:	61bb      	str	r3, [r7, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002088:	f107 0310 	add.w	r3, r7, #16
 800208c:	4619      	mov	r1, r3
 800208e:	4805      	ldr	r0, [pc, #20]	; (80020a4 <HAL_UART_MspInit+0x94>)
 8002090:	f002 f80c 	bl	80040ac <HAL_GPIO_Init>
  /* USER CODE BEGIN USART1_MspInit 1 */

  /* USER CODE END USART1_MspInit 1 */
  }

}
 8002094:	bf00      	nop
 8002096:	3720      	adds	r7, #32
 8002098:	46bd      	mov	sp, r7
 800209a:	bd80      	pop	{r7, pc}
 800209c:	40013800 	.word	0x40013800
 80020a0:	40021000 	.word	0x40021000
 80020a4:	40010800 	.word	0x40010800

080020a8 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 80020a8:	b480      	push	{r7}
 80020aa:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 80020ac:	e7fe      	b.n	80020ac <NMI_Handler+0x4>

080020ae <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 80020ae:	b480      	push	{r7}
 80020b0:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80020b2:	e7fe      	b.n	80020b2 <HardFault_Handler+0x4>

080020b4 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 80020b4:	b480      	push	{r7}
 80020b6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80020b8:	e7fe      	b.n	80020b8 <MemManage_Handler+0x4>

080020ba <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 80020ba:	b480      	push	{r7}
 80020bc:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80020be:	e7fe      	b.n	80020be <BusFault_Handler+0x4>

080020c0 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 80020c0:	b480      	push	{r7}
 80020c2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80020c4:	e7fe      	b.n	80020c4 <UsageFault_Handler+0x4>

080020c6 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 80020c6:	b480      	push	{r7}
 80020c8:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 80020ca:	bf00      	nop
 80020cc:	46bd      	mov	sp, r7
 80020ce:	bc80      	pop	{r7}
 80020d0:	4770      	bx	lr

080020d2 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 80020d2:	b480      	push	{r7}
 80020d4:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 80020d6:	bf00      	nop
 80020d8:	46bd      	mov	sp, r7
 80020da:	bc80      	pop	{r7}
 80020dc:	4770      	bx	lr

080020de <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 80020de:	b480      	push	{r7}
 80020e0:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 80020e2:	bf00      	nop
 80020e4:	46bd      	mov	sp, r7
 80020e6:	bc80      	pop	{r7}
 80020e8:	4770      	bx	lr

080020ea <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 80020ea:	b580      	push	{r7, lr}
 80020ec:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80020ee:	f000 f98b 	bl	8002408 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 80020f2:	bf00      	nop
 80020f4:	bd80      	pop	{r7, pc}
	...

080020f8 <DMA1_Channel1_IRQHandler>:

/**
  * @brief This function handles DMA1 channel1 global interrupt.
  */
void DMA1_Channel1_IRQHandler(void)
{
 80020f8:	b580      	push	{r7, lr}
 80020fa:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Channel1_IRQn 0 */

  /* USER CODE END DMA1_Channel1_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_adc1);
 80020fc:	4802      	ldr	r0, [pc, #8]	; (8002108 <DMA1_Channel1_IRQHandler+0x10>)
 80020fe:	f001 fea1 	bl	8003e44 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Channel1_IRQn 1 */

  /* USER CODE END DMA1_Channel1_IRQn 1 */
}
 8002102:	bf00      	nop
 8002104:	bd80      	pop	{r7, pc}
 8002106:	bf00      	nop
 8002108:	200000ec 	.word	0x200000ec

0800210c <USB_LP_CAN1_RX0_IRQHandler>:

/**
  * @brief This function handles USB low priority or CAN RX0 interrupts.
  */
void USB_LP_CAN1_RX0_IRQHandler(void)
{
 800210c:	b580      	push	{r7, lr}
 800210e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USB_LP_CAN1_RX0_IRQn 0 */

  /* USER CODE END USB_LP_CAN1_RX0_IRQn 0 */
  HAL_CAN_IRQHandler(&hcan);
 8002110:	4802      	ldr	r0, [pc, #8]	; (800211c <USB_LP_CAN1_RX0_IRQHandler+0x10>)
 8002112:	f001 fabe 	bl	8003692 <HAL_CAN_IRQHandler>
  /* USER CODE BEGIN USB_LP_CAN1_RX0_IRQn 1 */

  /* USER CODE END USB_LP_CAN1_RX0_IRQn 1 */
}
 8002116:	bf00      	nop
 8002118:	bd80      	pop	{r7, pc}
 800211a:	bf00      	nop
 800211c:	20000130 	.word	0x20000130

08002120 <TIM3_IRQHandler>:

/**
  * @brief This function handles TIM3 global interrupt.
  */
void TIM3_IRQHandler(void)
{
 8002120:	b580      	push	{r7, lr}
 8002122:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM3_IRQn 0 */

  /* USER CODE END TIM3_IRQn 0 */
  HAL_TIM_IRQHandler(&htim3);
 8002124:	4802      	ldr	r0, [pc, #8]	; (8002130 <TIM3_IRQHandler+0x10>)
 8002126:	f002 ffdd 	bl	80050e4 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM3_IRQn 1 */

  /* USER CODE END TIM3_IRQn 1 */
}
 800212a:	bf00      	nop
 800212c:	bd80      	pop	{r7, pc}
 800212e:	bf00      	nop
 8002130:	200001e8 	.word	0x200001e8

08002134 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8002134:	b580      	push	{r7, lr}
 8002136:	b086      	sub	sp, #24
 8002138:	af00      	add	r7, sp, #0
 800213a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800213c:	4a14      	ldr	r2, [pc, #80]	; (8002190 <_sbrk+0x5c>)
 800213e:	4b15      	ldr	r3, [pc, #84]	; (8002194 <_sbrk+0x60>)
 8002140:	1ad3      	subs	r3, r2, r3
 8002142:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8002144:	697b      	ldr	r3, [r7, #20]
 8002146:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8002148:	4b13      	ldr	r3, [pc, #76]	; (8002198 <_sbrk+0x64>)
 800214a:	681b      	ldr	r3, [r3, #0]
 800214c:	2b00      	cmp	r3, #0
 800214e:	d102      	bne.n	8002156 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8002150:	4b11      	ldr	r3, [pc, #68]	; (8002198 <_sbrk+0x64>)
 8002152:	4a12      	ldr	r2, [pc, #72]	; (800219c <_sbrk+0x68>)
 8002154:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8002156:	4b10      	ldr	r3, [pc, #64]	; (8002198 <_sbrk+0x64>)
 8002158:	681a      	ldr	r2, [r3, #0]
 800215a:	687b      	ldr	r3, [r7, #4]
 800215c:	4413      	add	r3, r2
 800215e:	693a      	ldr	r2, [r7, #16]
 8002160:	429a      	cmp	r2, r3
 8002162:	d207      	bcs.n	8002174 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8002164:	f003 fc20 	bl	80059a8 <__errno>
 8002168:	4603      	mov	r3, r0
 800216a:	220c      	movs	r2, #12
 800216c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800216e:	f04f 33ff 	mov.w	r3, #4294967295
 8002172:	e009      	b.n	8002188 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8002174:	4b08      	ldr	r3, [pc, #32]	; (8002198 <_sbrk+0x64>)
 8002176:	681b      	ldr	r3, [r3, #0]
 8002178:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800217a:	4b07      	ldr	r3, [pc, #28]	; (8002198 <_sbrk+0x64>)
 800217c:	681a      	ldr	r2, [r3, #0]
 800217e:	687b      	ldr	r3, [r7, #4]
 8002180:	4413      	add	r3, r2
 8002182:	4a05      	ldr	r2, [pc, #20]	; (8002198 <_sbrk+0x64>)
 8002184:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8002186:	68fb      	ldr	r3, [r7, #12]
}
 8002188:	4618      	mov	r0, r3
 800218a:	3718      	adds	r7, #24
 800218c:	46bd      	mov	sp, r7
 800218e:	bd80      	pop	{r7, pc}
 8002190:	20005000 	.word	0x20005000
 8002194:	00000400 	.word	0x00000400
 8002198:	20001394 	.word	0x20001394
 800219c:	200014e8 	.word	0x200014e8

080021a0 <SystemInit>:
  * @note   This function should be used only after reset.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 80021a0:	b480      	push	{r7}
 80021a2:	af00      	add	r7, sp, #0

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#endif /* USER_VECT_TAB_ADDRESS */
}
 80021a4:	bf00      	nop
 80021a6:	46bd      	mov	sp, r7
 80021a8:	bc80      	pop	{r7}
 80021aa:	4770      	bx	lr

080021ac <print>:
 *      Author: orestis
 */

#include <Utils.h>

void print(char *msg, ...) {
 80021ac:	b40f      	push	{r0, r1, r2, r3}
 80021ae:	b580      	push	{r7, lr}
 80021b0:	b09a      	sub	sp, #104	; 0x68
 80021b2:	af00      	add	r7, sp, #0

	char buff[100];
	va_list args;
	va_start(args, msg);
 80021b4:	f107 0374 	add.w	r3, r7, #116	; 0x74
 80021b8:	603b      	str	r3, [r7, #0]
	vsprintf(buff, msg, args);
 80021ba:	1d3b      	adds	r3, r7, #4
 80021bc:	683a      	ldr	r2, [r7, #0]
 80021be:	6f39      	ldr	r1, [r7, #112]	; 0x70
 80021c0:	4618      	mov	r0, r3
 80021c2:	f003 fbdf 	bl	8005984 <vsiprintf>
	va_end(args);

#if USB_DEBUG
	HAL_UART_Transmit(&huart3, (uint8_t *)buff, strlen(buff), 10);
#endif
}
 80021c6:	bf00      	nop
 80021c8:	3768      	adds	r7, #104	; 0x68
 80021ca:	46bd      	mov	sp, r7
 80021cc:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80021d0:	b004      	add	sp, #16
 80021d2:	4770      	bx	lr

080021d4 <My2DMapInterpolate>:

uint8_t My2DMapInterpolate(int size, const float map[][size], float input, float *output, float minMargin, float maxMargin) {
 80021d4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80021d6:	b089      	sub	sp, #36	; 0x24
 80021d8:	af00      	add	r7, sp, #0
 80021da:	60f8      	str	r0, [r7, #12]
 80021dc:	60b9      	str	r1, [r7, #8]
 80021de:	607a      	str	r2, [r7, #4]
 80021e0:	603b      	str	r3, [r7, #0]
 80021e2:	68fe      	ldr	r6, [r7, #12]
 80021e4:	1e73      	subs	r3, r6, #1
 80021e6:	61bb      	str	r3, [r7, #24]
 80021e8:	4632      	mov	r2, r6
 80021ea:	2300      	movs	r3, #0
 80021ec:	4614      	mov	r4, r2
 80021ee:	461d      	mov	r5, r3
 80021f0:	f04f 0200 	mov.w	r2, #0
 80021f4:	f04f 0300 	mov.w	r3, #0
 80021f8:	016b      	lsls	r3, r5, #5
 80021fa:	ea43 63d4 	orr.w	r3, r3, r4, lsr #27
 80021fe:	0162      	lsls	r2, r4, #5
	float dx, dy;
	int i;

	if(input < map[0][0] - minMargin) {
 8002200:	68bb      	ldr	r3, [r7, #8]
 8002202:	681b      	ldr	r3, [r3, #0]
 8002204:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 8002206:	4618      	mov	r0, r3
 8002208:	f7fe f988 	bl	800051c <__aeabi_fsub>
 800220c:	4603      	mov	r3, r0
 800220e:	4619      	mov	r1, r3
 8002210:	6878      	ldr	r0, [r7, #4]
 8002212:	f7fe fc2b 	bl	8000a6c <__aeabi_fcmplt>
 8002216:	4603      	mov	r3, r0
 8002218:	2b00      	cmp	r3, #0
 800221a:	d008      	beq.n	800222e <My2DMapInterpolate+0x5a>
		// if input is less than the smaller element of the map minus a small margin,
		// we declare the input in error and assign the min value of the map
		*output = map[1][0];
 800221c:	4633      	mov	r3, r6
 800221e:	009b      	lsls	r3, r3, #2
 8002220:	68ba      	ldr	r2, [r7, #8]
 8002222:	4413      	add	r3, r2
 8002224:	681a      	ldr	r2, [r3, #0]
 8002226:	683b      	ldr	r3, [r7, #0]
 8002228:	601a      	str	r2, [r3, #0]
		return 1;
 800222a:	2301      	movs	r3, #1
 800222c:	e07b      	b.n	8002326 <My2DMapInterpolate+0x152>
	}
	if(input > map[0][size-1] + maxMargin) {
 800222e:	68fb      	ldr	r3, [r7, #12]
 8002230:	1e5a      	subs	r2, r3, #1
 8002232:	68bb      	ldr	r3, [r7, #8]
 8002234:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8002238:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 800223a:	4618      	mov	r0, r3
 800223c:	f7fe f970 	bl	8000520 <__addsf3>
 8002240:	4603      	mov	r3, r0
 8002242:	4619      	mov	r1, r3
 8002244:	6878      	ldr	r0, [r7, #4]
 8002246:	f7fe fc2f 	bl	8000aa8 <__aeabi_fcmpgt>
 800224a:	4603      	mov	r3, r0
 800224c:	2b00      	cmp	r3, #0
 800224e:	d00b      	beq.n	8002268 <My2DMapInterpolate+0x94>
		// if input is greater than the largest element of the map plus a small margin,
		// we declare the input in error and assign the max value of the map
		*output = map[1][size-1];
 8002250:	4633      	mov	r3, r6
 8002252:	009b      	lsls	r3, r3, #2
 8002254:	68ba      	ldr	r2, [r7, #8]
 8002256:	4413      	add	r3, r2
 8002258:	68fa      	ldr	r2, [r7, #12]
 800225a:	3a01      	subs	r2, #1
 800225c:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8002260:	683b      	ldr	r3, [r7, #0]
 8002262:	601a      	str	r2, [r3, #0]
		return 1;
 8002264:	2301      	movs	r3, #1
 8002266:	e05e      	b.n	8002326 <My2DMapInterpolate+0x152>
	}

	// we find i so that map[0][i] < input < map[0][i+1]
	for(i=0; i<size--; i++) {
 8002268:	2300      	movs	r3, #0
 800226a:	61fb      	str	r3, [r7, #28]
 800226c:	e00e      	b.n	800228c <My2DMapInterpolate+0xb8>
		if(map[0][i+1] > input)
 800226e:	69fb      	ldr	r3, [r7, #28]
 8002270:	1c5a      	adds	r2, r3, #1
 8002272:	68bb      	ldr	r3, [r7, #8]
 8002274:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8002278:	4619      	mov	r1, r3
 800227a:	6878      	ldr	r0, [r7, #4]
 800227c:	f7fe fbf6 	bl	8000a6c <__aeabi_fcmplt>
 8002280:	4603      	mov	r3, r0
 8002282:	2b00      	cmp	r3, #0
 8002284:	d109      	bne.n	800229a <My2DMapInterpolate+0xc6>
	for(i=0; i<size--; i++) {
 8002286:	69fb      	ldr	r3, [r7, #28]
 8002288:	3301      	adds	r3, #1
 800228a:	61fb      	str	r3, [r7, #28]
 800228c:	68fb      	ldr	r3, [r7, #12]
 800228e:	1e5a      	subs	r2, r3, #1
 8002290:	60fa      	str	r2, [r7, #12]
 8002292:	69fa      	ldr	r2, [r7, #28]
 8002294:	429a      	cmp	r2, r3
 8002296:	dbea      	blt.n	800226e <My2DMapInterpolate+0x9a>
 8002298:	e000      	b.n	800229c <My2DMapInterpolate+0xc8>
			break;
 800229a:	bf00      	nop
	}

	// we interpolate
	dx = map[0][i+1] - map[0][i];
 800229c:	69fb      	ldr	r3, [r7, #28]
 800229e:	1c5a      	adds	r2, r3, #1
 80022a0:	68bb      	ldr	r3, [r7, #8]
 80022a2:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80022a6:	68bb      	ldr	r3, [r7, #8]
 80022a8:	69fa      	ldr	r2, [r7, #28]
 80022aa:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80022ae:	4619      	mov	r1, r3
 80022b0:	f7fe f934 	bl	800051c <__aeabi_fsub>
 80022b4:	4603      	mov	r3, r0
 80022b6:	617b      	str	r3, [r7, #20]
	dy = map[1][i+1] - map[1][i];
 80022b8:	4633      	mov	r3, r6
 80022ba:	009b      	lsls	r3, r3, #2
 80022bc:	68ba      	ldr	r2, [r7, #8]
 80022be:	4413      	add	r3, r2
 80022c0:	69fa      	ldr	r2, [r7, #28]
 80022c2:	3201      	adds	r2, #1
 80022c4:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80022c8:	4633      	mov	r3, r6
 80022ca:	009b      	lsls	r3, r3, #2
 80022cc:	68ba      	ldr	r2, [r7, #8]
 80022ce:	4413      	add	r3, r2
 80022d0:	69fa      	ldr	r2, [r7, #28]
 80022d2:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80022d6:	4619      	mov	r1, r3
 80022d8:	f7fe f920 	bl	800051c <__aeabi_fsub>
 80022dc:	4603      	mov	r3, r0
 80022de:	613b      	str	r3, [r7, #16]

	*output = (float)(map[1][i] + (input - map[0][i]) * dy/dx);
 80022e0:	4633      	mov	r3, r6
 80022e2:	009b      	lsls	r3, r3, #2
 80022e4:	68ba      	ldr	r2, [r7, #8]
 80022e6:	4413      	add	r3, r2
 80022e8:	69fa      	ldr	r2, [r7, #28]
 80022ea:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 80022ee:	68bb      	ldr	r3, [r7, #8]
 80022f0:	69fa      	ldr	r2, [r7, #28]
 80022f2:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80022f6:	4619      	mov	r1, r3
 80022f8:	6878      	ldr	r0, [r7, #4]
 80022fa:	f7fe f90f 	bl	800051c <__aeabi_fsub>
 80022fe:	4603      	mov	r3, r0
 8002300:	6939      	ldr	r1, [r7, #16]
 8002302:	4618      	mov	r0, r3
 8002304:	f7fe fa14 	bl	8000730 <__aeabi_fmul>
 8002308:	4603      	mov	r3, r0
 800230a:	6979      	ldr	r1, [r7, #20]
 800230c:	4618      	mov	r0, r3
 800230e:	f7fe fac3 	bl	8000898 <__aeabi_fdiv>
 8002312:	4603      	mov	r3, r0
 8002314:	4619      	mov	r1, r3
 8002316:	4620      	mov	r0, r4
 8002318:	f7fe f902 	bl	8000520 <__addsf3>
 800231c:	4603      	mov	r3, r0
 800231e:	461a      	mov	r2, r3
 8002320:	683b      	ldr	r3, [r7, #0]
 8002322:	601a      	str	r2, [r3, #0]
	return 0;
 8002324:	2300      	movs	r3, #0
}
 8002326:	4618      	mov	r0, r3
 8002328:	3724      	adds	r7, #36	; 0x24
 800232a:	46bd      	mov	sp, r7
 800232c:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08002330 <Reset_Handler>:
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:

/* Call the clock system initialization function.*/
    bl  SystemInit
 8002330:	f7ff ff36 	bl	80021a0 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8002334:	480b      	ldr	r0, [pc, #44]	; (8002364 <LoopFillZerobss+0xe>)
  ldr r1, =_edata
 8002336:	490c      	ldr	r1, [pc, #48]	; (8002368 <LoopFillZerobss+0x12>)
  ldr r2, =_sidata
 8002338:	4a0c      	ldr	r2, [pc, #48]	; (800236c <LoopFillZerobss+0x16>)
  movs r3, #0
 800233a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800233c:	e002      	b.n	8002344 <LoopCopyDataInit>

0800233e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800233e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8002340:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8002342:	3304      	adds	r3, #4

08002344 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8002344:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8002346:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8002348:	d3f9      	bcc.n	800233e <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800234a:	4a09      	ldr	r2, [pc, #36]	; (8002370 <LoopFillZerobss+0x1a>)
  ldr r4, =_ebss
 800234c:	4c09      	ldr	r4, [pc, #36]	; (8002374 <LoopFillZerobss+0x1e>)
  movs r3, #0
 800234e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8002350:	e001      	b.n	8002356 <LoopFillZerobss>

08002352 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8002352:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8002354:	3204      	adds	r2, #4

08002356 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8002356:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8002358:	d3fb      	bcc.n	8002352 <FillZerobss>

/* Call static constructors */
    bl __libc_init_array
 800235a:	f003 fb2b 	bl	80059b4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800235e:	f7ff f841 	bl	80013e4 <main>
  bx lr
 8002362:	4770      	bx	lr
  ldr r0, =_sdata
 8002364:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8002368:	20000068 	.word	0x20000068
  ldr r2, =_sidata
 800236c:	0800640c 	.word	0x0800640c
  ldr r2, =_sbss
 8002370:	20000068 	.word	0x20000068
  ldr r4, =_ebss
 8002374:	200014e4 	.word	0x200014e4

08002378 <ADC1_2_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8002378:	e7fe      	b.n	8002378 <ADC1_2_IRQHandler>
	...

0800237c <HAL_Init>:
 800237c:	b580      	push	{r7, lr}
 800237e:	af00      	add	r7, sp, #0
 8002380:	4b08      	ldr	r3, [pc, #32]	; (80023a4 <HAL_Init+0x28>)
 8002382:	681b      	ldr	r3, [r3, #0]
 8002384:	4a07      	ldr	r2, [pc, #28]	; (80023a4 <HAL_Init+0x28>)
 8002386:	f043 0310 	orr.w	r3, r3, #16
 800238a:	6013      	str	r3, [r2, #0]
 800238c:	2003      	movs	r0, #3
 800238e:	f001 fc5d 	bl	8003c4c <HAL_NVIC_SetPriorityGrouping>
 8002392:	200f      	movs	r0, #15
 8002394:	f000 f808 	bl	80023a8 <HAL_InitTick>
 8002398:	f7ff fd00 	bl	8001d9c <HAL_MspInit>
 800239c:	2300      	movs	r3, #0
 800239e:	4618      	mov	r0, r3
 80023a0:	bd80      	pop	{r7, pc}
 80023a2:	bf00      	nop
 80023a4:	40022000 	.word	0x40022000

080023a8 <HAL_InitTick>:
 80023a8:	b580      	push	{r7, lr}
 80023aa:	b082      	sub	sp, #8
 80023ac:	af00      	add	r7, sp, #0
 80023ae:	6078      	str	r0, [r7, #4]
 80023b0:	4b12      	ldr	r3, [pc, #72]	; (80023fc <HAL_InitTick+0x54>)
 80023b2:	681a      	ldr	r2, [r3, #0]
 80023b4:	4b12      	ldr	r3, [pc, #72]	; (8002400 <HAL_InitTick+0x58>)
 80023b6:	781b      	ldrb	r3, [r3, #0]
 80023b8:	4619      	mov	r1, r3
 80023ba:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80023be:	fbb3 f3f1 	udiv	r3, r3, r1
 80023c2:	fbb2 f3f3 	udiv	r3, r2, r3
 80023c6:	4618      	mov	r0, r3
 80023c8:	f001 fc75 	bl	8003cb6 <HAL_SYSTICK_Config>
 80023cc:	4603      	mov	r3, r0
 80023ce:	2b00      	cmp	r3, #0
 80023d0:	d001      	beq.n	80023d6 <HAL_InitTick+0x2e>
 80023d2:	2301      	movs	r3, #1
 80023d4:	e00e      	b.n	80023f4 <HAL_InitTick+0x4c>
 80023d6:	687b      	ldr	r3, [r7, #4]
 80023d8:	2b0f      	cmp	r3, #15
 80023da:	d80a      	bhi.n	80023f2 <HAL_InitTick+0x4a>
 80023dc:	2200      	movs	r2, #0
 80023de:	6879      	ldr	r1, [r7, #4]
 80023e0:	f04f 30ff 	mov.w	r0, #4294967295
 80023e4:	f001 fc3d 	bl	8003c62 <HAL_NVIC_SetPriority>
 80023e8:	4a06      	ldr	r2, [pc, #24]	; (8002404 <HAL_InitTick+0x5c>)
 80023ea:	687b      	ldr	r3, [r7, #4]
 80023ec:	6013      	str	r3, [r2, #0]
 80023ee:	2300      	movs	r3, #0
 80023f0:	e000      	b.n	80023f4 <HAL_InitTick+0x4c>
 80023f2:	2301      	movs	r3, #1
 80023f4:	4618      	mov	r0, r3
 80023f6:	3708      	adds	r7, #8
 80023f8:	46bd      	mov	sp, r7
 80023fa:	bd80      	pop	{r7, pc}
 80023fc:	2000000c 	.word	0x2000000c
 8002400:	20000014 	.word	0x20000014
 8002404:	20000010 	.word	0x20000010

08002408 <HAL_IncTick>:
 8002408:	b480      	push	{r7}
 800240a:	af00      	add	r7, sp, #0
 800240c:	4b05      	ldr	r3, [pc, #20]	; (8002424 <HAL_IncTick+0x1c>)
 800240e:	781b      	ldrb	r3, [r3, #0]
 8002410:	461a      	mov	r2, r3
 8002412:	4b05      	ldr	r3, [pc, #20]	; (8002428 <HAL_IncTick+0x20>)
 8002414:	681b      	ldr	r3, [r3, #0]
 8002416:	4413      	add	r3, r2
 8002418:	4a03      	ldr	r2, [pc, #12]	; (8002428 <HAL_IncTick+0x20>)
 800241a:	6013      	str	r3, [r2, #0]
 800241c:	bf00      	nop
 800241e:	46bd      	mov	sp, r7
 8002420:	bc80      	pop	{r7}
 8002422:	4770      	bx	lr
 8002424:	20000014 	.word	0x20000014
 8002428:	20001398 	.word	0x20001398

0800242c <HAL_GetTick>:
 800242c:	b480      	push	{r7}
 800242e:	af00      	add	r7, sp, #0
 8002430:	4b02      	ldr	r3, [pc, #8]	; (800243c <HAL_GetTick+0x10>)
 8002432:	681b      	ldr	r3, [r3, #0]
 8002434:	4618      	mov	r0, r3
 8002436:	46bd      	mov	sp, r7
 8002438:	bc80      	pop	{r7}
 800243a:	4770      	bx	lr
 800243c:	20001398 	.word	0x20001398

08002440 <HAL_Delay>:
 8002440:	b580      	push	{r7, lr}
 8002442:	b084      	sub	sp, #16
 8002444:	af00      	add	r7, sp, #0
 8002446:	6078      	str	r0, [r7, #4]
 8002448:	f7ff fff0 	bl	800242c <HAL_GetTick>
 800244c:	60b8      	str	r0, [r7, #8]
 800244e:	687b      	ldr	r3, [r7, #4]
 8002450:	60fb      	str	r3, [r7, #12]
 8002452:	68fb      	ldr	r3, [r7, #12]
 8002454:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002458:	d005      	beq.n	8002466 <HAL_Delay+0x26>
 800245a:	4b0a      	ldr	r3, [pc, #40]	; (8002484 <HAL_Delay+0x44>)
 800245c:	781b      	ldrb	r3, [r3, #0]
 800245e:	461a      	mov	r2, r3
 8002460:	68fb      	ldr	r3, [r7, #12]
 8002462:	4413      	add	r3, r2
 8002464:	60fb      	str	r3, [r7, #12]
 8002466:	bf00      	nop
 8002468:	f7ff ffe0 	bl	800242c <HAL_GetTick>
 800246c:	4602      	mov	r2, r0
 800246e:	68bb      	ldr	r3, [r7, #8]
 8002470:	1ad3      	subs	r3, r2, r3
 8002472:	68fa      	ldr	r2, [r7, #12]
 8002474:	429a      	cmp	r2, r3
 8002476:	d8f7      	bhi.n	8002468 <HAL_Delay+0x28>
 8002478:	bf00      	nop
 800247a:	bf00      	nop
 800247c:	3710      	adds	r7, #16
 800247e:	46bd      	mov	sp, r7
 8002480:	bd80      	pop	{r7, pc}
 8002482:	bf00      	nop
 8002484:	20000014 	.word	0x20000014

08002488 <HAL_ADC_Init>:
 8002488:	b580      	push	{r7, lr}
 800248a:	b086      	sub	sp, #24
 800248c:	af00      	add	r7, sp, #0
 800248e:	6078      	str	r0, [r7, #4]
 8002490:	2300      	movs	r3, #0
 8002492:	75fb      	strb	r3, [r7, #23]
 8002494:	2300      	movs	r3, #0
 8002496:	613b      	str	r3, [r7, #16]
 8002498:	2300      	movs	r3, #0
 800249a:	60bb      	str	r3, [r7, #8]
 800249c:	2300      	movs	r3, #0
 800249e:	60fb      	str	r3, [r7, #12]
 80024a0:	687b      	ldr	r3, [r7, #4]
 80024a2:	2b00      	cmp	r3, #0
 80024a4:	d101      	bne.n	80024aa <HAL_ADC_Init+0x22>
 80024a6:	2301      	movs	r3, #1
 80024a8:	e0be      	b.n	8002628 <HAL_ADC_Init+0x1a0>
 80024aa:	687b      	ldr	r3, [r7, #4]
 80024ac:	689b      	ldr	r3, [r3, #8]
 80024ae:	2b00      	cmp	r3, #0
 80024b0:	687b      	ldr	r3, [r7, #4]
 80024b2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80024b4:	2b00      	cmp	r3, #0
 80024b6:	d109      	bne.n	80024cc <HAL_ADC_Init+0x44>
 80024b8:	687b      	ldr	r3, [r7, #4]
 80024ba:	2200      	movs	r2, #0
 80024bc:	62da      	str	r2, [r3, #44]	; 0x2c
 80024be:	687b      	ldr	r3, [r7, #4]
 80024c0:	2200      	movs	r2, #0
 80024c2:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 80024c6:	6878      	ldr	r0, [r7, #4]
 80024c8:	f7ff fc9a 	bl	8001e00 <HAL_ADC_MspInit>
 80024cc:	6878      	ldr	r0, [r7, #4]
 80024ce:	f000 faf5 	bl	8002abc <ADC_ConversionStop_Disable>
 80024d2:	4603      	mov	r3, r0
 80024d4:	75fb      	strb	r3, [r7, #23]
 80024d6:	687b      	ldr	r3, [r7, #4]
 80024d8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80024da:	f003 0310 	and.w	r3, r3, #16
 80024de:	2b00      	cmp	r3, #0
 80024e0:	f040 8099 	bne.w	8002616 <HAL_ADC_Init+0x18e>
 80024e4:	7dfb      	ldrb	r3, [r7, #23]
 80024e6:	2b00      	cmp	r3, #0
 80024e8:	f040 8095 	bne.w	8002616 <HAL_ADC_Init+0x18e>
 80024ec:	687b      	ldr	r3, [r7, #4]
 80024ee:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80024f0:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 80024f4:	f023 0302 	bic.w	r3, r3, #2
 80024f8:	f043 0202 	orr.w	r2, r3, #2
 80024fc:	687b      	ldr	r3, [r7, #4]
 80024fe:	629a      	str	r2, [r3, #40]	; 0x28
 8002500:	687b      	ldr	r3, [r7, #4]
 8002502:	685a      	ldr	r2, [r3, #4]
 8002504:	687b      	ldr	r3, [r7, #4]
 8002506:	69db      	ldr	r3, [r3, #28]
 8002508:	431a      	orrs	r2, r3
 800250a:	687b      	ldr	r3, [r7, #4]
 800250c:	7b1b      	ldrb	r3, [r3, #12]
 800250e:	005b      	lsls	r3, r3, #1
 8002510:	4313      	orrs	r3, r2
 8002512:	68ba      	ldr	r2, [r7, #8]
 8002514:	4313      	orrs	r3, r2
 8002516:	60bb      	str	r3, [r7, #8]
 8002518:	687b      	ldr	r3, [r7, #4]
 800251a:	689b      	ldr	r3, [r3, #8]
 800251c:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8002520:	d003      	beq.n	800252a <HAL_ADC_Init+0xa2>
 8002522:	687b      	ldr	r3, [r7, #4]
 8002524:	689b      	ldr	r3, [r3, #8]
 8002526:	2b01      	cmp	r3, #1
 8002528:	d102      	bne.n	8002530 <HAL_ADC_Init+0xa8>
 800252a:	f44f 7380 	mov.w	r3, #256	; 0x100
 800252e:	e000      	b.n	8002532 <HAL_ADC_Init+0xaa>
 8002530:	2300      	movs	r3, #0
 8002532:	693a      	ldr	r2, [r7, #16]
 8002534:	4313      	orrs	r3, r2
 8002536:	613b      	str	r3, [r7, #16]
 8002538:	687b      	ldr	r3, [r7, #4]
 800253a:	7d1b      	ldrb	r3, [r3, #20]
 800253c:	2b01      	cmp	r3, #1
 800253e:	d119      	bne.n	8002574 <HAL_ADC_Init+0xec>
 8002540:	687b      	ldr	r3, [r7, #4]
 8002542:	7b1b      	ldrb	r3, [r3, #12]
 8002544:	2b00      	cmp	r3, #0
 8002546:	d109      	bne.n	800255c <HAL_ADC_Init+0xd4>
 8002548:	687b      	ldr	r3, [r7, #4]
 800254a:	699b      	ldr	r3, [r3, #24]
 800254c:	3b01      	subs	r3, #1
 800254e:	035a      	lsls	r2, r3, #13
 8002550:	693b      	ldr	r3, [r7, #16]
 8002552:	4313      	orrs	r3, r2
 8002554:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8002558:	613b      	str	r3, [r7, #16]
 800255a:	e00b      	b.n	8002574 <HAL_ADC_Init+0xec>
 800255c:	687b      	ldr	r3, [r7, #4]
 800255e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002560:	f043 0220 	orr.w	r2, r3, #32
 8002564:	687b      	ldr	r3, [r7, #4]
 8002566:	629a      	str	r2, [r3, #40]	; 0x28
 8002568:	687b      	ldr	r3, [r7, #4]
 800256a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800256c:	f043 0201 	orr.w	r2, r3, #1
 8002570:	687b      	ldr	r3, [r7, #4]
 8002572:	62da      	str	r2, [r3, #44]	; 0x2c
 8002574:	687b      	ldr	r3, [r7, #4]
 8002576:	681b      	ldr	r3, [r3, #0]
 8002578:	685b      	ldr	r3, [r3, #4]
 800257a:	f423 4169 	bic.w	r1, r3, #59648	; 0xe900
 800257e:	687b      	ldr	r3, [r7, #4]
 8002580:	681b      	ldr	r3, [r3, #0]
 8002582:	693a      	ldr	r2, [r7, #16]
 8002584:	430a      	orrs	r2, r1
 8002586:	605a      	str	r2, [r3, #4]
 8002588:	687b      	ldr	r3, [r7, #4]
 800258a:	681b      	ldr	r3, [r3, #0]
 800258c:	689a      	ldr	r2, [r3, #8]
 800258e:	4b28      	ldr	r3, [pc, #160]	; (8002630 <HAL_ADC_Init+0x1a8>)
 8002590:	4013      	ands	r3, r2
 8002592:	687a      	ldr	r2, [r7, #4]
 8002594:	6812      	ldr	r2, [r2, #0]
 8002596:	68b9      	ldr	r1, [r7, #8]
 8002598:	430b      	orrs	r3, r1
 800259a:	6093      	str	r3, [r2, #8]
 800259c:	687b      	ldr	r3, [r7, #4]
 800259e:	689b      	ldr	r3, [r3, #8]
 80025a0:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80025a4:	d003      	beq.n	80025ae <HAL_ADC_Init+0x126>
 80025a6:	687b      	ldr	r3, [r7, #4]
 80025a8:	689b      	ldr	r3, [r3, #8]
 80025aa:	2b01      	cmp	r3, #1
 80025ac:	d104      	bne.n	80025b8 <HAL_ADC_Init+0x130>
 80025ae:	687b      	ldr	r3, [r7, #4]
 80025b0:	691b      	ldr	r3, [r3, #16]
 80025b2:	3b01      	subs	r3, #1
 80025b4:	051b      	lsls	r3, r3, #20
 80025b6:	60fb      	str	r3, [r7, #12]
 80025b8:	687b      	ldr	r3, [r7, #4]
 80025ba:	681b      	ldr	r3, [r3, #0]
 80025bc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80025be:	f423 0170 	bic.w	r1, r3, #15728640	; 0xf00000
 80025c2:	687b      	ldr	r3, [r7, #4]
 80025c4:	681b      	ldr	r3, [r3, #0]
 80025c6:	68fa      	ldr	r2, [r7, #12]
 80025c8:	430a      	orrs	r2, r1
 80025ca:	62da      	str	r2, [r3, #44]	; 0x2c
 80025cc:	687b      	ldr	r3, [r7, #4]
 80025ce:	681b      	ldr	r3, [r3, #0]
 80025d0:	689a      	ldr	r2, [r3, #8]
 80025d2:	4b18      	ldr	r3, [pc, #96]	; (8002634 <HAL_ADC_Init+0x1ac>)
 80025d4:	4013      	ands	r3, r2
 80025d6:	68ba      	ldr	r2, [r7, #8]
 80025d8:	429a      	cmp	r2, r3
 80025da:	d10b      	bne.n	80025f4 <HAL_ADC_Init+0x16c>
 80025dc:	687b      	ldr	r3, [r7, #4]
 80025de:	2200      	movs	r2, #0
 80025e0:	62da      	str	r2, [r3, #44]	; 0x2c
 80025e2:	687b      	ldr	r3, [r7, #4]
 80025e4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80025e6:	f023 0303 	bic.w	r3, r3, #3
 80025ea:	f043 0201 	orr.w	r2, r3, #1
 80025ee:	687b      	ldr	r3, [r7, #4]
 80025f0:	629a      	str	r2, [r3, #40]	; 0x28
 80025f2:	e018      	b.n	8002626 <HAL_ADC_Init+0x19e>
 80025f4:	687b      	ldr	r3, [r7, #4]
 80025f6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80025f8:	f023 0312 	bic.w	r3, r3, #18
 80025fc:	f043 0210 	orr.w	r2, r3, #16
 8002600:	687b      	ldr	r3, [r7, #4]
 8002602:	629a      	str	r2, [r3, #40]	; 0x28
 8002604:	687b      	ldr	r3, [r7, #4]
 8002606:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002608:	f043 0201 	orr.w	r2, r3, #1
 800260c:	687b      	ldr	r3, [r7, #4]
 800260e:	62da      	str	r2, [r3, #44]	; 0x2c
 8002610:	2301      	movs	r3, #1
 8002612:	75fb      	strb	r3, [r7, #23]
 8002614:	e007      	b.n	8002626 <HAL_ADC_Init+0x19e>
 8002616:	687b      	ldr	r3, [r7, #4]
 8002618:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800261a:	f043 0210 	orr.w	r2, r3, #16
 800261e:	687b      	ldr	r3, [r7, #4]
 8002620:	629a      	str	r2, [r3, #40]	; 0x28
 8002622:	2301      	movs	r3, #1
 8002624:	75fb      	strb	r3, [r7, #23]
 8002626:	7dfb      	ldrb	r3, [r7, #23]
 8002628:	4618      	mov	r0, r3
 800262a:	3718      	adds	r7, #24
 800262c:	46bd      	mov	sp, r7
 800262e:	bd80      	pop	{r7, pc}
 8002630:	ffe1f7fd 	.word	0xffe1f7fd
 8002634:	ff1f0efe 	.word	0xff1f0efe

08002638 <HAL_ADC_Start_DMA>:
 8002638:	b580      	push	{r7, lr}
 800263a:	b086      	sub	sp, #24
 800263c:	af00      	add	r7, sp, #0
 800263e:	60f8      	str	r0, [r7, #12]
 8002640:	60b9      	str	r1, [r7, #8]
 8002642:	607a      	str	r2, [r7, #4]
 8002644:	2300      	movs	r3, #0
 8002646:	75fb      	strb	r3, [r7, #23]
 8002648:	68fb      	ldr	r3, [r7, #12]
 800264a:	681b      	ldr	r3, [r3, #0]
 800264c:	4a64      	ldr	r2, [pc, #400]	; (80027e0 <HAL_ADC_Start_DMA+0x1a8>)
 800264e:	4293      	cmp	r3, r2
 8002650:	d004      	beq.n	800265c <HAL_ADC_Start_DMA+0x24>
 8002652:	68fb      	ldr	r3, [r7, #12]
 8002654:	681b      	ldr	r3, [r3, #0]
 8002656:	4a63      	ldr	r2, [pc, #396]	; (80027e4 <HAL_ADC_Start_DMA+0x1ac>)
 8002658:	4293      	cmp	r3, r2
 800265a:	d106      	bne.n	800266a <HAL_ADC_Start_DMA+0x32>
 800265c:	4b60      	ldr	r3, [pc, #384]	; (80027e0 <HAL_ADC_Start_DMA+0x1a8>)
 800265e:	685b      	ldr	r3, [r3, #4]
 8002660:	f403 2370 	and.w	r3, r3, #983040	; 0xf0000
 8002664:	2b00      	cmp	r3, #0
 8002666:	f040 80b3 	bne.w	80027d0 <HAL_ADC_Start_DMA+0x198>
 800266a:	68fb      	ldr	r3, [r7, #12]
 800266c:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
 8002670:	2b01      	cmp	r3, #1
 8002672:	d101      	bne.n	8002678 <HAL_ADC_Start_DMA+0x40>
 8002674:	2302      	movs	r3, #2
 8002676:	e0ae      	b.n	80027d6 <HAL_ADC_Start_DMA+0x19e>
 8002678:	68fb      	ldr	r3, [r7, #12]
 800267a:	2201      	movs	r2, #1
 800267c:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 8002680:	68f8      	ldr	r0, [r7, #12]
 8002682:	f000 f9c1 	bl	8002a08 <ADC_Enable>
 8002686:	4603      	mov	r3, r0
 8002688:	75fb      	strb	r3, [r7, #23]
 800268a:	7dfb      	ldrb	r3, [r7, #23]
 800268c:	2b00      	cmp	r3, #0
 800268e:	f040 809a 	bne.w	80027c6 <HAL_ADC_Start_DMA+0x18e>
 8002692:	68fb      	ldr	r3, [r7, #12]
 8002694:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002696:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
 800269a:	f023 0301 	bic.w	r3, r3, #1
 800269e:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 80026a2:	68fb      	ldr	r3, [r7, #12]
 80026a4:	629a      	str	r2, [r3, #40]	; 0x28
 80026a6:	68fb      	ldr	r3, [r7, #12]
 80026a8:	681b      	ldr	r3, [r3, #0]
 80026aa:	4a4e      	ldr	r2, [pc, #312]	; (80027e4 <HAL_ADC_Start_DMA+0x1ac>)
 80026ac:	4293      	cmp	r3, r2
 80026ae:	d105      	bne.n	80026bc <HAL_ADC_Start_DMA+0x84>
 80026b0:	4b4b      	ldr	r3, [pc, #300]	; (80027e0 <HAL_ADC_Start_DMA+0x1a8>)
 80026b2:	685b      	ldr	r3, [r3, #4]
 80026b4:	f403 2370 	and.w	r3, r3, #983040	; 0xf0000
 80026b8:	2b00      	cmp	r3, #0
 80026ba:	d115      	bne.n	80026e8 <HAL_ADC_Start_DMA+0xb0>
 80026bc:	68fb      	ldr	r3, [r7, #12]
 80026be:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80026c0:	f423 1280 	bic.w	r2, r3, #1048576	; 0x100000
 80026c4:	68fb      	ldr	r3, [r7, #12]
 80026c6:	629a      	str	r2, [r3, #40]	; 0x28
 80026c8:	68fb      	ldr	r3, [r7, #12]
 80026ca:	681b      	ldr	r3, [r3, #0]
 80026cc:	685b      	ldr	r3, [r3, #4]
 80026ce:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80026d2:	2b00      	cmp	r3, #0
 80026d4:	d026      	beq.n	8002724 <HAL_ADC_Start_DMA+0xec>
 80026d6:	68fb      	ldr	r3, [r7, #12]
 80026d8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80026da:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 80026de:	f443 5280 	orr.w	r2, r3, #4096	; 0x1000
 80026e2:	68fb      	ldr	r3, [r7, #12]
 80026e4:	629a      	str	r2, [r3, #40]	; 0x28
 80026e6:	e01d      	b.n	8002724 <HAL_ADC_Start_DMA+0xec>
 80026e8:	68fb      	ldr	r3, [r7, #12]
 80026ea:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80026ec:	f443 1280 	orr.w	r2, r3, #1048576	; 0x100000
 80026f0:	68fb      	ldr	r3, [r7, #12]
 80026f2:	629a      	str	r2, [r3, #40]	; 0x28
 80026f4:	68fb      	ldr	r3, [r7, #12]
 80026f6:	681b      	ldr	r3, [r3, #0]
 80026f8:	4a39      	ldr	r2, [pc, #228]	; (80027e0 <HAL_ADC_Start_DMA+0x1a8>)
 80026fa:	4293      	cmp	r3, r2
 80026fc:	d004      	beq.n	8002708 <HAL_ADC_Start_DMA+0xd0>
 80026fe:	68fb      	ldr	r3, [r7, #12]
 8002700:	681b      	ldr	r3, [r3, #0]
 8002702:	4a38      	ldr	r2, [pc, #224]	; (80027e4 <HAL_ADC_Start_DMA+0x1ac>)
 8002704:	4293      	cmp	r3, r2
 8002706:	d10d      	bne.n	8002724 <HAL_ADC_Start_DMA+0xec>
 8002708:	4b35      	ldr	r3, [pc, #212]	; (80027e0 <HAL_ADC_Start_DMA+0x1a8>)
 800270a:	685b      	ldr	r3, [r3, #4]
 800270c:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8002710:	2b00      	cmp	r3, #0
 8002712:	d007      	beq.n	8002724 <HAL_ADC_Start_DMA+0xec>
 8002714:	68fb      	ldr	r3, [r7, #12]
 8002716:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002718:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 800271c:	f443 5280 	orr.w	r2, r3, #4096	; 0x1000
 8002720:	68fb      	ldr	r3, [r7, #12]
 8002722:	629a      	str	r2, [r3, #40]	; 0x28
 8002724:	68fb      	ldr	r3, [r7, #12]
 8002726:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002728:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 800272c:	2b00      	cmp	r3, #0
 800272e:	d006      	beq.n	800273e <HAL_ADC_Start_DMA+0x106>
 8002730:	68fb      	ldr	r3, [r7, #12]
 8002732:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002734:	f023 0206 	bic.w	r2, r3, #6
 8002738:	68fb      	ldr	r3, [r7, #12]
 800273a:	62da      	str	r2, [r3, #44]	; 0x2c
 800273c:	e002      	b.n	8002744 <HAL_ADC_Start_DMA+0x10c>
 800273e:	68fb      	ldr	r3, [r7, #12]
 8002740:	2200      	movs	r2, #0
 8002742:	62da      	str	r2, [r3, #44]	; 0x2c
 8002744:	68fb      	ldr	r3, [r7, #12]
 8002746:	2200      	movs	r2, #0
 8002748:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 800274c:	68fb      	ldr	r3, [r7, #12]
 800274e:	6a1b      	ldr	r3, [r3, #32]
 8002750:	4a25      	ldr	r2, [pc, #148]	; (80027e8 <HAL_ADC_Start_DMA+0x1b0>)
 8002752:	629a      	str	r2, [r3, #40]	; 0x28
 8002754:	68fb      	ldr	r3, [r7, #12]
 8002756:	6a1b      	ldr	r3, [r3, #32]
 8002758:	4a24      	ldr	r2, [pc, #144]	; (80027ec <HAL_ADC_Start_DMA+0x1b4>)
 800275a:	62da      	str	r2, [r3, #44]	; 0x2c
 800275c:	68fb      	ldr	r3, [r7, #12]
 800275e:	6a1b      	ldr	r3, [r3, #32]
 8002760:	4a23      	ldr	r2, [pc, #140]	; (80027f0 <HAL_ADC_Start_DMA+0x1b8>)
 8002762:	631a      	str	r2, [r3, #48]	; 0x30
 8002764:	68fb      	ldr	r3, [r7, #12]
 8002766:	681b      	ldr	r3, [r3, #0]
 8002768:	f06f 0202 	mvn.w	r2, #2
 800276c:	601a      	str	r2, [r3, #0]
 800276e:	68fb      	ldr	r3, [r7, #12]
 8002770:	681b      	ldr	r3, [r3, #0]
 8002772:	689a      	ldr	r2, [r3, #8]
 8002774:	68fb      	ldr	r3, [r7, #12]
 8002776:	681b      	ldr	r3, [r3, #0]
 8002778:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800277c:	609a      	str	r2, [r3, #8]
 800277e:	68fb      	ldr	r3, [r7, #12]
 8002780:	6a18      	ldr	r0, [r3, #32]
 8002782:	68fb      	ldr	r3, [r7, #12]
 8002784:	681b      	ldr	r3, [r3, #0]
 8002786:	334c      	adds	r3, #76	; 0x4c
 8002788:	4619      	mov	r1, r3
 800278a:	68ba      	ldr	r2, [r7, #8]
 800278c:	687b      	ldr	r3, [r7, #4]
 800278e:	f001 faf9 	bl	8003d84 <HAL_DMA_Start_IT>
 8002792:	68fb      	ldr	r3, [r7, #12]
 8002794:	681b      	ldr	r3, [r3, #0]
 8002796:	689b      	ldr	r3, [r3, #8]
 8002798:	f403 2360 	and.w	r3, r3, #917504	; 0xe0000
 800279c:	f5b3 2f60 	cmp.w	r3, #917504	; 0xe0000
 80027a0:	d108      	bne.n	80027b4 <HAL_ADC_Start_DMA+0x17c>
 80027a2:	68fb      	ldr	r3, [r7, #12]
 80027a4:	681b      	ldr	r3, [r3, #0]
 80027a6:	689a      	ldr	r2, [r3, #8]
 80027a8:	68fb      	ldr	r3, [r7, #12]
 80027aa:	681b      	ldr	r3, [r3, #0]
 80027ac:	f442 02a0 	orr.w	r2, r2, #5242880	; 0x500000
 80027b0:	609a      	str	r2, [r3, #8]
 80027b2:	e00f      	b.n	80027d4 <HAL_ADC_Start_DMA+0x19c>
 80027b4:	68fb      	ldr	r3, [r7, #12]
 80027b6:	681b      	ldr	r3, [r3, #0]
 80027b8:	689a      	ldr	r2, [r3, #8]
 80027ba:	68fb      	ldr	r3, [r7, #12]
 80027bc:	681b      	ldr	r3, [r3, #0]
 80027be:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 80027c2:	609a      	str	r2, [r3, #8]
 80027c4:	e006      	b.n	80027d4 <HAL_ADC_Start_DMA+0x19c>
 80027c6:	68fb      	ldr	r3, [r7, #12]
 80027c8:	2200      	movs	r2, #0
 80027ca:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 80027ce:	e001      	b.n	80027d4 <HAL_ADC_Start_DMA+0x19c>
 80027d0:	2301      	movs	r3, #1
 80027d2:	75fb      	strb	r3, [r7, #23]
 80027d4:	7dfb      	ldrb	r3, [r7, #23]
 80027d6:	4618      	mov	r0, r3
 80027d8:	3718      	adds	r7, #24
 80027da:	46bd      	mov	sp, r7
 80027dc:	bd80      	pop	{r7, pc}
 80027de:	bf00      	nop
 80027e0:	40012400 	.word	0x40012400
 80027e4:	40012800 	.word	0x40012800
 80027e8:	08002b3f 	.word	0x08002b3f
 80027ec:	08002bbb 	.word	0x08002bbb
 80027f0:	08002bd7 	.word	0x08002bd7

080027f4 <HAL_ADC_ConvCpltCallback>:
 80027f4:	b480      	push	{r7}
 80027f6:	b083      	sub	sp, #12
 80027f8:	af00      	add	r7, sp, #0
 80027fa:	6078      	str	r0, [r7, #4]
 80027fc:	bf00      	nop
 80027fe:	370c      	adds	r7, #12
 8002800:	46bd      	mov	sp, r7
 8002802:	bc80      	pop	{r7}
 8002804:	4770      	bx	lr

08002806 <HAL_ADC_ErrorCallback>:
 8002806:	b480      	push	{r7}
 8002808:	b083      	sub	sp, #12
 800280a:	af00      	add	r7, sp, #0
 800280c:	6078      	str	r0, [r7, #4]
 800280e:	bf00      	nop
 8002810:	370c      	adds	r7, #12
 8002812:	46bd      	mov	sp, r7
 8002814:	bc80      	pop	{r7}
 8002816:	4770      	bx	lr

08002818 <HAL_ADC_ConfigChannel>:
 8002818:	b480      	push	{r7}
 800281a:	b085      	sub	sp, #20
 800281c:	af00      	add	r7, sp, #0
 800281e:	6078      	str	r0, [r7, #4]
 8002820:	6039      	str	r1, [r7, #0]
 8002822:	2300      	movs	r3, #0
 8002824:	73fb      	strb	r3, [r7, #15]
 8002826:	2300      	movs	r3, #0
 8002828:	60bb      	str	r3, [r7, #8]
 800282a:	687b      	ldr	r3, [r7, #4]
 800282c:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
 8002830:	2b01      	cmp	r3, #1
 8002832:	d101      	bne.n	8002838 <HAL_ADC_ConfigChannel+0x20>
 8002834:	2302      	movs	r3, #2
 8002836:	e0dc      	b.n	80029f2 <HAL_ADC_ConfigChannel+0x1da>
 8002838:	687b      	ldr	r3, [r7, #4]
 800283a:	2201      	movs	r2, #1
 800283c:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 8002840:	683b      	ldr	r3, [r7, #0]
 8002842:	685b      	ldr	r3, [r3, #4]
 8002844:	2b06      	cmp	r3, #6
 8002846:	d81c      	bhi.n	8002882 <HAL_ADC_ConfigChannel+0x6a>
 8002848:	687b      	ldr	r3, [r7, #4]
 800284a:	681b      	ldr	r3, [r3, #0]
 800284c:	6b59      	ldr	r1, [r3, #52]	; 0x34
 800284e:	683b      	ldr	r3, [r7, #0]
 8002850:	685a      	ldr	r2, [r3, #4]
 8002852:	4613      	mov	r3, r2
 8002854:	009b      	lsls	r3, r3, #2
 8002856:	4413      	add	r3, r2
 8002858:	3b05      	subs	r3, #5
 800285a:	221f      	movs	r2, #31
 800285c:	fa02 f303 	lsl.w	r3, r2, r3
 8002860:	43db      	mvns	r3, r3
 8002862:	4019      	ands	r1, r3
 8002864:	683b      	ldr	r3, [r7, #0]
 8002866:	6818      	ldr	r0, [r3, #0]
 8002868:	683b      	ldr	r3, [r7, #0]
 800286a:	685a      	ldr	r2, [r3, #4]
 800286c:	4613      	mov	r3, r2
 800286e:	009b      	lsls	r3, r3, #2
 8002870:	4413      	add	r3, r2
 8002872:	3b05      	subs	r3, #5
 8002874:	fa00 f203 	lsl.w	r2, r0, r3
 8002878:	687b      	ldr	r3, [r7, #4]
 800287a:	681b      	ldr	r3, [r3, #0]
 800287c:	430a      	orrs	r2, r1
 800287e:	635a      	str	r2, [r3, #52]	; 0x34
 8002880:	e03c      	b.n	80028fc <HAL_ADC_ConfigChannel+0xe4>
 8002882:	683b      	ldr	r3, [r7, #0]
 8002884:	685b      	ldr	r3, [r3, #4]
 8002886:	2b0c      	cmp	r3, #12
 8002888:	d81c      	bhi.n	80028c4 <HAL_ADC_ConfigChannel+0xac>
 800288a:	687b      	ldr	r3, [r7, #4]
 800288c:	681b      	ldr	r3, [r3, #0]
 800288e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8002890:	683b      	ldr	r3, [r7, #0]
 8002892:	685a      	ldr	r2, [r3, #4]
 8002894:	4613      	mov	r3, r2
 8002896:	009b      	lsls	r3, r3, #2
 8002898:	4413      	add	r3, r2
 800289a:	3b23      	subs	r3, #35	; 0x23
 800289c:	221f      	movs	r2, #31
 800289e:	fa02 f303 	lsl.w	r3, r2, r3
 80028a2:	43db      	mvns	r3, r3
 80028a4:	4019      	ands	r1, r3
 80028a6:	683b      	ldr	r3, [r7, #0]
 80028a8:	6818      	ldr	r0, [r3, #0]
 80028aa:	683b      	ldr	r3, [r7, #0]
 80028ac:	685a      	ldr	r2, [r3, #4]
 80028ae:	4613      	mov	r3, r2
 80028b0:	009b      	lsls	r3, r3, #2
 80028b2:	4413      	add	r3, r2
 80028b4:	3b23      	subs	r3, #35	; 0x23
 80028b6:	fa00 f203 	lsl.w	r2, r0, r3
 80028ba:	687b      	ldr	r3, [r7, #4]
 80028bc:	681b      	ldr	r3, [r3, #0]
 80028be:	430a      	orrs	r2, r1
 80028c0:	631a      	str	r2, [r3, #48]	; 0x30
 80028c2:	e01b      	b.n	80028fc <HAL_ADC_ConfigChannel+0xe4>
 80028c4:	687b      	ldr	r3, [r7, #4]
 80028c6:	681b      	ldr	r3, [r3, #0]
 80028c8:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 80028ca:	683b      	ldr	r3, [r7, #0]
 80028cc:	685a      	ldr	r2, [r3, #4]
 80028ce:	4613      	mov	r3, r2
 80028d0:	009b      	lsls	r3, r3, #2
 80028d2:	4413      	add	r3, r2
 80028d4:	3b41      	subs	r3, #65	; 0x41
 80028d6:	221f      	movs	r2, #31
 80028d8:	fa02 f303 	lsl.w	r3, r2, r3
 80028dc:	43db      	mvns	r3, r3
 80028de:	4019      	ands	r1, r3
 80028e0:	683b      	ldr	r3, [r7, #0]
 80028e2:	6818      	ldr	r0, [r3, #0]
 80028e4:	683b      	ldr	r3, [r7, #0]
 80028e6:	685a      	ldr	r2, [r3, #4]
 80028e8:	4613      	mov	r3, r2
 80028ea:	009b      	lsls	r3, r3, #2
 80028ec:	4413      	add	r3, r2
 80028ee:	3b41      	subs	r3, #65	; 0x41
 80028f0:	fa00 f203 	lsl.w	r2, r0, r3
 80028f4:	687b      	ldr	r3, [r7, #4]
 80028f6:	681b      	ldr	r3, [r3, #0]
 80028f8:	430a      	orrs	r2, r1
 80028fa:	62da      	str	r2, [r3, #44]	; 0x2c
 80028fc:	683b      	ldr	r3, [r7, #0]
 80028fe:	681b      	ldr	r3, [r3, #0]
 8002900:	2b09      	cmp	r3, #9
 8002902:	d91c      	bls.n	800293e <HAL_ADC_ConfigChannel+0x126>
 8002904:	687b      	ldr	r3, [r7, #4]
 8002906:	681b      	ldr	r3, [r3, #0]
 8002908:	68d9      	ldr	r1, [r3, #12]
 800290a:	683b      	ldr	r3, [r7, #0]
 800290c:	681a      	ldr	r2, [r3, #0]
 800290e:	4613      	mov	r3, r2
 8002910:	005b      	lsls	r3, r3, #1
 8002912:	4413      	add	r3, r2
 8002914:	3b1e      	subs	r3, #30
 8002916:	2207      	movs	r2, #7
 8002918:	fa02 f303 	lsl.w	r3, r2, r3
 800291c:	43db      	mvns	r3, r3
 800291e:	4019      	ands	r1, r3
 8002920:	683b      	ldr	r3, [r7, #0]
 8002922:	6898      	ldr	r0, [r3, #8]
 8002924:	683b      	ldr	r3, [r7, #0]
 8002926:	681a      	ldr	r2, [r3, #0]
 8002928:	4613      	mov	r3, r2
 800292a:	005b      	lsls	r3, r3, #1
 800292c:	4413      	add	r3, r2
 800292e:	3b1e      	subs	r3, #30
 8002930:	fa00 f203 	lsl.w	r2, r0, r3
 8002934:	687b      	ldr	r3, [r7, #4]
 8002936:	681b      	ldr	r3, [r3, #0]
 8002938:	430a      	orrs	r2, r1
 800293a:	60da      	str	r2, [r3, #12]
 800293c:	e019      	b.n	8002972 <HAL_ADC_ConfigChannel+0x15a>
 800293e:	687b      	ldr	r3, [r7, #4]
 8002940:	681b      	ldr	r3, [r3, #0]
 8002942:	6919      	ldr	r1, [r3, #16]
 8002944:	683b      	ldr	r3, [r7, #0]
 8002946:	681a      	ldr	r2, [r3, #0]
 8002948:	4613      	mov	r3, r2
 800294a:	005b      	lsls	r3, r3, #1
 800294c:	4413      	add	r3, r2
 800294e:	2207      	movs	r2, #7
 8002950:	fa02 f303 	lsl.w	r3, r2, r3
 8002954:	43db      	mvns	r3, r3
 8002956:	4019      	ands	r1, r3
 8002958:	683b      	ldr	r3, [r7, #0]
 800295a:	6898      	ldr	r0, [r3, #8]
 800295c:	683b      	ldr	r3, [r7, #0]
 800295e:	681a      	ldr	r2, [r3, #0]
 8002960:	4613      	mov	r3, r2
 8002962:	005b      	lsls	r3, r3, #1
 8002964:	4413      	add	r3, r2
 8002966:	fa00 f203 	lsl.w	r2, r0, r3
 800296a:	687b      	ldr	r3, [r7, #4]
 800296c:	681b      	ldr	r3, [r3, #0]
 800296e:	430a      	orrs	r2, r1
 8002970:	611a      	str	r2, [r3, #16]
 8002972:	683b      	ldr	r3, [r7, #0]
 8002974:	681b      	ldr	r3, [r3, #0]
 8002976:	2b10      	cmp	r3, #16
 8002978:	d003      	beq.n	8002982 <HAL_ADC_ConfigChannel+0x16a>
 800297a:	683b      	ldr	r3, [r7, #0]
 800297c:	681b      	ldr	r3, [r3, #0]
 800297e:	2b11      	cmp	r3, #17
 8002980:	d132      	bne.n	80029e8 <HAL_ADC_ConfigChannel+0x1d0>
 8002982:	687b      	ldr	r3, [r7, #4]
 8002984:	681b      	ldr	r3, [r3, #0]
 8002986:	4a1d      	ldr	r2, [pc, #116]	; (80029fc <HAL_ADC_ConfigChannel+0x1e4>)
 8002988:	4293      	cmp	r3, r2
 800298a:	d125      	bne.n	80029d8 <HAL_ADC_ConfigChannel+0x1c0>
 800298c:	687b      	ldr	r3, [r7, #4]
 800298e:	681b      	ldr	r3, [r3, #0]
 8002990:	689b      	ldr	r3, [r3, #8]
 8002992:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8002996:	2b00      	cmp	r3, #0
 8002998:	d126      	bne.n	80029e8 <HAL_ADC_ConfigChannel+0x1d0>
 800299a:	687b      	ldr	r3, [r7, #4]
 800299c:	681b      	ldr	r3, [r3, #0]
 800299e:	689a      	ldr	r2, [r3, #8]
 80029a0:	687b      	ldr	r3, [r7, #4]
 80029a2:	681b      	ldr	r3, [r3, #0]
 80029a4:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 80029a8:	609a      	str	r2, [r3, #8]
 80029aa:	683b      	ldr	r3, [r7, #0]
 80029ac:	681b      	ldr	r3, [r3, #0]
 80029ae:	2b10      	cmp	r3, #16
 80029b0:	d11a      	bne.n	80029e8 <HAL_ADC_ConfigChannel+0x1d0>
 80029b2:	4b13      	ldr	r3, [pc, #76]	; (8002a00 <HAL_ADC_ConfigChannel+0x1e8>)
 80029b4:	681b      	ldr	r3, [r3, #0]
 80029b6:	4a13      	ldr	r2, [pc, #76]	; (8002a04 <HAL_ADC_ConfigChannel+0x1ec>)
 80029b8:	fba2 2303 	umull	r2, r3, r2, r3
 80029bc:	0c9a      	lsrs	r2, r3, #18
 80029be:	4613      	mov	r3, r2
 80029c0:	009b      	lsls	r3, r3, #2
 80029c2:	4413      	add	r3, r2
 80029c4:	005b      	lsls	r3, r3, #1
 80029c6:	60bb      	str	r3, [r7, #8]
 80029c8:	e002      	b.n	80029d0 <HAL_ADC_ConfigChannel+0x1b8>
 80029ca:	68bb      	ldr	r3, [r7, #8]
 80029cc:	3b01      	subs	r3, #1
 80029ce:	60bb      	str	r3, [r7, #8]
 80029d0:	68bb      	ldr	r3, [r7, #8]
 80029d2:	2b00      	cmp	r3, #0
 80029d4:	d1f9      	bne.n	80029ca <HAL_ADC_ConfigChannel+0x1b2>
 80029d6:	e007      	b.n	80029e8 <HAL_ADC_ConfigChannel+0x1d0>
 80029d8:	687b      	ldr	r3, [r7, #4]
 80029da:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80029dc:	f043 0220 	orr.w	r2, r3, #32
 80029e0:	687b      	ldr	r3, [r7, #4]
 80029e2:	629a      	str	r2, [r3, #40]	; 0x28
 80029e4:	2301      	movs	r3, #1
 80029e6:	73fb      	strb	r3, [r7, #15]
 80029e8:	687b      	ldr	r3, [r7, #4]
 80029ea:	2200      	movs	r2, #0
 80029ec:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 80029f0:	7bfb      	ldrb	r3, [r7, #15]
 80029f2:	4618      	mov	r0, r3
 80029f4:	3714      	adds	r7, #20
 80029f6:	46bd      	mov	sp, r7
 80029f8:	bc80      	pop	{r7}
 80029fa:	4770      	bx	lr
 80029fc:	40012400 	.word	0x40012400
 8002a00:	2000000c 	.word	0x2000000c
 8002a04:	431bde83 	.word	0x431bde83

08002a08 <ADC_Enable>:
 8002a08:	b580      	push	{r7, lr}
 8002a0a:	b084      	sub	sp, #16
 8002a0c:	af00      	add	r7, sp, #0
 8002a0e:	6078      	str	r0, [r7, #4]
 8002a10:	2300      	movs	r3, #0
 8002a12:	60fb      	str	r3, [r7, #12]
 8002a14:	2300      	movs	r3, #0
 8002a16:	60bb      	str	r3, [r7, #8]
 8002a18:	687b      	ldr	r3, [r7, #4]
 8002a1a:	681b      	ldr	r3, [r3, #0]
 8002a1c:	689b      	ldr	r3, [r3, #8]
 8002a1e:	f003 0301 	and.w	r3, r3, #1
 8002a22:	2b01      	cmp	r3, #1
 8002a24:	d040      	beq.n	8002aa8 <ADC_Enable+0xa0>
 8002a26:	687b      	ldr	r3, [r7, #4]
 8002a28:	681b      	ldr	r3, [r3, #0]
 8002a2a:	689a      	ldr	r2, [r3, #8]
 8002a2c:	687b      	ldr	r3, [r7, #4]
 8002a2e:	681b      	ldr	r3, [r3, #0]
 8002a30:	f042 0201 	orr.w	r2, r2, #1
 8002a34:	609a      	str	r2, [r3, #8]
 8002a36:	4b1f      	ldr	r3, [pc, #124]	; (8002ab4 <ADC_Enable+0xac>)
 8002a38:	681b      	ldr	r3, [r3, #0]
 8002a3a:	4a1f      	ldr	r2, [pc, #124]	; (8002ab8 <ADC_Enable+0xb0>)
 8002a3c:	fba2 2303 	umull	r2, r3, r2, r3
 8002a40:	0c9b      	lsrs	r3, r3, #18
 8002a42:	60bb      	str	r3, [r7, #8]
 8002a44:	e002      	b.n	8002a4c <ADC_Enable+0x44>
 8002a46:	68bb      	ldr	r3, [r7, #8]
 8002a48:	3b01      	subs	r3, #1
 8002a4a:	60bb      	str	r3, [r7, #8]
 8002a4c:	68bb      	ldr	r3, [r7, #8]
 8002a4e:	2b00      	cmp	r3, #0
 8002a50:	d1f9      	bne.n	8002a46 <ADC_Enable+0x3e>
 8002a52:	f7ff fceb 	bl	800242c <HAL_GetTick>
 8002a56:	60f8      	str	r0, [r7, #12]
 8002a58:	e01f      	b.n	8002a9a <ADC_Enable+0x92>
 8002a5a:	f7ff fce7 	bl	800242c <HAL_GetTick>
 8002a5e:	4602      	mov	r2, r0
 8002a60:	68fb      	ldr	r3, [r7, #12]
 8002a62:	1ad3      	subs	r3, r2, r3
 8002a64:	2b02      	cmp	r3, #2
 8002a66:	d918      	bls.n	8002a9a <ADC_Enable+0x92>
 8002a68:	687b      	ldr	r3, [r7, #4]
 8002a6a:	681b      	ldr	r3, [r3, #0]
 8002a6c:	689b      	ldr	r3, [r3, #8]
 8002a6e:	f003 0301 	and.w	r3, r3, #1
 8002a72:	2b01      	cmp	r3, #1
 8002a74:	d011      	beq.n	8002a9a <ADC_Enable+0x92>
 8002a76:	687b      	ldr	r3, [r7, #4]
 8002a78:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002a7a:	f043 0210 	orr.w	r2, r3, #16
 8002a7e:	687b      	ldr	r3, [r7, #4]
 8002a80:	629a      	str	r2, [r3, #40]	; 0x28
 8002a82:	687b      	ldr	r3, [r7, #4]
 8002a84:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002a86:	f043 0201 	orr.w	r2, r3, #1
 8002a8a:	687b      	ldr	r3, [r7, #4]
 8002a8c:	62da      	str	r2, [r3, #44]	; 0x2c
 8002a8e:	687b      	ldr	r3, [r7, #4]
 8002a90:	2200      	movs	r2, #0
 8002a92:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 8002a96:	2301      	movs	r3, #1
 8002a98:	e007      	b.n	8002aaa <ADC_Enable+0xa2>
 8002a9a:	687b      	ldr	r3, [r7, #4]
 8002a9c:	681b      	ldr	r3, [r3, #0]
 8002a9e:	689b      	ldr	r3, [r3, #8]
 8002aa0:	f003 0301 	and.w	r3, r3, #1
 8002aa4:	2b01      	cmp	r3, #1
 8002aa6:	d1d8      	bne.n	8002a5a <ADC_Enable+0x52>
 8002aa8:	2300      	movs	r3, #0
 8002aaa:	4618      	mov	r0, r3
 8002aac:	3710      	adds	r7, #16
 8002aae:	46bd      	mov	sp, r7
 8002ab0:	bd80      	pop	{r7, pc}
 8002ab2:	bf00      	nop
 8002ab4:	2000000c 	.word	0x2000000c
 8002ab8:	431bde83 	.word	0x431bde83

08002abc <ADC_ConversionStop_Disable>:
 8002abc:	b580      	push	{r7, lr}
 8002abe:	b084      	sub	sp, #16
 8002ac0:	af00      	add	r7, sp, #0
 8002ac2:	6078      	str	r0, [r7, #4]
 8002ac4:	2300      	movs	r3, #0
 8002ac6:	60fb      	str	r3, [r7, #12]
 8002ac8:	687b      	ldr	r3, [r7, #4]
 8002aca:	681b      	ldr	r3, [r3, #0]
 8002acc:	689b      	ldr	r3, [r3, #8]
 8002ace:	f003 0301 	and.w	r3, r3, #1
 8002ad2:	2b01      	cmp	r3, #1
 8002ad4:	d12e      	bne.n	8002b34 <ADC_ConversionStop_Disable+0x78>
 8002ad6:	687b      	ldr	r3, [r7, #4]
 8002ad8:	681b      	ldr	r3, [r3, #0]
 8002ada:	689a      	ldr	r2, [r3, #8]
 8002adc:	687b      	ldr	r3, [r7, #4]
 8002ade:	681b      	ldr	r3, [r3, #0]
 8002ae0:	f022 0201 	bic.w	r2, r2, #1
 8002ae4:	609a      	str	r2, [r3, #8]
 8002ae6:	f7ff fca1 	bl	800242c <HAL_GetTick>
 8002aea:	60f8      	str	r0, [r7, #12]
 8002aec:	e01b      	b.n	8002b26 <ADC_ConversionStop_Disable+0x6a>
 8002aee:	f7ff fc9d 	bl	800242c <HAL_GetTick>
 8002af2:	4602      	mov	r2, r0
 8002af4:	68fb      	ldr	r3, [r7, #12]
 8002af6:	1ad3      	subs	r3, r2, r3
 8002af8:	2b02      	cmp	r3, #2
 8002afa:	d914      	bls.n	8002b26 <ADC_ConversionStop_Disable+0x6a>
 8002afc:	687b      	ldr	r3, [r7, #4]
 8002afe:	681b      	ldr	r3, [r3, #0]
 8002b00:	689b      	ldr	r3, [r3, #8]
 8002b02:	f003 0301 	and.w	r3, r3, #1
 8002b06:	2b01      	cmp	r3, #1
 8002b08:	d10d      	bne.n	8002b26 <ADC_ConversionStop_Disable+0x6a>
 8002b0a:	687b      	ldr	r3, [r7, #4]
 8002b0c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002b0e:	f043 0210 	orr.w	r2, r3, #16
 8002b12:	687b      	ldr	r3, [r7, #4]
 8002b14:	629a      	str	r2, [r3, #40]	; 0x28
 8002b16:	687b      	ldr	r3, [r7, #4]
 8002b18:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002b1a:	f043 0201 	orr.w	r2, r3, #1
 8002b1e:	687b      	ldr	r3, [r7, #4]
 8002b20:	62da      	str	r2, [r3, #44]	; 0x2c
 8002b22:	2301      	movs	r3, #1
 8002b24:	e007      	b.n	8002b36 <ADC_ConversionStop_Disable+0x7a>
 8002b26:	687b      	ldr	r3, [r7, #4]
 8002b28:	681b      	ldr	r3, [r3, #0]
 8002b2a:	689b      	ldr	r3, [r3, #8]
 8002b2c:	f003 0301 	and.w	r3, r3, #1
 8002b30:	2b01      	cmp	r3, #1
 8002b32:	d0dc      	beq.n	8002aee <ADC_ConversionStop_Disable+0x32>
 8002b34:	2300      	movs	r3, #0
 8002b36:	4618      	mov	r0, r3
 8002b38:	3710      	adds	r7, #16
 8002b3a:	46bd      	mov	sp, r7
 8002b3c:	bd80      	pop	{r7, pc}

08002b3e <ADC_DMAConvCplt>:
 8002b3e:	b580      	push	{r7, lr}
 8002b40:	b084      	sub	sp, #16
 8002b42:	af00      	add	r7, sp, #0
 8002b44:	6078      	str	r0, [r7, #4]
 8002b46:	687b      	ldr	r3, [r7, #4]
 8002b48:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002b4a:	60fb      	str	r3, [r7, #12]
 8002b4c:	68fb      	ldr	r3, [r7, #12]
 8002b4e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002b50:	f003 0350 	and.w	r3, r3, #80	; 0x50
 8002b54:	2b00      	cmp	r3, #0
 8002b56:	d127      	bne.n	8002ba8 <ADC_DMAConvCplt+0x6a>
 8002b58:	68fb      	ldr	r3, [r7, #12]
 8002b5a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002b5c:	f443 7200 	orr.w	r2, r3, #512	; 0x200
 8002b60:	68fb      	ldr	r3, [r7, #12]
 8002b62:	629a      	str	r2, [r3, #40]	; 0x28
 8002b64:	68fb      	ldr	r3, [r7, #12]
 8002b66:	681b      	ldr	r3, [r3, #0]
 8002b68:	689b      	ldr	r3, [r3, #8]
 8002b6a:	f403 2360 	and.w	r3, r3, #917504	; 0xe0000
 8002b6e:	f5b3 2f60 	cmp.w	r3, #917504	; 0xe0000
 8002b72:	d115      	bne.n	8002ba0 <ADC_DMAConvCplt+0x62>
 8002b74:	68fb      	ldr	r3, [r7, #12]
 8002b76:	7b1b      	ldrb	r3, [r3, #12]
 8002b78:	2b00      	cmp	r3, #0
 8002b7a:	d111      	bne.n	8002ba0 <ADC_DMAConvCplt+0x62>
 8002b7c:	68fb      	ldr	r3, [r7, #12]
 8002b7e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002b80:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8002b84:	68fb      	ldr	r3, [r7, #12]
 8002b86:	629a      	str	r2, [r3, #40]	; 0x28
 8002b88:	68fb      	ldr	r3, [r7, #12]
 8002b8a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002b8c:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8002b90:	2b00      	cmp	r3, #0
 8002b92:	d105      	bne.n	8002ba0 <ADC_DMAConvCplt+0x62>
 8002b94:	68fb      	ldr	r3, [r7, #12]
 8002b96:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002b98:	f043 0201 	orr.w	r2, r3, #1
 8002b9c:	68fb      	ldr	r3, [r7, #12]
 8002b9e:	629a      	str	r2, [r3, #40]	; 0x28
 8002ba0:	68f8      	ldr	r0, [r7, #12]
 8002ba2:	f7ff fe27 	bl	80027f4 <HAL_ADC_ConvCpltCallback>
 8002ba6:	e004      	b.n	8002bb2 <ADC_DMAConvCplt+0x74>
 8002ba8:	68fb      	ldr	r3, [r7, #12]
 8002baa:	6a1b      	ldr	r3, [r3, #32]
 8002bac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002bae:	6878      	ldr	r0, [r7, #4]
 8002bb0:	4798      	blx	r3
 8002bb2:	bf00      	nop
 8002bb4:	3710      	adds	r7, #16
 8002bb6:	46bd      	mov	sp, r7
 8002bb8:	bd80      	pop	{r7, pc}

08002bba <ADC_DMAHalfConvCplt>:
 8002bba:	b580      	push	{r7, lr}
 8002bbc:	b084      	sub	sp, #16
 8002bbe:	af00      	add	r7, sp, #0
 8002bc0:	6078      	str	r0, [r7, #4]
 8002bc2:	687b      	ldr	r3, [r7, #4]
 8002bc4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002bc6:	60fb      	str	r3, [r7, #12]
 8002bc8:	68f8      	ldr	r0, [r7, #12]
 8002bca:	f7fe fbdb 	bl	8001384 <HAL_ADC_ConvHalfCpltCallback>
 8002bce:	bf00      	nop
 8002bd0:	3710      	adds	r7, #16
 8002bd2:	46bd      	mov	sp, r7
 8002bd4:	bd80      	pop	{r7, pc}

08002bd6 <ADC_DMAError>:
 8002bd6:	b580      	push	{r7, lr}
 8002bd8:	b084      	sub	sp, #16
 8002bda:	af00      	add	r7, sp, #0
 8002bdc:	6078      	str	r0, [r7, #4]
 8002bde:	687b      	ldr	r3, [r7, #4]
 8002be0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002be2:	60fb      	str	r3, [r7, #12]
 8002be4:	68fb      	ldr	r3, [r7, #12]
 8002be6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002be8:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 8002bec:	68fb      	ldr	r3, [r7, #12]
 8002bee:	629a      	str	r2, [r3, #40]	; 0x28
 8002bf0:	68fb      	ldr	r3, [r7, #12]
 8002bf2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002bf4:	f043 0204 	orr.w	r2, r3, #4
 8002bf8:	68fb      	ldr	r3, [r7, #12]
 8002bfa:	62da      	str	r2, [r3, #44]	; 0x2c
 8002bfc:	68f8      	ldr	r0, [r7, #12]
 8002bfe:	f7ff fe02 	bl	8002806 <HAL_ADC_ErrorCallback>
 8002c02:	bf00      	nop
 8002c04:	3710      	adds	r7, #16
 8002c06:	46bd      	mov	sp, r7
 8002c08:	bd80      	pop	{r7, pc}
	...

08002c0c <HAL_ADCEx_Calibration_Start>:
 8002c0c:	b590      	push	{r4, r7, lr}
 8002c0e:	b087      	sub	sp, #28
 8002c10:	af00      	add	r7, sp, #0
 8002c12:	6078      	str	r0, [r7, #4]
 8002c14:	2300      	movs	r3, #0
 8002c16:	75fb      	strb	r3, [r7, #23]
 8002c18:	2300      	movs	r3, #0
 8002c1a:	60fb      	str	r3, [r7, #12]
 8002c1c:	687b      	ldr	r3, [r7, #4]
 8002c1e:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
 8002c22:	2b01      	cmp	r3, #1
 8002c24:	d101      	bne.n	8002c2a <HAL_ADCEx_Calibration_Start+0x1e>
 8002c26:	2302      	movs	r3, #2
 8002c28:	e097      	b.n	8002d5a <HAL_ADCEx_Calibration_Start+0x14e>
 8002c2a:	687b      	ldr	r3, [r7, #4]
 8002c2c:	2201      	movs	r2, #1
 8002c2e:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 8002c32:	6878      	ldr	r0, [r7, #4]
 8002c34:	f7ff ff42 	bl	8002abc <ADC_ConversionStop_Disable>
 8002c38:	4603      	mov	r3, r0
 8002c3a:	75fb      	strb	r3, [r7, #23]
 8002c3c:	6878      	ldr	r0, [r7, #4]
 8002c3e:	f7ff fee3 	bl	8002a08 <ADC_Enable>
 8002c42:	4603      	mov	r3, r0
 8002c44:	75fb      	strb	r3, [r7, #23]
 8002c46:	7dfb      	ldrb	r3, [r7, #23]
 8002c48:	2b00      	cmp	r3, #0
 8002c4a:	f040 8081 	bne.w	8002d50 <HAL_ADCEx_Calibration_Start+0x144>
 8002c4e:	687b      	ldr	r3, [r7, #4]
 8002c50:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002c52:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 8002c56:	f023 0302 	bic.w	r3, r3, #2
 8002c5a:	f043 0202 	orr.w	r2, r3, #2
 8002c5e:	687b      	ldr	r3, [r7, #4]
 8002c60:	629a      	str	r2, [r3, #40]	; 0x28
 8002c62:	4b40      	ldr	r3, [pc, #256]	; (8002d64 <HAL_ADCEx_Calibration_Start+0x158>)
 8002c64:	681c      	ldr	r4, [r3, #0]
 8002c66:	2002      	movs	r0, #2
 8002c68:	f002 f89a 	bl	8004da0 <HAL_RCCEx_GetPeriphCLKFreq>
 8002c6c:	4603      	mov	r3, r0
 8002c6e:	fbb4 f3f3 	udiv	r3, r4, r3
 8002c72:	005b      	lsls	r3, r3, #1
 8002c74:	60fb      	str	r3, [r7, #12]
 8002c76:	e002      	b.n	8002c7e <HAL_ADCEx_Calibration_Start+0x72>
 8002c78:	68fb      	ldr	r3, [r7, #12]
 8002c7a:	3b01      	subs	r3, #1
 8002c7c:	60fb      	str	r3, [r7, #12]
 8002c7e:	68fb      	ldr	r3, [r7, #12]
 8002c80:	2b00      	cmp	r3, #0
 8002c82:	d1f9      	bne.n	8002c78 <HAL_ADCEx_Calibration_Start+0x6c>
 8002c84:	687b      	ldr	r3, [r7, #4]
 8002c86:	681b      	ldr	r3, [r3, #0]
 8002c88:	689a      	ldr	r2, [r3, #8]
 8002c8a:	687b      	ldr	r3, [r7, #4]
 8002c8c:	681b      	ldr	r3, [r3, #0]
 8002c8e:	f042 0208 	orr.w	r2, r2, #8
 8002c92:	609a      	str	r2, [r3, #8]
 8002c94:	f7ff fbca 	bl	800242c <HAL_GetTick>
 8002c98:	6138      	str	r0, [r7, #16]
 8002c9a:	e01b      	b.n	8002cd4 <HAL_ADCEx_Calibration_Start+0xc8>
 8002c9c:	f7ff fbc6 	bl	800242c <HAL_GetTick>
 8002ca0:	4602      	mov	r2, r0
 8002ca2:	693b      	ldr	r3, [r7, #16]
 8002ca4:	1ad3      	subs	r3, r2, r3
 8002ca6:	2b0a      	cmp	r3, #10
 8002ca8:	d914      	bls.n	8002cd4 <HAL_ADCEx_Calibration_Start+0xc8>
 8002caa:	687b      	ldr	r3, [r7, #4]
 8002cac:	681b      	ldr	r3, [r3, #0]
 8002cae:	689b      	ldr	r3, [r3, #8]
 8002cb0:	f003 0308 	and.w	r3, r3, #8
 8002cb4:	2b00      	cmp	r3, #0
 8002cb6:	d00d      	beq.n	8002cd4 <HAL_ADCEx_Calibration_Start+0xc8>
 8002cb8:	687b      	ldr	r3, [r7, #4]
 8002cba:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002cbc:	f023 0312 	bic.w	r3, r3, #18
 8002cc0:	f043 0210 	orr.w	r2, r3, #16
 8002cc4:	687b      	ldr	r3, [r7, #4]
 8002cc6:	629a      	str	r2, [r3, #40]	; 0x28
 8002cc8:	687b      	ldr	r3, [r7, #4]
 8002cca:	2200      	movs	r2, #0
 8002ccc:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 8002cd0:	2301      	movs	r3, #1
 8002cd2:	e042      	b.n	8002d5a <HAL_ADCEx_Calibration_Start+0x14e>
 8002cd4:	687b      	ldr	r3, [r7, #4]
 8002cd6:	681b      	ldr	r3, [r3, #0]
 8002cd8:	689b      	ldr	r3, [r3, #8]
 8002cda:	f003 0308 	and.w	r3, r3, #8
 8002cde:	2b00      	cmp	r3, #0
 8002ce0:	d1dc      	bne.n	8002c9c <HAL_ADCEx_Calibration_Start+0x90>
 8002ce2:	687b      	ldr	r3, [r7, #4]
 8002ce4:	681b      	ldr	r3, [r3, #0]
 8002ce6:	689a      	ldr	r2, [r3, #8]
 8002ce8:	687b      	ldr	r3, [r7, #4]
 8002cea:	681b      	ldr	r3, [r3, #0]
 8002cec:	f042 0204 	orr.w	r2, r2, #4
 8002cf0:	609a      	str	r2, [r3, #8]
 8002cf2:	f7ff fb9b 	bl	800242c <HAL_GetTick>
 8002cf6:	6138      	str	r0, [r7, #16]
 8002cf8:	e01b      	b.n	8002d32 <HAL_ADCEx_Calibration_Start+0x126>
 8002cfa:	f7ff fb97 	bl	800242c <HAL_GetTick>
 8002cfe:	4602      	mov	r2, r0
 8002d00:	693b      	ldr	r3, [r7, #16]
 8002d02:	1ad3      	subs	r3, r2, r3
 8002d04:	2b0a      	cmp	r3, #10
 8002d06:	d914      	bls.n	8002d32 <HAL_ADCEx_Calibration_Start+0x126>
 8002d08:	687b      	ldr	r3, [r7, #4]
 8002d0a:	681b      	ldr	r3, [r3, #0]
 8002d0c:	689b      	ldr	r3, [r3, #8]
 8002d0e:	f003 0304 	and.w	r3, r3, #4
 8002d12:	2b00      	cmp	r3, #0
 8002d14:	d00d      	beq.n	8002d32 <HAL_ADCEx_Calibration_Start+0x126>
 8002d16:	687b      	ldr	r3, [r7, #4]
 8002d18:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002d1a:	f023 0312 	bic.w	r3, r3, #18
 8002d1e:	f043 0210 	orr.w	r2, r3, #16
 8002d22:	687b      	ldr	r3, [r7, #4]
 8002d24:	629a      	str	r2, [r3, #40]	; 0x28
 8002d26:	687b      	ldr	r3, [r7, #4]
 8002d28:	2200      	movs	r2, #0
 8002d2a:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 8002d2e:	2301      	movs	r3, #1
 8002d30:	e013      	b.n	8002d5a <HAL_ADCEx_Calibration_Start+0x14e>
 8002d32:	687b      	ldr	r3, [r7, #4]
 8002d34:	681b      	ldr	r3, [r3, #0]
 8002d36:	689b      	ldr	r3, [r3, #8]
 8002d38:	f003 0304 	and.w	r3, r3, #4
 8002d3c:	2b00      	cmp	r3, #0
 8002d3e:	d1dc      	bne.n	8002cfa <HAL_ADCEx_Calibration_Start+0xee>
 8002d40:	687b      	ldr	r3, [r7, #4]
 8002d42:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002d44:	f023 0303 	bic.w	r3, r3, #3
 8002d48:	f043 0201 	orr.w	r2, r3, #1
 8002d4c:	687b      	ldr	r3, [r7, #4]
 8002d4e:	629a      	str	r2, [r3, #40]	; 0x28
 8002d50:	687b      	ldr	r3, [r7, #4]
 8002d52:	2200      	movs	r2, #0
 8002d54:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 8002d58:	7dfb      	ldrb	r3, [r7, #23]
 8002d5a:	4618      	mov	r0, r3
 8002d5c:	371c      	adds	r7, #28
 8002d5e:	46bd      	mov	sp, r7
 8002d60:	bd90      	pop	{r4, r7, pc}
 8002d62:	bf00      	nop
 8002d64:	2000000c 	.word	0x2000000c

08002d68 <HAL_CAN_Init>:
 8002d68:	b580      	push	{r7, lr}
 8002d6a:	b084      	sub	sp, #16
 8002d6c:	af00      	add	r7, sp, #0
 8002d6e:	6078      	str	r0, [r7, #4]
 8002d70:	687b      	ldr	r3, [r7, #4]
 8002d72:	2b00      	cmp	r3, #0
 8002d74:	d101      	bne.n	8002d7a <HAL_CAN_Init+0x12>
 8002d76:	2301      	movs	r3, #1
 8002d78:	e0ed      	b.n	8002f56 <HAL_CAN_Init+0x1ee>
 8002d7a:	687b      	ldr	r3, [r7, #4]
 8002d7c:	f893 3020 	ldrb.w	r3, [r3, #32]
 8002d80:	b2db      	uxtb	r3, r3
 8002d82:	2b00      	cmp	r3, #0
 8002d84:	d102      	bne.n	8002d8c <HAL_CAN_Init+0x24>
 8002d86:	6878      	ldr	r0, [r7, #4]
 8002d88:	f7ff f8a2 	bl	8001ed0 <HAL_CAN_MspInit>
 8002d8c:	687b      	ldr	r3, [r7, #4]
 8002d8e:	681b      	ldr	r3, [r3, #0]
 8002d90:	681a      	ldr	r2, [r3, #0]
 8002d92:	687b      	ldr	r3, [r7, #4]
 8002d94:	681b      	ldr	r3, [r3, #0]
 8002d96:	f042 0201 	orr.w	r2, r2, #1
 8002d9a:	601a      	str	r2, [r3, #0]
 8002d9c:	f7ff fb46 	bl	800242c <HAL_GetTick>
 8002da0:	60f8      	str	r0, [r7, #12]
 8002da2:	e012      	b.n	8002dca <HAL_CAN_Init+0x62>
 8002da4:	f7ff fb42 	bl	800242c <HAL_GetTick>
 8002da8:	4602      	mov	r2, r0
 8002daa:	68fb      	ldr	r3, [r7, #12]
 8002dac:	1ad3      	subs	r3, r2, r3
 8002dae:	2b0a      	cmp	r3, #10
 8002db0:	d90b      	bls.n	8002dca <HAL_CAN_Init+0x62>
 8002db2:	687b      	ldr	r3, [r7, #4]
 8002db4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002db6:	f443 3200 	orr.w	r2, r3, #131072	; 0x20000
 8002dba:	687b      	ldr	r3, [r7, #4]
 8002dbc:	625a      	str	r2, [r3, #36]	; 0x24
 8002dbe:	687b      	ldr	r3, [r7, #4]
 8002dc0:	2205      	movs	r2, #5
 8002dc2:	f883 2020 	strb.w	r2, [r3, #32]
 8002dc6:	2301      	movs	r3, #1
 8002dc8:	e0c5      	b.n	8002f56 <HAL_CAN_Init+0x1ee>
 8002dca:	687b      	ldr	r3, [r7, #4]
 8002dcc:	681b      	ldr	r3, [r3, #0]
 8002dce:	685b      	ldr	r3, [r3, #4]
 8002dd0:	f003 0301 	and.w	r3, r3, #1
 8002dd4:	2b00      	cmp	r3, #0
 8002dd6:	d0e5      	beq.n	8002da4 <HAL_CAN_Init+0x3c>
 8002dd8:	687b      	ldr	r3, [r7, #4]
 8002dda:	681b      	ldr	r3, [r3, #0]
 8002ddc:	681a      	ldr	r2, [r3, #0]
 8002dde:	687b      	ldr	r3, [r7, #4]
 8002de0:	681b      	ldr	r3, [r3, #0]
 8002de2:	f022 0202 	bic.w	r2, r2, #2
 8002de6:	601a      	str	r2, [r3, #0]
 8002de8:	f7ff fb20 	bl	800242c <HAL_GetTick>
 8002dec:	60f8      	str	r0, [r7, #12]
 8002dee:	e012      	b.n	8002e16 <HAL_CAN_Init+0xae>
 8002df0:	f7ff fb1c 	bl	800242c <HAL_GetTick>
 8002df4:	4602      	mov	r2, r0
 8002df6:	68fb      	ldr	r3, [r7, #12]
 8002df8:	1ad3      	subs	r3, r2, r3
 8002dfa:	2b0a      	cmp	r3, #10
 8002dfc:	d90b      	bls.n	8002e16 <HAL_CAN_Init+0xae>
 8002dfe:	687b      	ldr	r3, [r7, #4]
 8002e00:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002e02:	f443 3200 	orr.w	r2, r3, #131072	; 0x20000
 8002e06:	687b      	ldr	r3, [r7, #4]
 8002e08:	625a      	str	r2, [r3, #36]	; 0x24
 8002e0a:	687b      	ldr	r3, [r7, #4]
 8002e0c:	2205      	movs	r2, #5
 8002e0e:	f883 2020 	strb.w	r2, [r3, #32]
 8002e12:	2301      	movs	r3, #1
 8002e14:	e09f      	b.n	8002f56 <HAL_CAN_Init+0x1ee>
 8002e16:	687b      	ldr	r3, [r7, #4]
 8002e18:	681b      	ldr	r3, [r3, #0]
 8002e1a:	685b      	ldr	r3, [r3, #4]
 8002e1c:	f003 0302 	and.w	r3, r3, #2
 8002e20:	2b00      	cmp	r3, #0
 8002e22:	d1e5      	bne.n	8002df0 <HAL_CAN_Init+0x88>
 8002e24:	687b      	ldr	r3, [r7, #4]
 8002e26:	7e1b      	ldrb	r3, [r3, #24]
 8002e28:	2b01      	cmp	r3, #1
 8002e2a:	d108      	bne.n	8002e3e <HAL_CAN_Init+0xd6>
 8002e2c:	687b      	ldr	r3, [r7, #4]
 8002e2e:	681b      	ldr	r3, [r3, #0]
 8002e30:	681a      	ldr	r2, [r3, #0]
 8002e32:	687b      	ldr	r3, [r7, #4]
 8002e34:	681b      	ldr	r3, [r3, #0]
 8002e36:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8002e3a:	601a      	str	r2, [r3, #0]
 8002e3c:	e007      	b.n	8002e4e <HAL_CAN_Init+0xe6>
 8002e3e:	687b      	ldr	r3, [r7, #4]
 8002e40:	681b      	ldr	r3, [r3, #0]
 8002e42:	681a      	ldr	r2, [r3, #0]
 8002e44:	687b      	ldr	r3, [r7, #4]
 8002e46:	681b      	ldr	r3, [r3, #0]
 8002e48:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8002e4c:	601a      	str	r2, [r3, #0]
 8002e4e:	687b      	ldr	r3, [r7, #4]
 8002e50:	7e5b      	ldrb	r3, [r3, #25]
 8002e52:	2b01      	cmp	r3, #1
 8002e54:	d108      	bne.n	8002e68 <HAL_CAN_Init+0x100>
 8002e56:	687b      	ldr	r3, [r7, #4]
 8002e58:	681b      	ldr	r3, [r3, #0]
 8002e5a:	681a      	ldr	r2, [r3, #0]
 8002e5c:	687b      	ldr	r3, [r7, #4]
 8002e5e:	681b      	ldr	r3, [r3, #0]
 8002e60:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8002e64:	601a      	str	r2, [r3, #0]
 8002e66:	e007      	b.n	8002e78 <HAL_CAN_Init+0x110>
 8002e68:	687b      	ldr	r3, [r7, #4]
 8002e6a:	681b      	ldr	r3, [r3, #0]
 8002e6c:	681a      	ldr	r2, [r3, #0]
 8002e6e:	687b      	ldr	r3, [r7, #4]
 8002e70:	681b      	ldr	r3, [r3, #0]
 8002e72:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8002e76:	601a      	str	r2, [r3, #0]
 8002e78:	687b      	ldr	r3, [r7, #4]
 8002e7a:	7e9b      	ldrb	r3, [r3, #26]
 8002e7c:	2b01      	cmp	r3, #1
 8002e7e:	d108      	bne.n	8002e92 <HAL_CAN_Init+0x12a>
 8002e80:	687b      	ldr	r3, [r7, #4]
 8002e82:	681b      	ldr	r3, [r3, #0]
 8002e84:	681a      	ldr	r2, [r3, #0]
 8002e86:	687b      	ldr	r3, [r7, #4]
 8002e88:	681b      	ldr	r3, [r3, #0]
 8002e8a:	f042 0220 	orr.w	r2, r2, #32
 8002e8e:	601a      	str	r2, [r3, #0]
 8002e90:	e007      	b.n	8002ea2 <HAL_CAN_Init+0x13a>
 8002e92:	687b      	ldr	r3, [r7, #4]
 8002e94:	681b      	ldr	r3, [r3, #0]
 8002e96:	681a      	ldr	r2, [r3, #0]
 8002e98:	687b      	ldr	r3, [r7, #4]
 8002e9a:	681b      	ldr	r3, [r3, #0]
 8002e9c:	f022 0220 	bic.w	r2, r2, #32
 8002ea0:	601a      	str	r2, [r3, #0]
 8002ea2:	687b      	ldr	r3, [r7, #4]
 8002ea4:	7edb      	ldrb	r3, [r3, #27]
 8002ea6:	2b01      	cmp	r3, #1
 8002ea8:	d108      	bne.n	8002ebc <HAL_CAN_Init+0x154>
 8002eaa:	687b      	ldr	r3, [r7, #4]
 8002eac:	681b      	ldr	r3, [r3, #0]
 8002eae:	681a      	ldr	r2, [r3, #0]
 8002eb0:	687b      	ldr	r3, [r7, #4]
 8002eb2:	681b      	ldr	r3, [r3, #0]
 8002eb4:	f022 0210 	bic.w	r2, r2, #16
 8002eb8:	601a      	str	r2, [r3, #0]
 8002eba:	e007      	b.n	8002ecc <HAL_CAN_Init+0x164>
 8002ebc:	687b      	ldr	r3, [r7, #4]
 8002ebe:	681b      	ldr	r3, [r3, #0]
 8002ec0:	681a      	ldr	r2, [r3, #0]
 8002ec2:	687b      	ldr	r3, [r7, #4]
 8002ec4:	681b      	ldr	r3, [r3, #0]
 8002ec6:	f042 0210 	orr.w	r2, r2, #16
 8002eca:	601a      	str	r2, [r3, #0]
 8002ecc:	687b      	ldr	r3, [r7, #4]
 8002ece:	7f1b      	ldrb	r3, [r3, #28]
 8002ed0:	2b01      	cmp	r3, #1
 8002ed2:	d108      	bne.n	8002ee6 <HAL_CAN_Init+0x17e>
 8002ed4:	687b      	ldr	r3, [r7, #4]
 8002ed6:	681b      	ldr	r3, [r3, #0]
 8002ed8:	681a      	ldr	r2, [r3, #0]
 8002eda:	687b      	ldr	r3, [r7, #4]
 8002edc:	681b      	ldr	r3, [r3, #0]
 8002ede:	f042 0208 	orr.w	r2, r2, #8
 8002ee2:	601a      	str	r2, [r3, #0]
 8002ee4:	e007      	b.n	8002ef6 <HAL_CAN_Init+0x18e>
 8002ee6:	687b      	ldr	r3, [r7, #4]
 8002ee8:	681b      	ldr	r3, [r3, #0]
 8002eea:	681a      	ldr	r2, [r3, #0]
 8002eec:	687b      	ldr	r3, [r7, #4]
 8002eee:	681b      	ldr	r3, [r3, #0]
 8002ef0:	f022 0208 	bic.w	r2, r2, #8
 8002ef4:	601a      	str	r2, [r3, #0]
 8002ef6:	687b      	ldr	r3, [r7, #4]
 8002ef8:	7f5b      	ldrb	r3, [r3, #29]
 8002efa:	2b01      	cmp	r3, #1
 8002efc:	d108      	bne.n	8002f10 <HAL_CAN_Init+0x1a8>
 8002efe:	687b      	ldr	r3, [r7, #4]
 8002f00:	681b      	ldr	r3, [r3, #0]
 8002f02:	681a      	ldr	r2, [r3, #0]
 8002f04:	687b      	ldr	r3, [r7, #4]
 8002f06:	681b      	ldr	r3, [r3, #0]
 8002f08:	f042 0204 	orr.w	r2, r2, #4
 8002f0c:	601a      	str	r2, [r3, #0]
 8002f0e:	e007      	b.n	8002f20 <HAL_CAN_Init+0x1b8>
 8002f10:	687b      	ldr	r3, [r7, #4]
 8002f12:	681b      	ldr	r3, [r3, #0]
 8002f14:	681a      	ldr	r2, [r3, #0]
 8002f16:	687b      	ldr	r3, [r7, #4]
 8002f18:	681b      	ldr	r3, [r3, #0]
 8002f1a:	f022 0204 	bic.w	r2, r2, #4
 8002f1e:	601a      	str	r2, [r3, #0]
 8002f20:	687b      	ldr	r3, [r7, #4]
 8002f22:	689a      	ldr	r2, [r3, #8]
 8002f24:	687b      	ldr	r3, [r7, #4]
 8002f26:	68db      	ldr	r3, [r3, #12]
 8002f28:	431a      	orrs	r2, r3
 8002f2a:	687b      	ldr	r3, [r7, #4]
 8002f2c:	691b      	ldr	r3, [r3, #16]
 8002f2e:	431a      	orrs	r2, r3
 8002f30:	687b      	ldr	r3, [r7, #4]
 8002f32:	695b      	ldr	r3, [r3, #20]
 8002f34:	ea42 0103 	orr.w	r1, r2, r3
 8002f38:	687b      	ldr	r3, [r7, #4]
 8002f3a:	685b      	ldr	r3, [r3, #4]
 8002f3c:	1e5a      	subs	r2, r3, #1
 8002f3e:	687b      	ldr	r3, [r7, #4]
 8002f40:	681b      	ldr	r3, [r3, #0]
 8002f42:	430a      	orrs	r2, r1
 8002f44:	61da      	str	r2, [r3, #28]
 8002f46:	687b      	ldr	r3, [r7, #4]
 8002f48:	2200      	movs	r2, #0
 8002f4a:	625a      	str	r2, [r3, #36]	; 0x24
 8002f4c:	687b      	ldr	r3, [r7, #4]
 8002f4e:	2201      	movs	r2, #1
 8002f50:	f883 2020 	strb.w	r2, [r3, #32]
 8002f54:	2300      	movs	r3, #0
 8002f56:	4618      	mov	r0, r3
 8002f58:	3710      	adds	r7, #16
 8002f5a:	46bd      	mov	sp, r7
 8002f5c:	bd80      	pop	{r7, pc}

08002f5e <HAL_CAN_ConfigFilter>:
 8002f5e:	b480      	push	{r7}
 8002f60:	b087      	sub	sp, #28
 8002f62:	af00      	add	r7, sp, #0
 8002f64:	6078      	str	r0, [r7, #4]
 8002f66:	6039      	str	r1, [r7, #0]
 8002f68:	687b      	ldr	r3, [r7, #4]
 8002f6a:	681b      	ldr	r3, [r3, #0]
 8002f6c:	617b      	str	r3, [r7, #20]
 8002f6e:	687b      	ldr	r3, [r7, #4]
 8002f70:	f893 3020 	ldrb.w	r3, [r3, #32]
 8002f74:	74fb      	strb	r3, [r7, #19]
 8002f76:	7cfb      	ldrb	r3, [r7, #19]
 8002f78:	2b01      	cmp	r3, #1
 8002f7a:	d003      	beq.n	8002f84 <HAL_CAN_ConfigFilter+0x26>
 8002f7c:	7cfb      	ldrb	r3, [r7, #19]
 8002f7e:	2b02      	cmp	r3, #2
 8002f80:	f040 80aa 	bne.w	80030d8 <HAL_CAN_ConfigFilter+0x17a>
 8002f84:	697b      	ldr	r3, [r7, #20]
 8002f86:	f8d3 3200 	ldr.w	r3, [r3, #512]	; 0x200
 8002f8a:	f043 0201 	orr.w	r2, r3, #1
 8002f8e:	697b      	ldr	r3, [r7, #20]
 8002f90:	f8c3 2200 	str.w	r2, [r3, #512]	; 0x200
 8002f94:	683b      	ldr	r3, [r7, #0]
 8002f96:	695b      	ldr	r3, [r3, #20]
 8002f98:	f003 031f 	and.w	r3, r3, #31
 8002f9c:	2201      	movs	r2, #1
 8002f9e:	fa02 f303 	lsl.w	r3, r2, r3
 8002fa2:	60fb      	str	r3, [r7, #12]
 8002fa4:	697b      	ldr	r3, [r7, #20]
 8002fa6:	f8d3 221c 	ldr.w	r2, [r3, #540]	; 0x21c
 8002faa:	68fb      	ldr	r3, [r7, #12]
 8002fac:	43db      	mvns	r3, r3
 8002fae:	401a      	ands	r2, r3
 8002fb0:	697b      	ldr	r3, [r7, #20]
 8002fb2:	f8c3 221c 	str.w	r2, [r3, #540]	; 0x21c
 8002fb6:	683b      	ldr	r3, [r7, #0]
 8002fb8:	69db      	ldr	r3, [r3, #28]
 8002fba:	2b00      	cmp	r3, #0
 8002fbc:	d123      	bne.n	8003006 <HAL_CAN_ConfigFilter+0xa8>
 8002fbe:	697b      	ldr	r3, [r7, #20]
 8002fc0:	f8d3 220c 	ldr.w	r2, [r3, #524]	; 0x20c
 8002fc4:	68fb      	ldr	r3, [r7, #12]
 8002fc6:	43db      	mvns	r3, r3
 8002fc8:	401a      	ands	r2, r3
 8002fca:	697b      	ldr	r3, [r7, #20]
 8002fcc:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8002fd0:	683b      	ldr	r3, [r7, #0]
 8002fd2:	68db      	ldr	r3, [r3, #12]
 8002fd4:	0419      	lsls	r1, r3, #16
 8002fd6:	683b      	ldr	r3, [r7, #0]
 8002fd8:	685b      	ldr	r3, [r3, #4]
 8002fda:	b29b      	uxth	r3, r3
 8002fdc:	683a      	ldr	r2, [r7, #0]
 8002fde:	6952      	ldr	r2, [r2, #20]
 8002fe0:	4319      	orrs	r1, r3
 8002fe2:	697b      	ldr	r3, [r7, #20]
 8002fe4:	3248      	adds	r2, #72	; 0x48
 8002fe6:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
 8002fea:	683b      	ldr	r3, [r7, #0]
 8002fec:	689b      	ldr	r3, [r3, #8]
 8002fee:	0419      	lsls	r1, r3, #16
 8002ff0:	683b      	ldr	r3, [r7, #0]
 8002ff2:	681b      	ldr	r3, [r3, #0]
 8002ff4:	b29a      	uxth	r2, r3
 8002ff6:	683b      	ldr	r3, [r7, #0]
 8002ff8:	695b      	ldr	r3, [r3, #20]
 8002ffa:	430a      	orrs	r2, r1
 8002ffc:	6979      	ldr	r1, [r7, #20]
 8002ffe:	3348      	adds	r3, #72	; 0x48
 8003000:	00db      	lsls	r3, r3, #3
 8003002:	440b      	add	r3, r1
 8003004:	605a      	str	r2, [r3, #4]
 8003006:	683b      	ldr	r3, [r7, #0]
 8003008:	69db      	ldr	r3, [r3, #28]
 800300a:	2b01      	cmp	r3, #1
 800300c:	d122      	bne.n	8003054 <HAL_CAN_ConfigFilter+0xf6>
 800300e:	697b      	ldr	r3, [r7, #20]
 8003010:	f8d3 220c 	ldr.w	r2, [r3, #524]	; 0x20c
 8003014:	68fb      	ldr	r3, [r7, #12]
 8003016:	431a      	orrs	r2, r3
 8003018:	697b      	ldr	r3, [r7, #20]
 800301a:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800301e:	683b      	ldr	r3, [r7, #0]
 8003020:	681b      	ldr	r3, [r3, #0]
 8003022:	0419      	lsls	r1, r3, #16
 8003024:	683b      	ldr	r3, [r7, #0]
 8003026:	685b      	ldr	r3, [r3, #4]
 8003028:	b29b      	uxth	r3, r3
 800302a:	683a      	ldr	r2, [r7, #0]
 800302c:	6952      	ldr	r2, [r2, #20]
 800302e:	4319      	orrs	r1, r3
 8003030:	697b      	ldr	r3, [r7, #20]
 8003032:	3248      	adds	r2, #72	; 0x48
 8003034:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
 8003038:	683b      	ldr	r3, [r7, #0]
 800303a:	689b      	ldr	r3, [r3, #8]
 800303c:	0419      	lsls	r1, r3, #16
 800303e:	683b      	ldr	r3, [r7, #0]
 8003040:	68db      	ldr	r3, [r3, #12]
 8003042:	b29a      	uxth	r2, r3
 8003044:	683b      	ldr	r3, [r7, #0]
 8003046:	695b      	ldr	r3, [r3, #20]
 8003048:	430a      	orrs	r2, r1
 800304a:	6979      	ldr	r1, [r7, #20]
 800304c:	3348      	adds	r3, #72	; 0x48
 800304e:	00db      	lsls	r3, r3, #3
 8003050:	440b      	add	r3, r1
 8003052:	605a      	str	r2, [r3, #4]
 8003054:	683b      	ldr	r3, [r7, #0]
 8003056:	699b      	ldr	r3, [r3, #24]
 8003058:	2b00      	cmp	r3, #0
 800305a:	d109      	bne.n	8003070 <HAL_CAN_ConfigFilter+0x112>
 800305c:	697b      	ldr	r3, [r7, #20]
 800305e:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 8003062:	68fb      	ldr	r3, [r7, #12]
 8003064:	43db      	mvns	r3, r3
 8003066:	401a      	ands	r2, r3
 8003068:	697b      	ldr	r3, [r7, #20]
 800306a:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800306e:	e007      	b.n	8003080 <HAL_CAN_ConfigFilter+0x122>
 8003070:	697b      	ldr	r3, [r7, #20]
 8003072:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 8003076:	68fb      	ldr	r3, [r7, #12]
 8003078:	431a      	orrs	r2, r3
 800307a:	697b      	ldr	r3, [r7, #20]
 800307c:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8003080:	683b      	ldr	r3, [r7, #0]
 8003082:	691b      	ldr	r3, [r3, #16]
 8003084:	2b00      	cmp	r3, #0
 8003086:	d109      	bne.n	800309c <HAL_CAN_ConfigFilter+0x13e>
 8003088:	697b      	ldr	r3, [r7, #20]
 800308a:	f8d3 2214 	ldr.w	r2, [r3, #532]	; 0x214
 800308e:	68fb      	ldr	r3, [r7, #12]
 8003090:	43db      	mvns	r3, r3
 8003092:	401a      	ands	r2, r3
 8003094:	697b      	ldr	r3, [r7, #20]
 8003096:	f8c3 2214 	str.w	r2, [r3, #532]	; 0x214
 800309a:	e007      	b.n	80030ac <HAL_CAN_ConfigFilter+0x14e>
 800309c:	697b      	ldr	r3, [r7, #20]
 800309e:	f8d3 2214 	ldr.w	r2, [r3, #532]	; 0x214
 80030a2:	68fb      	ldr	r3, [r7, #12]
 80030a4:	431a      	orrs	r2, r3
 80030a6:	697b      	ldr	r3, [r7, #20]
 80030a8:	f8c3 2214 	str.w	r2, [r3, #532]	; 0x214
 80030ac:	683b      	ldr	r3, [r7, #0]
 80030ae:	6a1b      	ldr	r3, [r3, #32]
 80030b0:	2b01      	cmp	r3, #1
 80030b2:	d107      	bne.n	80030c4 <HAL_CAN_ConfigFilter+0x166>
 80030b4:	697b      	ldr	r3, [r7, #20]
 80030b6:	f8d3 221c 	ldr.w	r2, [r3, #540]	; 0x21c
 80030ba:	68fb      	ldr	r3, [r7, #12]
 80030bc:	431a      	orrs	r2, r3
 80030be:	697b      	ldr	r3, [r7, #20]
 80030c0:	f8c3 221c 	str.w	r2, [r3, #540]	; 0x21c
 80030c4:	697b      	ldr	r3, [r7, #20]
 80030c6:	f8d3 3200 	ldr.w	r3, [r3, #512]	; 0x200
 80030ca:	f023 0201 	bic.w	r2, r3, #1
 80030ce:	697b      	ldr	r3, [r7, #20]
 80030d0:	f8c3 2200 	str.w	r2, [r3, #512]	; 0x200
 80030d4:	2300      	movs	r3, #0
 80030d6:	e006      	b.n	80030e6 <HAL_CAN_ConfigFilter+0x188>
 80030d8:	687b      	ldr	r3, [r7, #4]
 80030da:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80030dc:	f443 2280 	orr.w	r2, r3, #262144	; 0x40000
 80030e0:	687b      	ldr	r3, [r7, #4]
 80030e2:	625a      	str	r2, [r3, #36]	; 0x24
 80030e4:	2301      	movs	r3, #1
 80030e6:	4618      	mov	r0, r3
 80030e8:	371c      	adds	r7, #28
 80030ea:	46bd      	mov	sp, r7
 80030ec:	bc80      	pop	{r7}
 80030ee:	4770      	bx	lr

080030f0 <HAL_CAN_Start>:
 80030f0:	b580      	push	{r7, lr}
 80030f2:	b084      	sub	sp, #16
 80030f4:	af00      	add	r7, sp, #0
 80030f6:	6078      	str	r0, [r7, #4]
 80030f8:	687b      	ldr	r3, [r7, #4]
 80030fa:	f893 3020 	ldrb.w	r3, [r3, #32]
 80030fe:	b2db      	uxtb	r3, r3
 8003100:	2b01      	cmp	r3, #1
 8003102:	d12e      	bne.n	8003162 <HAL_CAN_Start+0x72>
 8003104:	687b      	ldr	r3, [r7, #4]
 8003106:	2202      	movs	r2, #2
 8003108:	f883 2020 	strb.w	r2, [r3, #32]
 800310c:	687b      	ldr	r3, [r7, #4]
 800310e:	681b      	ldr	r3, [r3, #0]
 8003110:	681a      	ldr	r2, [r3, #0]
 8003112:	687b      	ldr	r3, [r7, #4]
 8003114:	681b      	ldr	r3, [r3, #0]
 8003116:	f022 0201 	bic.w	r2, r2, #1
 800311a:	601a      	str	r2, [r3, #0]
 800311c:	f7ff f986 	bl	800242c <HAL_GetTick>
 8003120:	60f8      	str	r0, [r7, #12]
 8003122:	e012      	b.n	800314a <HAL_CAN_Start+0x5a>
 8003124:	f7ff f982 	bl	800242c <HAL_GetTick>
 8003128:	4602      	mov	r2, r0
 800312a:	68fb      	ldr	r3, [r7, #12]
 800312c:	1ad3      	subs	r3, r2, r3
 800312e:	2b0a      	cmp	r3, #10
 8003130:	d90b      	bls.n	800314a <HAL_CAN_Start+0x5a>
 8003132:	687b      	ldr	r3, [r7, #4]
 8003134:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003136:	f443 3200 	orr.w	r2, r3, #131072	; 0x20000
 800313a:	687b      	ldr	r3, [r7, #4]
 800313c:	625a      	str	r2, [r3, #36]	; 0x24
 800313e:	687b      	ldr	r3, [r7, #4]
 8003140:	2205      	movs	r2, #5
 8003142:	f883 2020 	strb.w	r2, [r3, #32]
 8003146:	2301      	movs	r3, #1
 8003148:	e012      	b.n	8003170 <HAL_CAN_Start+0x80>
 800314a:	687b      	ldr	r3, [r7, #4]
 800314c:	681b      	ldr	r3, [r3, #0]
 800314e:	685b      	ldr	r3, [r3, #4]
 8003150:	f003 0301 	and.w	r3, r3, #1
 8003154:	2b00      	cmp	r3, #0
 8003156:	d1e5      	bne.n	8003124 <HAL_CAN_Start+0x34>
 8003158:	687b      	ldr	r3, [r7, #4]
 800315a:	2200      	movs	r2, #0
 800315c:	625a      	str	r2, [r3, #36]	; 0x24
 800315e:	2300      	movs	r3, #0
 8003160:	e006      	b.n	8003170 <HAL_CAN_Start+0x80>
 8003162:	687b      	ldr	r3, [r7, #4]
 8003164:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003166:	f443 2200 	orr.w	r2, r3, #524288	; 0x80000
 800316a:	687b      	ldr	r3, [r7, #4]
 800316c:	625a      	str	r2, [r3, #36]	; 0x24
 800316e:	2301      	movs	r3, #1
 8003170:	4618      	mov	r0, r3
 8003172:	3710      	adds	r7, #16
 8003174:	46bd      	mov	sp, r7
 8003176:	bd80      	pop	{r7, pc}

08003178 <HAL_CAN_AddTxMessage>:
 8003178:	b480      	push	{r7}
 800317a:	b089      	sub	sp, #36	; 0x24
 800317c:	af00      	add	r7, sp, #0
 800317e:	60f8      	str	r0, [r7, #12]
 8003180:	60b9      	str	r1, [r7, #8]
 8003182:	607a      	str	r2, [r7, #4]
 8003184:	603b      	str	r3, [r7, #0]
 8003186:	68fb      	ldr	r3, [r7, #12]
 8003188:	f893 3020 	ldrb.w	r3, [r3, #32]
 800318c:	77fb      	strb	r3, [r7, #31]
 800318e:	68fb      	ldr	r3, [r7, #12]
 8003190:	681b      	ldr	r3, [r3, #0]
 8003192:	689b      	ldr	r3, [r3, #8]
 8003194:	61bb      	str	r3, [r7, #24]
 8003196:	7ffb      	ldrb	r3, [r7, #31]
 8003198:	2b01      	cmp	r3, #1
 800319a:	d003      	beq.n	80031a4 <HAL_CAN_AddTxMessage+0x2c>
 800319c:	7ffb      	ldrb	r3, [r7, #31]
 800319e:	2b02      	cmp	r3, #2
 80031a0:	f040 80ad 	bne.w	80032fe <HAL_CAN_AddTxMessage+0x186>
 80031a4:	69bb      	ldr	r3, [r7, #24]
 80031a6:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 80031aa:	2b00      	cmp	r3, #0
 80031ac:	d10a      	bne.n	80031c4 <HAL_CAN_AddTxMessage+0x4c>
 80031ae:	69bb      	ldr	r3, [r7, #24]
 80031b0:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 80031b4:	2b00      	cmp	r3, #0
 80031b6:	d105      	bne.n	80031c4 <HAL_CAN_AddTxMessage+0x4c>
 80031b8:	69bb      	ldr	r3, [r7, #24]
 80031ba:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80031be:	2b00      	cmp	r3, #0
 80031c0:	f000 8095 	beq.w	80032ee <HAL_CAN_AddTxMessage+0x176>
 80031c4:	69bb      	ldr	r3, [r7, #24]
 80031c6:	0e1b      	lsrs	r3, r3, #24
 80031c8:	f003 0303 	and.w	r3, r3, #3
 80031cc:	617b      	str	r3, [r7, #20]
 80031ce:	2201      	movs	r2, #1
 80031d0:	697b      	ldr	r3, [r7, #20]
 80031d2:	409a      	lsls	r2, r3
 80031d4:	683b      	ldr	r3, [r7, #0]
 80031d6:	601a      	str	r2, [r3, #0]
 80031d8:	68bb      	ldr	r3, [r7, #8]
 80031da:	689b      	ldr	r3, [r3, #8]
 80031dc:	2b00      	cmp	r3, #0
 80031de:	d10d      	bne.n	80031fc <HAL_CAN_AddTxMessage+0x84>
 80031e0:	68bb      	ldr	r3, [r7, #8]
 80031e2:	681b      	ldr	r3, [r3, #0]
 80031e4:	055a      	lsls	r2, r3, #21
 80031e6:	68bb      	ldr	r3, [r7, #8]
 80031e8:	68db      	ldr	r3, [r3, #12]
 80031ea:	68f9      	ldr	r1, [r7, #12]
 80031ec:	6809      	ldr	r1, [r1, #0]
 80031ee:	431a      	orrs	r2, r3
 80031f0:	697b      	ldr	r3, [r7, #20]
 80031f2:	3318      	adds	r3, #24
 80031f4:	011b      	lsls	r3, r3, #4
 80031f6:	440b      	add	r3, r1
 80031f8:	601a      	str	r2, [r3, #0]
 80031fa:	e00f      	b.n	800321c <HAL_CAN_AddTxMessage+0xa4>
 80031fc:	68bb      	ldr	r3, [r7, #8]
 80031fe:	685b      	ldr	r3, [r3, #4]
 8003200:	00da      	lsls	r2, r3, #3
 8003202:	68bb      	ldr	r3, [r7, #8]
 8003204:	689b      	ldr	r3, [r3, #8]
 8003206:	431a      	orrs	r2, r3
 8003208:	68bb      	ldr	r3, [r7, #8]
 800320a:	68db      	ldr	r3, [r3, #12]
 800320c:	68f9      	ldr	r1, [r7, #12]
 800320e:	6809      	ldr	r1, [r1, #0]
 8003210:	431a      	orrs	r2, r3
 8003212:	697b      	ldr	r3, [r7, #20]
 8003214:	3318      	adds	r3, #24
 8003216:	011b      	lsls	r3, r3, #4
 8003218:	440b      	add	r3, r1
 800321a:	601a      	str	r2, [r3, #0]
 800321c:	68fb      	ldr	r3, [r7, #12]
 800321e:	6819      	ldr	r1, [r3, #0]
 8003220:	68bb      	ldr	r3, [r7, #8]
 8003222:	691a      	ldr	r2, [r3, #16]
 8003224:	697b      	ldr	r3, [r7, #20]
 8003226:	3318      	adds	r3, #24
 8003228:	011b      	lsls	r3, r3, #4
 800322a:	440b      	add	r3, r1
 800322c:	3304      	adds	r3, #4
 800322e:	601a      	str	r2, [r3, #0]
 8003230:	68bb      	ldr	r3, [r7, #8]
 8003232:	7d1b      	ldrb	r3, [r3, #20]
 8003234:	2b01      	cmp	r3, #1
 8003236:	d111      	bne.n	800325c <HAL_CAN_AddTxMessage+0xe4>
 8003238:	68fb      	ldr	r3, [r7, #12]
 800323a:	681a      	ldr	r2, [r3, #0]
 800323c:	697b      	ldr	r3, [r7, #20]
 800323e:	3318      	adds	r3, #24
 8003240:	011b      	lsls	r3, r3, #4
 8003242:	4413      	add	r3, r2
 8003244:	3304      	adds	r3, #4
 8003246:	681b      	ldr	r3, [r3, #0]
 8003248:	68fa      	ldr	r2, [r7, #12]
 800324a:	6811      	ldr	r1, [r2, #0]
 800324c:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 8003250:	697b      	ldr	r3, [r7, #20]
 8003252:	3318      	adds	r3, #24
 8003254:	011b      	lsls	r3, r3, #4
 8003256:	440b      	add	r3, r1
 8003258:	3304      	adds	r3, #4
 800325a:	601a      	str	r2, [r3, #0]
 800325c:	687b      	ldr	r3, [r7, #4]
 800325e:	3307      	adds	r3, #7
 8003260:	781b      	ldrb	r3, [r3, #0]
 8003262:	061a      	lsls	r2, r3, #24
 8003264:	687b      	ldr	r3, [r7, #4]
 8003266:	3306      	adds	r3, #6
 8003268:	781b      	ldrb	r3, [r3, #0]
 800326a:	041b      	lsls	r3, r3, #16
 800326c:	431a      	orrs	r2, r3
 800326e:	687b      	ldr	r3, [r7, #4]
 8003270:	3305      	adds	r3, #5
 8003272:	781b      	ldrb	r3, [r3, #0]
 8003274:	021b      	lsls	r3, r3, #8
 8003276:	4313      	orrs	r3, r2
 8003278:	687a      	ldr	r2, [r7, #4]
 800327a:	3204      	adds	r2, #4
 800327c:	7812      	ldrb	r2, [r2, #0]
 800327e:	4610      	mov	r0, r2
 8003280:	68fa      	ldr	r2, [r7, #12]
 8003282:	6811      	ldr	r1, [r2, #0]
 8003284:	ea43 0200 	orr.w	r2, r3, r0
 8003288:	697b      	ldr	r3, [r7, #20]
 800328a:	011b      	lsls	r3, r3, #4
 800328c:	440b      	add	r3, r1
 800328e:	f503 73c6 	add.w	r3, r3, #396	; 0x18c
 8003292:	601a      	str	r2, [r3, #0]
 8003294:	687b      	ldr	r3, [r7, #4]
 8003296:	3303      	adds	r3, #3
 8003298:	781b      	ldrb	r3, [r3, #0]
 800329a:	061a      	lsls	r2, r3, #24
 800329c:	687b      	ldr	r3, [r7, #4]
 800329e:	3302      	adds	r3, #2
 80032a0:	781b      	ldrb	r3, [r3, #0]
 80032a2:	041b      	lsls	r3, r3, #16
 80032a4:	431a      	orrs	r2, r3
 80032a6:	687b      	ldr	r3, [r7, #4]
 80032a8:	3301      	adds	r3, #1
 80032aa:	781b      	ldrb	r3, [r3, #0]
 80032ac:	021b      	lsls	r3, r3, #8
 80032ae:	4313      	orrs	r3, r2
 80032b0:	687a      	ldr	r2, [r7, #4]
 80032b2:	7812      	ldrb	r2, [r2, #0]
 80032b4:	4610      	mov	r0, r2
 80032b6:	68fa      	ldr	r2, [r7, #12]
 80032b8:	6811      	ldr	r1, [r2, #0]
 80032ba:	ea43 0200 	orr.w	r2, r3, r0
 80032be:	697b      	ldr	r3, [r7, #20]
 80032c0:	011b      	lsls	r3, r3, #4
 80032c2:	440b      	add	r3, r1
 80032c4:	f503 73c4 	add.w	r3, r3, #392	; 0x188
 80032c8:	601a      	str	r2, [r3, #0]
 80032ca:	68fb      	ldr	r3, [r7, #12]
 80032cc:	681a      	ldr	r2, [r3, #0]
 80032ce:	697b      	ldr	r3, [r7, #20]
 80032d0:	3318      	adds	r3, #24
 80032d2:	011b      	lsls	r3, r3, #4
 80032d4:	4413      	add	r3, r2
 80032d6:	681b      	ldr	r3, [r3, #0]
 80032d8:	68fa      	ldr	r2, [r7, #12]
 80032da:	6811      	ldr	r1, [r2, #0]
 80032dc:	f043 0201 	orr.w	r2, r3, #1
 80032e0:	697b      	ldr	r3, [r7, #20]
 80032e2:	3318      	adds	r3, #24
 80032e4:	011b      	lsls	r3, r3, #4
 80032e6:	440b      	add	r3, r1
 80032e8:	601a      	str	r2, [r3, #0]
 80032ea:	2300      	movs	r3, #0
 80032ec:	e00e      	b.n	800330c <HAL_CAN_AddTxMessage+0x194>
 80032ee:	68fb      	ldr	r3, [r7, #12]
 80032f0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80032f2:	f443 1200 	orr.w	r2, r3, #2097152	; 0x200000
 80032f6:	68fb      	ldr	r3, [r7, #12]
 80032f8:	625a      	str	r2, [r3, #36]	; 0x24
 80032fa:	2301      	movs	r3, #1
 80032fc:	e006      	b.n	800330c <HAL_CAN_AddTxMessage+0x194>
 80032fe:	68fb      	ldr	r3, [r7, #12]
 8003300:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003302:	f443 2280 	orr.w	r2, r3, #262144	; 0x40000
 8003306:	68fb      	ldr	r3, [r7, #12]
 8003308:	625a      	str	r2, [r3, #36]	; 0x24
 800330a:	2301      	movs	r3, #1
 800330c:	4618      	mov	r0, r3
 800330e:	3724      	adds	r7, #36	; 0x24
 8003310:	46bd      	mov	sp, r7
 8003312:	bc80      	pop	{r7}
 8003314:	4770      	bx	lr

08003316 <HAL_CAN_AbortTxRequest>:
 8003316:	b480      	push	{r7}
 8003318:	b085      	sub	sp, #20
 800331a:	af00      	add	r7, sp, #0
 800331c:	6078      	str	r0, [r7, #4]
 800331e:	6039      	str	r1, [r7, #0]
 8003320:	687b      	ldr	r3, [r7, #4]
 8003322:	f893 3020 	ldrb.w	r3, [r3, #32]
 8003326:	73fb      	strb	r3, [r7, #15]
 8003328:	7bfb      	ldrb	r3, [r7, #15]
 800332a:	2b01      	cmp	r3, #1
 800332c:	d002      	beq.n	8003334 <HAL_CAN_AbortTxRequest+0x1e>
 800332e:	7bfb      	ldrb	r3, [r7, #15]
 8003330:	2b02      	cmp	r3, #2
 8003332:	d128      	bne.n	8003386 <HAL_CAN_AbortTxRequest+0x70>
 8003334:	683b      	ldr	r3, [r7, #0]
 8003336:	f003 0301 	and.w	r3, r3, #1
 800333a:	2b00      	cmp	r3, #0
 800333c:	d007      	beq.n	800334e <HAL_CAN_AbortTxRequest+0x38>
 800333e:	687b      	ldr	r3, [r7, #4]
 8003340:	681b      	ldr	r3, [r3, #0]
 8003342:	689a      	ldr	r2, [r3, #8]
 8003344:	687b      	ldr	r3, [r7, #4]
 8003346:	681b      	ldr	r3, [r3, #0]
 8003348:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 800334c:	609a      	str	r2, [r3, #8]
 800334e:	683b      	ldr	r3, [r7, #0]
 8003350:	f003 0302 	and.w	r3, r3, #2
 8003354:	2b00      	cmp	r3, #0
 8003356:	d007      	beq.n	8003368 <HAL_CAN_AbortTxRequest+0x52>
 8003358:	687b      	ldr	r3, [r7, #4]
 800335a:	681b      	ldr	r3, [r3, #0]
 800335c:	689a      	ldr	r2, [r3, #8]
 800335e:	687b      	ldr	r3, [r7, #4]
 8003360:	681b      	ldr	r3, [r3, #0]
 8003362:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8003366:	609a      	str	r2, [r3, #8]
 8003368:	683b      	ldr	r3, [r7, #0]
 800336a:	f003 0304 	and.w	r3, r3, #4
 800336e:	2b00      	cmp	r3, #0
 8003370:	d007      	beq.n	8003382 <HAL_CAN_AbortTxRequest+0x6c>
 8003372:	687b      	ldr	r3, [r7, #4]
 8003374:	681b      	ldr	r3, [r3, #0]
 8003376:	689a      	ldr	r2, [r3, #8]
 8003378:	687b      	ldr	r3, [r7, #4]
 800337a:	681b      	ldr	r3, [r3, #0]
 800337c:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8003380:	609a      	str	r2, [r3, #8]
 8003382:	2300      	movs	r3, #0
 8003384:	e006      	b.n	8003394 <HAL_CAN_AbortTxRequest+0x7e>
 8003386:	687b      	ldr	r3, [r7, #4]
 8003388:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800338a:	f443 2280 	orr.w	r2, r3, #262144	; 0x40000
 800338e:	687b      	ldr	r3, [r7, #4]
 8003390:	625a      	str	r2, [r3, #36]	; 0x24
 8003392:	2301      	movs	r3, #1
 8003394:	4618      	mov	r0, r3
 8003396:	3714      	adds	r7, #20
 8003398:	46bd      	mov	sp, r7
 800339a:	bc80      	pop	{r7}
 800339c:	4770      	bx	lr

0800339e <HAL_CAN_GetTxMailboxesFreeLevel>:
 800339e:	b480      	push	{r7}
 80033a0:	b085      	sub	sp, #20
 80033a2:	af00      	add	r7, sp, #0
 80033a4:	6078      	str	r0, [r7, #4]
 80033a6:	2300      	movs	r3, #0
 80033a8:	60fb      	str	r3, [r7, #12]
 80033aa:	687b      	ldr	r3, [r7, #4]
 80033ac:	f893 3020 	ldrb.w	r3, [r3, #32]
 80033b0:	72fb      	strb	r3, [r7, #11]
 80033b2:	7afb      	ldrb	r3, [r7, #11]
 80033b4:	2b01      	cmp	r3, #1
 80033b6:	d002      	beq.n	80033be <HAL_CAN_GetTxMailboxesFreeLevel+0x20>
 80033b8:	7afb      	ldrb	r3, [r7, #11]
 80033ba:	2b02      	cmp	r3, #2
 80033bc:	d11d      	bne.n	80033fa <HAL_CAN_GetTxMailboxesFreeLevel+0x5c>
 80033be:	687b      	ldr	r3, [r7, #4]
 80033c0:	681b      	ldr	r3, [r3, #0]
 80033c2:	689b      	ldr	r3, [r3, #8]
 80033c4:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 80033c8:	2b00      	cmp	r3, #0
 80033ca:	d002      	beq.n	80033d2 <HAL_CAN_GetTxMailboxesFreeLevel+0x34>
 80033cc:	68fb      	ldr	r3, [r7, #12]
 80033ce:	3301      	adds	r3, #1
 80033d0:	60fb      	str	r3, [r7, #12]
 80033d2:	687b      	ldr	r3, [r7, #4]
 80033d4:	681b      	ldr	r3, [r3, #0]
 80033d6:	689b      	ldr	r3, [r3, #8]
 80033d8:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 80033dc:	2b00      	cmp	r3, #0
 80033de:	d002      	beq.n	80033e6 <HAL_CAN_GetTxMailboxesFreeLevel+0x48>
 80033e0:	68fb      	ldr	r3, [r7, #12]
 80033e2:	3301      	adds	r3, #1
 80033e4:	60fb      	str	r3, [r7, #12]
 80033e6:	687b      	ldr	r3, [r7, #4]
 80033e8:	681b      	ldr	r3, [r3, #0]
 80033ea:	689b      	ldr	r3, [r3, #8]
 80033ec:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80033f0:	2b00      	cmp	r3, #0
 80033f2:	d002      	beq.n	80033fa <HAL_CAN_GetTxMailboxesFreeLevel+0x5c>
 80033f4:	68fb      	ldr	r3, [r7, #12]
 80033f6:	3301      	adds	r3, #1
 80033f8:	60fb      	str	r3, [r7, #12]
 80033fa:	68fb      	ldr	r3, [r7, #12]
 80033fc:	4618      	mov	r0, r3
 80033fe:	3714      	adds	r7, #20
 8003400:	46bd      	mov	sp, r7
 8003402:	bc80      	pop	{r7}
 8003404:	4770      	bx	lr

08003406 <HAL_CAN_GetRxMessage>:
 8003406:	b480      	push	{r7}
 8003408:	b087      	sub	sp, #28
 800340a:	af00      	add	r7, sp, #0
 800340c:	60f8      	str	r0, [r7, #12]
 800340e:	60b9      	str	r1, [r7, #8]
 8003410:	607a      	str	r2, [r7, #4]
 8003412:	603b      	str	r3, [r7, #0]
 8003414:	68fb      	ldr	r3, [r7, #12]
 8003416:	f893 3020 	ldrb.w	r3, [r3, #32]
 800341a:	75fb      	strb	r3, [r7, #23]
 800341c:	7dfb      	ldrb	r3, [r7, #23]
 800341e:	2b01      	cmp	r3, #1
 8003420:	d003      	beq.n	800342a <HAL_CAN_GetRxMessage+0x24>
 8003422:	7dfb      	ldrb	r3, [r7, #23]
 8003424:	2b02      	cmp	r3, #2
 8003426:	f040 8103 	bne.w	8003630 <HAL_CAN_GetRxMessage+0x22a>
 800342a:	68bb      	ldr	r3, [r7, #8]
 800342c:	2b00      	cmp	r3, #0
 800342e:	d10e      	bne.n	800344e <HAL_CAN_GetRxMessage+0x48>
 8003430:	68fb      	ldr	r3, [r7, #12]
 8003432:	681b      	ldr	r3, [r3, #0]
 8003434:	68db      	ldr	r3, [r3, #12]
 8003436:	f003 0303 	and.w	r3, r3, #3
 800343a:	2b00      	cmp	r3, #0
 800343c:	d116      	bne.n	800346c <HAL_CAN_GetRxMessage+0x66>
 800343e:	68fb      	ldr	r3, [r7, #12]
 8003440:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003442:	f443 1200 	orr.w	r2, r3, #2097152	; 0x200000
 8003446:	68fb      	ldr	r3, [r7, #12]
 8003448:	625a      	str	r2, [r3, #36]	; 0x24
 800344a:	2301      	movs	r3, #1
 800344c:	e0f7      	b.n	800363e <HAL_CAN_GetRxMessage+0x238>
 800344e:	68fb      	ldr	r3, [r7, #12]
 8003450:	681b      	ldr	r3, [r3, #0]
 8003452:	691b      	ldr	r3, [r3, #16]
 8003454:	f003 0303 	and.w	r3, r3, #3
 8003458:	2b00      	cmp	r3, #0
 800345a:	d107      	bne.n	800346c <HAL_CAN_GetRxMessage+0x66>
 800345c:	68fb      	ldr	r3, [r7, #12]
 800345e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003460:	f443 1200 	orr.w	r2, r3, #2097152	; 0x200000
 8003464:	68fb      	ldr	r3, [r7, #12]
 8003466:	625a      	str	r2, [r3, #36]	; 0x24
 8003468:	2301      	movs	r3, #1
 800346a:	e0e8      	b.n	800363e <HAL_CAN_GetRxMessage+0x238>
 800346c:	68fb      	ldr	r3, [r7, #12]
 800346e:	681a      	ldr	r2, [r3, #0]
 8003470:	68bb      	ldr	r3, [r7, #8]
 8003472:	331b      	adds	r3, #27
 8003474:	011b      	lsls	r3, r3, #4
 8003476:	4413      	add	r3, r2
 8003478:	681b      	ldr	r3, [r3, #0]
 800347a:	f003 0204 	and.w	r2, r3, #4
 800347e:	687b      	ldr	r3, [r7, #4]
 8003480:	609a      	str	r2, [r3, #8]
 8003482:	687b      	ldr	r3, [r7, #4]
 8003484:	689b      	ldr	r3, [r3, #8]
 8003486:	2b00      	cmp	r3, #0
 8003488:	d10c      	bne.n	80034a4 <HAL_CAN_GetRxMessage+0x9e>
 800348a:	68fb      	ldr	r3, [r7, #12]
 800348c:	681a      	ldr	r2, [r3, #0]
 800348e:	68bb      	ldr	r3, [r7, #8]
 8003490:	331b      	adds	r3, #27
 8003492:	011b      	lsls	r3, r3, #4
 8003494:	4413      	add	r3, r2
 8003496:	681b      	ldr	r3, [r3, #0]
 8003498:	0d5b      	lsrs	r3, r3, #21
 800349a:	f3c3 020a 	ubfx	r2, r3, #0, #11
 800349e:	687b      	ldr	r3, [r7, #4]
 80034a0:	601a      	str	r2, [r3, #0]
 80034a2:	e00b      	b.n	80034bc <HAL_CAN_GetRxMessage+0xb6>
 80034a4:	68fb      	ldr	r3, [r7, #12]
 80034a6:	681a      	ldr	r2, [r3, #0]
 80034a8:	68bb      	ldr	r3, [r7, #8]
 80034aa:	331b      	adds	r3, #27
 80034ac:	011b      	lsls	r3, r3, #4
 80034ae:	4413      	add	r3, r2
 80034b0:	681b      	ldr	r3, [r3, #0]
 80034b2:	08db      	lsrs	r3, r3, #3
 80034b4:	f023 4260 	bic.w	r2, r3, #3758096384	; 0xe0000000
 80034b8:	687b      	ldr	r3, [r7, #4]
 80034ba:	605a      	str	r2, [r3, #4]
 80034bc:	68fb      	ldr	r3, [r7, #12]
 80034be:	681a      	ldr	r2, [r3, #0]
 80034c0:	68bb      	ldr	r3, [r7, #8]
 80034c2:	331b      	adds	r3, #27
 80034c4:	011b      	lsls	r3, r3, #4
 80034c6:	4413      	add	r3, r2
 80034c8:	681b      	ldr	r3, [r3, #0]
 80034ca:	f003 0202 	and.w	r2, r3, #2
 80034ce:	687b      	ldr	r3, [r7, #4]
 80034d0:	60da      	str	r2, [r3, #12]
 80034d2:	68fb      	ldr	r3, [r7, #12]
 80034d4:	681a      	ldr	r2, [r3, #0]
 80034d6:	68bb      	ldr	r3, [r7, #8]
 80034d8:	331b      	adds	r3, #27
 80034da:	011b      	lsls	r3, r3, #4
 80034dc:	4413      	add	r3, r2
 80034de:	3304      	adds	r3, #4
 80034e0:	681b      	ldr	r3, [r3, #0]
 80034e2:	f003 0308 	and.w	r3, r3, #8
 80034e6:	2b00      	cmp	r3, #0
 80034e8:	d003      	beq.n	80034f2 <HAL_CAN_GetRxMessage+0xec>
 80034ea:	687b      	ldr	r3, [r7, #4]
 80034ec:	2208      	movs	r2, #8
 80034ee:	611a      	str	r2, [r3, #16]
 80034f0:	e00b      	b.n	800350a <HAL_CAN_GetRxMessage+0x104>
 80034f2:	68fb      	ldr	r3, [r7, #12]
 80034f4:	681a      	ldr	r2, [r3, #0]
 80034f6:	68bb      	ldr	r3, [r7, #8]
 80034f8:	331b      	adds	r3, #27
 80034fa:	011b      	lsls	r3, r3, #4
 80034fc:	4413      	add	r3, r2
 80034fe:	3304      	adds	r3, #4
 8003500:	681b      	ldr	r3, [r3, #0]
 8003502:	f003 020f 	and.w	r2, r3, #15
 8003506:	687b      	ldr	r3, [r7, #4]
 8003508:	611a      	str	r2, [r3, #16]
 800350a:	68fb      	ldr	r3, [r7, #12]
 800350c:	681a      	ldr	r2, [r3, #0]
 800350e:	68bb      	ldr	r3, [r7, #8]
 8003510:	331b      	adds	r3, #27
 8003512:	011b      	lsls	r3, r3, #4
 8003514:	4413      	add	r3, r2
 8003516:	3304      	adds	r3, #4
 8003518:	681b      	ldr	r3, [r3, #0]
 800351a:	0a1b      	lsrs	r3, r3, #8
 800351c:	b2da      	uxtb	r2, r3
 800351e:	687b      	ldr	r3, [r7, #4]
 8003520:	619a      	str	r2, [r3, #24]
 8003522:	68fb      	ldr	r3, [r7, #12]
 8003524:	681a      	ldr	r2, [r3, #0]
 8003526:	68bb      	ldr	r3, [r7, #8]
 8003528:	331b      	adds	r3, #27
 800352a:	011b      	lsls	r3, r3, #4
 800352c:	4413      	add	r3, r2
 800352e:	3304      	adds	r3, #4
 8003530:	681b      	ldr	r3, [r3, #0]
 8003532:	0c1b      	lsrs	r3, r3, #16
 8003534:	b29a      	uxth	r2, r3
 8003536:	687b      	ldr	r3, [r7, #4]
 8003538:	615a      	str	r2, [r3, #20]
 800353a:	68fb      	ldr	r3, [r7, #12]
 800353c:	681a      	ldr	r2, [r3, #0]
 800353e:	68bb      	ldr	r3, [r7, #8]
 8003540:	011b      	lsls	r3, r3, #4
 8003542:	4413      	add	r3, r2
 8003544:	f503 73dc 	add.w	r3, r3, #440	; 0x1b8
 8003548:	681b      	ldr	r3, [r3, #0]
 800354a:	b2da      	uxtb	r2, r3
 800354c:	683b      	ldr	r3, [r7, #0]
 800354e:	701a      	strb	r2, [r3, #0]
 8003550:	68fb      	ldr	r3, [r7, #12]
 8003552:	681a      	ldr	r2, [r3, #0]
 8003554:	68bb      	ldr	r3, [r7, #8]
 8003556:	011b      	lsls	r3, r3, #4
 8003558:	4413      	add	r3, r2
 800355a:	f503 73dc 	add.w	r3, r3, #440	; 0x1b8
 800355e:	681b      	ldr	r3, [r3, #0]
 8003560:	0a1a      	lsrs	r2, r3, #8
 8003562:	683b      	ldr	r3, [r7, #0]
 8003564:	3301      	adds	r3, #1
 8003566:	b2d2      	uxtb	r2, r2
 8003568:	701a      	strb	r2, [r3, #0]
 800356a:	68fb      	ldr	r3, [r7, #12]
 800356c:	681a      	ldr	r2, [r3, #0]
 800356e:	68bb      	ldr	r3, [r7, #8]
 8003570:	011b      	lsls	r3, r3, #4
 8003572:	4413      	add	r3, r2
 8003574:	f503 73dc 	add.w	r3, r3, #440	; 0x1b8
 8003578:	681b      	ldr	r3, [r3, #0]
 800357a:	0c1a      	lsrs	r2, r3, #16
 800357c:	683b      	ldr	r3, [r7, #0]
 800357e:	3302      	adds	r3, #2
 8003580:	b2d2      	uxtb	r2, r2
 8003582:	701a      	strb	r2, [r3, #0]
 8003584:	68fb      	ldr	r3, [r7, #12]
 8003586:	681a      	ldr	r2, [r3, #0]
 8003588:	68bb      	ldr	r3, [r7, #8]
 800358a:	011b      	lsls	r3, r3, #4
 800358c:	4413      	add	r3, r2
 800358e:	f503 73dc 	add.w	r3, r3, #440	; 0x1b8
 8003592:	681b      	ldr	r3, [r3, #0]
 8003594:	0e1a      	lsrs	r2, r3, #24
 8003596:	683b      	ldr	r3, [r7, #0]
 8003598:	3303      	adds	r3, #3
 800359a:	b2d2      	uxtb	r2, r2
 800359c:	701a      	strb	r2, [r3, #0]
 800359e:	68fb      	ldr	r3, [r7, #12]
 80035a0:	681a      	ldr	r2, [r3, #0]
 80035a2:	68bb      	ldr	r3, [r7, #8]
 80035a4:	011b      	lsls	r3, r3, #4
 80035a6:	4413      	add	r3, r2
 80035a8:	f503 73de 	add.w	r3, r3, #444	; 0x1bc
 80035ac:	681a      	ldr	r2, [r3, #0]
 80035ae:	683b      	ldr	r3, [r7, #0]
 80035b0:	3304      	adds	r3, #4
 80035b2:	b2d2      	uxtb	r2, r2
 80035b4:	701a      	strb	r2, [r3, #0]
 80035b6:	68fb      	ldr	r3, [r7, #12]
 80035b8:	681a      	ldr	r2, [r3, #0]
 80035ba:	68bb      	ldr	r3, [r7, #8]
 80035bc:	011b      	lsls	r3, r3, #4
 80035be:	4413      	add	r3, r2
 80035c0:	f503 73de 	add.w	r3, r3, #444	; 0x1bc
 80035c4:	681b      	ldr	r3, [r3, #0]
 80035c6:	0a1a      	lsrs	r2, r3, #8
 80035c8:	683b      	ldr	r3, [r7, #0]
 80035ca:	3305      	adds	r3, #5
 80035cc:	b2d2      	uxtb	r2, r2
 80035ce:	701a      	strb	r2, [r3, #0]
 80035d0:	68fb      	ldr	r3, [r7, #12]
 80035d2:	681a      	ldr	r2, [r3, #0]
 80035d4:	68bb      	ldr	r3, [r7, #8]
 80035d6:	011b      	lsls	r3, r3, #4
 80035d8:	4413      	add	r3, r2
 80035da:	f503 73de 	add.w	r3, r3, #444	; 0x1bc
 80035de:	681b      	ldr	r3, [r3, #0]
 80035e0:	0c1a      	lsrs	r2, r3, #16
 80035e2:	683b      	ldr	r3, [r7, #0]
 80035e4:	3306      	adds	r3, #6
 80035e6:	b2d2      	uxtb	r2, r2
 80035e8:	701a      	strb	r2, [r3, #0]
 80035ea:	68fb      	ldr	r3, [r7, #12]
 80035ec:	681a      	ldr	r2, [r3, #0]
 80035ee:	68bb      	ldr	r3, [r7, #8]
 80035f0:	011b      	lsls	r3, r3, #4
 80035f2:	4413      	add	r3, r2
 80035f4:	f503 73de 	add.w	r3, r3, #444	; 0x1bc
 80035f8:	681b      	ldr	r3, [r3, #0]
 80035fa:	0e1a      	lsrs	r2, r3, #24
 80035fc:	683b      	ldr	r3, [r7, #0]
 80035fe:	3307      	adds	r3, #7
 8003600:	b2d2      	uxtb	r2, r2
 8003602:	701a      	strb	r2, [r3, #0]
 8003604:	68bb      	ldr	r3, [r7, #8]
 8003606:	2b00      	cmp	r3, #0
 8003608:	d108      	bne.n	800361c <HAL_CAN_GetRxMessage+0x216>
 800360a:	68fb      	ldr	r3, [r7, #12]
 800360c:	681b      	ldr	r3, [r3, #0]
 800360e:	68da      	ldr	r2, [r3, #12]
 8003610:	68fb      	ldr	r3, [r7, #12]
 8003612:	681b      	ldr	r3, [r3, #0]
 8003614:	f042 0220 	orr.w	r2, r2, #32
 8003618:	60da      	str	r2, [r3, #12]
 800361a:	e007      	b.n	800362c <HAL_CAN_GetRxMessage+0x226>
 800361c:	68fb      	ldr	r3, [r7, #12]
 800361e:	681b      	ldr	r3, [r3, #0]
 8003620:	691a      	ldr	r2, [r3, #16]
 8003622:	68fb      	ldr	r3, [r7, #12]
 8003624:	681b      	ldr	r3, [r3, #0]
 8003626:	f042 0220 	orr.w	r2, r2, #32
 800362a:	611a      	str	r2, [r3, #16]
 800362c:	2300      	movs	r3, #0
 800362e:	e006      	b.n	800363e <HAL_CAN_GetRxMessage+0x238>
 8003630:	68fb      	ldr	r3, [r7, #12]
 8003632:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003634:	f443 2280 	orr.w	r2, r3, #262144	; 0x40000
 8003638:	68fb      	ldr	r3, [r7, #12]
 800363a:	625a      	str	r2, [r3, #36]	; 0x24
 800363c:	2301      	movs	r3, #1
 800363e:	4618      	mov	r0, r3
 8003640:	371c      	adds	r7, #28
 8003642:	46bd      	mov	sp, r7
 8003644:	bc80      	pop	{r7}
 8003646:	4770      	bx	lr

08003648 <HAL_CAN_ActivateNotification>:
 8003648:	b480      	push	{r7}
 800364a:	b085      	sub	sp, #20
 800364c:	af00      	add	r7, sp, #0
 800364e:	6078      	str	r0, [r7, #4]
 8003650:	6039      	str	r1, [r7, #0]
 8003652:	687b      	ldr	r3, [r7, #4]
 8003654:	f893 3020 	ldrb.w	r3, [r3, #32]
 8003658:	73fb      	strb	r3, [r7, #15]
 800365a:	7bfb      	ldrb	r3, [r7, #15]
 800365c:	2b01      	cmp	r3, #1
 800365e:	d002      	beq.n	8003666 <HAL_CAN_ActivateNotification+0x1e>
 8003660:	7bfb      	ldrb	r3, [r7, #15]
 8003662:	2b02      	cmp	r3, #2
 8003664:	d109      	bne.n	800367a <HAL_CAN_ActivateNotification+0x32>
 8003666:	687b      	ldr	r3, [r7, #4]
 8003668:	681b      	ldr	r3, [r3, #0]
 800366a:	6959      	ldr	r1, [r3, #20]
 800366c:	687b      	ldr	r3, [r7, #4]
 800366e:	681b      	ldr	r3, [r3, #0]
 8003670:	683a      	ldr	r2, [r7, #0]
 8003672:	430a      	orrs	r2, r1
 8003674:	615a      	str	r2, [r3, #20]
 8003676:	2300      	movs	r3, #0
 8003678:	e006      	b.n	8003688 <HAL_CAN_ActivateNotification+0x40>
 800367a:	687b      	ldr	r3, [r7, #4]
 800367c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800367e:	f443 2280 	orr.w	r2, r3, #262144	; 0x40000
 8003682:	687b      	ldr	r3, [r7, #4]
 8003684:	625a      	str	r2, [r3, #36]	; 0x24
 8003686:	2301      	movs	r3, #1
 8003688:	4618      	mov	r0, r3
 800368a:	3714      	adds	r7, #20
 800368c:	46bd      	mov	sp, r7
 800368e:	bc80      	pop	{r7}
 8003690:	4770      	bx	lr

08003692 <HAL_CAN_IRQHandler>:
 8003692:	b580      	push	{r7, lr}
 8003694:	b08a      	sub	sp, #40	; 0x28
 8003696:	af00      	add	r7, sp, #0
 8003698:	6078      	str	r0, [r7, #4]
 800369a:	2300      	movs	r3, #0
 800369c:	627b      	str	r3, [r7, #36]	; 0x24
 800369e:	687b      	ldr	r3, [r7, #4]
 80036a0:	681b      	ldr	r3, [r3, #0]
 80036a2:	695b      	ldr	r3, [r3, #20]
 80036a4:	623b      	str	r3, [r7, #32]
 80036a6:	687b      	ldr	r3, [r7, #4]
 80036a8:	681b      	ldr	r3, [r3, #0]
 80036aa:	685b      	ldr	r3, [r3, #4]
 80036ac:	61fb      	str	r3, [r7, #28]
 80036ae:	687b      	ldr	r3, [r7, #4]
 80036b0:	681b      	ldr	r3, [r3, #0]
 80036b2:	689b      	ldr	r3, [r3, #8]
 80036b4:	61bb      	str	r3, [r7, #24]
 80036b6:	687b      	ldr	r3, [r7, #4]
 80036b8:	681b      	ldr	r3, [r3, #0]
 80036ba:	68db      	ldr	r3, [r3, #12]
 80036bc:	617b      	str	r3, [r7, #20]
 80036be:	687b      	ldr	r3, [r7, #4]
 80036c0:	681b      	ldr	r3, [r3, #0]
 80036c2:	691b      	ldr	r3, [r3, #16]
 80036c4:	613b      	str	r3, [r7, #16]
 80036c6:	687b      	ldr	r3, [r7, #4]
 80036c8:	681b      	ldr	r3, [r3, #0]
 80036ca:	699b      	ldr	r3, [r3, #24]
 80036cc:	60fb      	str	r3, [r7, #12]
 80036ce:	6a3b      	ldr	r3, [r7, #32]
 80036d0:	f003 0301 	and.w	r3, r3, #1
 80036d4:	2b00      	cmp	r3, #0
 80036d6:	d07c      	beq.n	80037d2 <HAL_CAN_IRQHandler+0x140>
 80036d8:	69bb      	ldr	r3, [r7, #24]
 80036da:	f003 0301 	and.w	r3, r3, #1
 80036de:	2b00      	cmp	r3, #0
 80036e0:	d023      	beq.n	800372a <HAL_CAN_IRQHandler+0x98>
 80036e2:	687b      	ldr	r3, [r7, #4]
 80036e4:	681b      	ldr	r3, [r3, #0]
 80036e6:	2201      	movs	r2, #1
 80036e8:	609a      	str	r2, [r3, #8]
 80036ea:	69bb      	ldr	r3, [r7, #24]
 80036ec:	f003 0302 	and.w	r3, r3, #2
 80036f0:	2b00      	cmp	r3, #0
 80036f2:	d003      	beq.n	80036fc <HAL_CAN_IRQHandler+0x6a>
 80036f4:	6878      	ldr	r0, [r7, #4]
 80036f6:	f000 f983 	bl	8003a00 <HAL_CAN_TxMailbox0CompleteCallback>
 80036fa:	e016      	b.n	800372a <HAL_CAN_IRQHandler+0x98>
 80036fc:	69bb      	ldr	r3, [r7, #24]
 80036fe:	f003 0304 	and.w	r3, r3, #4
 8003702:	2b00      	cmp	r3, #0
 8003704:	d004      	beq.n	8003710 <HAL_CAN_IRQHandler+0x7e>
 8003706:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003708:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 800370c:	627b      	str	r3, [r7, #36]	; 0x24
 800370e:	e00c      	b.n	800372a <HAL_CAN_IRQHandler+0x98>
 8003710:	69bb      	ldr	r3, [r7, #24]
 8003712:	f003 0308 	and.w	r3, r3, #8
 8003716:	2b00      	cmp	r3, #0
 8003718:	d004      	beq.n	8003724 <HAL_CAN_IRQHandler+0x92>
 800371a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800371c:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8003720:	627b      	str	r3, [r7, #36]	; 0x24
 8003722:	e002      	b.n	800372a <HAL_CAN_IRQHandler+0x98>
 8003724:	6878      	ldr	r0, [r7, #4]
 8003726:	f000 f986 	bl	8003a36 <HAL_CAN_TxMailbox0AbortCallback>
 800372a:	69bb      	ldr	r3, [r7, #24]
 800372c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003730:	2b00      	cmp	r3, #0
 8003732:	d024      	beq.n	800377e <HAL_CAN_IRQHandler+0xec>
 8003734:	687b      	ldr	r3, [r7, #4]
 8003736:	681b      	ldr	r3, [r3, #0]
 8003738:	f44f 7280 	mov.w	r2, #256	; 0x100
 800373c:	609a      	str	r2, [r3, #8]
 800373e:	69bb      	ldr	r3, [r7, #24]
 8003740:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8003744:	2b00      	cmp	r3, #0
 8003746:	d003      	beq.n	8003750 <HAL_CAN_IRQHandler+0xbe>
 8003748:	6878      	ldr	r0, [r7, #4]
 800374a:	f000 f962 	bl	8003a12 <HAL_CAN_TxMailbox1CompleteCallback>
 800374e:	e016      	b.n	800377e <HAL_CAN_IRQHandler+0xec>
 8003750:	69bb      	ldr	r3, [r7, #24]
 8003752:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8003756:	2b00      	cmp	r3, #0
 8003758:	d004      	beq.n	8003764 <HAL_CAN_IRQHandler+0xd2>
 800375a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800375c:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8003760:	627b      	str	r3, [r7, #36]	; 0x24
 8003762:	e00c      	b.n	800377e <HAL_CAN_IRQHandler+0xec>
 8003764:	69bb      	ldr	r3, [r7, #24]
 8003766:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 800376a:	2b00      	cmp	r3, #0
 800376c:	d004      	beq.n	8003778 <HAL_CAN_IRQHandler+0xe6>
 800376e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003770:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8003774:	627b      	str	r3, [r7, #36]	; 0x24
 8003776:	e002      	b.n	800377e <HAL_CAN_IRQHandler+0xec>
 8003778:	6878      	ldr	r0, [r7, #4]
 800377a:	f000 f965 	bl	8003a48 <HAL_CAN_TxMailbox1AbortCallback>
 800377e:	69bb      	ldr	r3, [r7, #24]
 8003780:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8003784:	2b00      	cmp	r3, #0
 8003786:	d024      	beq.n	80037d2 <HAL_CAN_IRQHandler+0x140>
 8003788:	687b      	ldr	r3, [r7, #4]
 800378a:	681b      	ldr	r3, [r3, #0]
 800378c:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 8003790:	609a      	str	r2, [r3, #8]
 8003792:	69bb      	ldr	r3, [r7, #24]
 8003794:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003798:	2b00      	cmp	r3, #0
 800379a:	d003      	beq.n	80037a4 <HAL_CAN_IRQHandler+0x112>
 800379c:	6878      	ldr	r0, [r7, #4]
 800379e:	f000 f941 	bl	8003a24 <HAL_CAN_TxMailbox2CompleteCallback>
 80037a2:	e016      	b.n	80037d2 <HAL_CAN_IRQHandler+0x140>
 80037a4:	69bb      	ldr	r3, [r7, #24]
 80037a6:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 80037aa:	2b00      	cmp	r3, #0
 80037ac:	d004      	beq.n	80037b8 <HAL_CAN_IRQHandler+0x126>
 80037ae:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80037b0:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80037b4:	627b      	str	r3, [r7, #36]	; 0x24
 80037b6:	e00c      	b.n	80037d2 <HAL_CAN_IRQHandler+0x140>
 80037b8:	69bb      	ldr	r3, [r7, #24]
 80037ba:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 80037be:	2b00      	cmp	r3, #0
 80037c0:	d004      	beq.n	80037cc <HAL_CAN_IRQHandler+0x13a>
 80037c2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80037c4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80037c8:	627b      	str	r3, [r7, #36]	; 0x24
 80037ca:	e002      	b.n	80037d2 <HAL_CAN_IRQHandler+0x140>
 80037cc:	6878      	ldr	r0, [r7, #4]
 80037ce:	f000 f944 	bl	8003a5a <HAL_CAN_TxMailbox2AbortCallback>
 80037d2:	6a3b      	ldr	r3, [r7, #32]
 80037d4:	f003 0308 	and.w	r3, r3, #8
 80037d8:	2b00      	cmp	r3, #0
 80037da:	d00c      	beq.n	80037f6 <HAL_CAN_IRQHandler+0x164>
 80037dc:	697b      	ldr	r3, [r7, #20]
 80037de:	f003 0310 	and.w	r3, r3, #16
 80037e2:	2b00      	cmp	r3, #0
 80037e4:	d007      	beq.n	80037f6 <HAL_CAN_IRQHandler+0x164>
 80037e6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80037e8:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80037ec:	627b      	str	r3, [r7, #36]	; 0x24
 80037ee:	687b      	ldr	r3, [r7, #4]
 80037f0:	681b      	ldr	r3, [r3, #0]
 80037f2:	2210      	movs	r2, #16
 80037f4:	60da      	str	r2, [r3, #12]
 80037f6:	6a3b      	ldr	r3, [r7, #32]
 80037f8:	f003 0304 	and.w	r3, r3, #4
 80037fc:	2b00      	cmp	r3, #0
 80037fe:	d00b      	beq.n	8003818 <HAL_CAN_IRQHandler+0x186>
 8003800:	697b      	ldr	r3, [r7, #20]
 8003802:	f003 0308 	and.w	r3, r3, #8
 8003806:	2b00      	cmp	r3, #0
 8003808:	d006      	beq.n	8003818 <HAL_CAN_IRQHandler+0x186>
 800380a:	687b      	ldr	r3, [r7, #4]
 800380c:	681b      	ldr	r3, [r3, #0]
 800380e:	2208      	movs	r2, #8
 8003810:	60da      	str	r2, [r3, #12]
 8003812:	6878      	ldr	r0, [r7, #4]
 8003814:	f000 f92a 	bl	8003a6c <HAL_CAN_RxFifo0FullCallback>
 8003818:	6a3b      	ldr	r3, [r7, #32]
 800381a:	f003 0302 	and.w	r3, r3, #2
 800381e:	2b00      	cmp	r3, #0
 8003820:	d009      	beq.n	8003836 <HAL_CAN_IRQHandler+0x1a4>
 8003822:	687b      	ldr	r3, [r7, #4]
 8003824:	681b      	ldr	r3, [r3, #0]
 8003826:	68db      	ldr	r3, [r3, #12]
 8003828:	f003 0303 	and.w	r3, r3, #3
 800382c:	2b00      	cmp	r3, #0
 800382e:	d002      	beq.n	8003836 <HAL_CAN_IRQHandler+0x1a4>
 8003830:	6878      	ldr	r0, [r7, #4]
 8003832:	f7fd fd7d 	bl	8001330 <HAL_CAN_RxFifo0MsgPendingCallback>
 8003836:	6a3b      	ldr	r3, [r7, #32]
 8003838:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800383c:	2b00      	cmp	r3, #0
 800383e:	d00c      	beq.n	800385a <HAL_CAN_IRQHandler+0x1c8>
 8003840:	693b      	ldr	r3, [r7, #16]
 8003842:	f003 0310 	and.w	r3, r3, #16
 8003846:	2b00      	cmp	r3, #0
 8003848:	d007      	beq.n	800385a <HAL_CAN_IRQHandler+0x1c8>
 800384a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800384c:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8003850:	627b      	str	r3, [r7, #36]	; 0x24
 8003852:	687b      	ldr	r3, [r7, #4]
 8003854:	681b      	ldr	r3, [r3, #0]
 8003856:	2210      	movs	r2, #16
 8003858:	611a      	str	r2, [r3, #16]
 800385a:	6a3b      	ldr	r3, [r7, #32]
 800385c:	f003 0320 	and.w	r3, r3, #32
 8003860:	2b00      	cmp	r3, #0
 8003862:	d00b      	beq.n	800387c <HAL_CAN_IRQHandler+0x1ea>
 8003864:	693b      	ldr	r3, [r7, #16]
 8003866:	f003 0308 	and.w	r3, r3, #8
 800386a:	2b00      	cmp	r3, #0
 800386c:	d006      	beq.n	800387c <HAL_CAN_IRQHandler+0x1ea>
 800386e:	687b      	ldr	r3, [r7, #4]
 8003870:	681b      	ldr	r3, [r3, #0]
 8003872:	2208      	movs	r2, #8
 8003874:	611a      	str	r2, [r3, #16]
 8003876:	6878      	ldr	r0, [r7, #4]
 8003878:	f000 f901 	bl	8003a7e <HAL_CAN_RxFifo1FullCallback>
 800387c:	6a3b      	ldr	r3, [r7, #32]
 800387e:	f003 0310 	and.w	r3, r3, #16
 8003882:	2b00      	cmp	r3, #0
 8003884:	d009      	beq.n	800389a <HAL_CAN_IRQHandler+0x208>
 8003886:	687b      	ldr	r3, [r7, #4]
 8003888:	681b      	ldr	r3, [r3, #0]
 800388a:	691b      	ldr	r3, [r3, #16]
 800388c:	f003 0303 	and.w	r3, r3, #3
 8003890:	2b00      	cmp	r3, #0
 8003892:	d002      	beq.n	800389a <HAL_CAN_IRQHandler+0x208>
 8003894:	6878      	ldr	r0, [r7, #4]
 8003896:	f7fd fd57 	bl	8001348 <HAL_CAN_RxFifo1MsgPendingCallback>
 800389a:	6a3b      	ldr	r3, [r7, #32]
 800389c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80038a0:	2b00      	cmp	r3, #0
 80038a2:	d00b      	beq.n	80038bc <HAL_CAN_IRQHandler+0x22a>
 80038a4:	69fb      	ldr	r3, [r7, #28]
 80038a6:	f003 0310 	and.w	r3, r3, #16
 80038aa:	2b00      	cmp	r3, #0
 80038ac:	d006      	beq.n	80038bc <HAL_CAN_IRQHandler+0x22a>
 80038ae:	687b      	ldr	r3, [r7, #4]
 80038b0:	681b      	ldr	r3, [r3, #0]
 80038b2:	2210      	movs	r2, #16
 80038b4:	605a      	str	r2, [r3, #4]
 80038b6:	6878      	ldr	r0, [r7, #4]
 80038b8:	f000 f8ea 	bl	8003a90 <HAL_CAN_SleepCallback>
 80038bc:	6a3b      	ldr	r3, [r7, #32]
 80038be:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80038c2:	2b00      	cmp	r3, #0
 80038c4:	d00b      	beq.n	80038de <HAL_CAN_IRQHandler+0x24c>
 80038c6:	69fb      	ldr	r3, [r7, #28]
 80038c8:	f003 0308 	and.w	r3, r3, #8
 80038cc:	2b00      	cmp	r3, #0
 80038ce:	d006      	beq.n	80038de <HAL_CAN_IRQHandler+0x24c>
 80038d0:	687b      	ldr	r3, [r7, #4]
 80038d2:	681b      	ldr	r3, [r3, #0]
 80038d4:	2208      	movs	r2, #8
 80038d6:	605a      	str	r2, [r3, #4]
 80038d8:	6878      	ldr	r0, [r7, #4]
 80038da:	f000 f8e2 	bl	8003aa2 <HAL_CAN_WakeUpFromRxMsgCallback>
 80038de:	6a3b      	ldr	r3, [r7, #32]
 80038e0:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 80038e4:	2b00      	cmp	r3, #0
 80038e6:	d07b      	beq.n	80039e0 <HAL_CAN_IRQHandler+0x34e>
 80038e8:	69fb      	ldr	r3, [r7, #28]
 80038ea:	f003 0304 	and.w	r3, r3, #4
 80038ee:	2b00      	cmp	r3, #0
 80038f0:	d072      	beq.n	80039d8 <HAL_CAN_IRQHandler+0x346>
 80038f2:	6a3b      	ldr	r3, [r7, #32]
 80038f4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80038f8:	2b00      	cmp	r3, #0
 80038fa:	d008      	beq.n	800390e <HAL_CAN_IRQHandler+0x27c>
 80038fc:	68fb      	ldr	r3, [r7, #12]
 80038fe:	f003 0301 	and.w	r3, r3, #1
 8003902:	2b00      	cmp	r3, #0
 8003904:	d003      	beq.n	800390e <HAL_CAN_IRQHandler+0x27c>
 8003906:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003908:	f043 0301 	orr.w	r3, r3, #1
 800390c:	627b      	str	r3, [r7, #36]	; 0x24
 800390e:	6a3b      	ldr	r3, [r7, #32]
 8003910:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8003914:	2b00      	cmp	r3, #0
 8003916:	d008      	beq.n	800392a <HAL_CAN_IRQHandler+0x298>
 8003918:	68fb      	ldr	r3, [r7, #12]
 800391a:	f003 0302 	and.w	r3, r3, #2
 800391e:	2b00      	cmp	r3, #0
 8003920:	d003      	beq.n	800392a <HAL_CAN_IRQHandler+0x298>
 8003922:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003924:	f043 0302 	orr.w	r3, r3, #2
 8003928:	627b      	str	r3, [r7, #36]	; 0x24
 800392a:	6a3b      	ldr	r3, [r7, #32]
 800392c:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8003930:	2b00      	cmp	r3, #0
 8003932:	d008      	beq.n	8003946 <HAL_CAN_IRQHandler+0x2b4>
 8003934:	68fb      	ldr	r3, [r7, #12]
 8003936:	f003 0304 	and.w	r3, r3, #4
 800393a:	2b00      	cmp	r3, #0
 800393c:	d003      	beq.n	8003946 <HAL_CAN_IRQHandler+0x2b4>
 800393e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003940:	f043 0304 	orr.w	r3, r3, #4
 8003944:	627b      	str	r3, [r7, #36]	; 0x24
 8003946:	6a3b      	ldr	r3, [r7, #32]
 8003948:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 800394c:	2b00      	cmp	r3, #0
 800394e:	d043      	beq.n	80039d8 <HAL_CAN_IRQHandler+0x346>
 8003950:	68fb      	ldr	r3, [r7, #12]
 8003952:	f003 0370 	and.w	r3, r3, #112	; 0x70
 8003956:	2b00      	cmp	r3, #0
 8003958:	d03e      	beq.n	80039d8 <HAL_CAN_IRQHandler+0x346>
 800395a:	68fb      	ldr	r3, [r7, #12]
 800395c:	f003 0370 	and.w	r3, r3, #112	; 0x70
 8003960:	2b60      	cmp	r3, #96	; 0x60
 8003962:	d02b      	beq.n	80039bc <HAL_CAN_IRQHandler+0x32a>
 8003964:	2b60      	cmp	r3, #96	; 0x60
 8003966:	d82e      	bhi.n	80039c6 <HAL_CAN_IRQHandler+0x334>
 8003968:	2b50      	cmp	r3, #80	; 0x50
 800396a:	d022      	beq.n	80039b2 <HAL_CAN_IRQHandler+0x320>
 800396c:	2b50      	cmp	r3, #80	; 0x50
 800396e:	d82a      	bhi.n	80039c6 <HAL_CAN_IRQHandler+0x334>
 8003970:	2b40      	cmp	r3, #64	; 0x40
 8003972:	d019      	beq.n	80039a8 <HAL_CAN_IRQHandler+0x316>
 8003974:	2b40      	cmp	r3, #64	; 0x40
 8003976:	d826      	bhi.n	80039c6 <HAL_CAN_IRQHandler+0x334>
 8003978:	2b30      	cmp	r3, #48	; 0x30
 800397a:	d010      	beq.n	800399e <HAL_CAN_IRQHandler+0x30c>
 800397c:	2b30      	cmp	r3, #48	; 0x30
 800397e:	d822      	bhi.n	80039c6 <HAL_CAN_IRQHandler+0x334>
 8003980:	2b10      	cmp	r3, #16
 8003982:	d002      	beq.n	800398a <HAL_CAN_IRQHandler+0x2f8>
 8003984:	2b20      	cmp	r3, #32
 8003986:	d005      	beq.n	8003994 <HAL_CAN_IRQHandler+0x302>
 8003988:	e01d      	b.n	80039c6 <HAL_CAN_IRQHandler+0x334>
 800398a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800398c:	f043 0308 	orr.w	r3, r3, #8
 8003990:	627b      	str	r3, [r7, #36]	; 0x24
 8003992:	e019      	b.n	80039c8 <HAL_CAN_IRQHandler+0x336>
 8003994:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003996:	f043 0310 	orr.w	r3, r3, #16
 800399a:	627b      	str	r3, [r7, #36]	; 0x24
 800399c:	e014      	b.n	80039c8 <HAL_CAN_IRQHandler+0x336>
 800399e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80039a0:	f043 0320 	orr.w	r3, r3, #32
 80039a4:	627b      	str	r3, [r7, #36]	; 0x24
 80039a6:	e00f      	b.n	80039c8 <HAL_CAN_IRQHandler+0x336>
 80039a8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80039aa:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80039ae:	627b      	str	r3, [r7, #36]	; 0x24
 80039b0:	e00a      	b.n	80039c8 <HAL_CAN_IRQHandler+0x336>
 80039b2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80039b4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80039b8:	627b      	str	r3, [r7, #36]	; 0x24
 80039ba:	e005      	b.n	80039c8 <HAL_CAN_IRQHandler+0x336>
 80039bc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80039be:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80039c2:	627b      	str	r3, [r7, #36]	; 0x24
 80039c4:	e000      	b.n	80039c8 <HAL_CAN_IRQHandler+0x336>
 80039c6:	bf00      	nop
 80039c8:	687b      	ldr	r3, [r7, #4]
 80039ca:	681b      	ldr	r3, [r3, #0]
 80039cc:	699a      	ldr	r2, [r3, #24]
 80039ce:	687b      	ldr	r3, [r7, #4]
 80039d0:	681b      	ldr	r3, [r3, #0]
 80039d2:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 80039d6:	619a      	str	r2, [r3, #24]
 80039d8:	687b      	ldr	r3, [r7, #4]
 80039da:	681b      	ldr	r3, [r3, #0]
 80039dc:	2204      	movs	r2, #4
 80039de:	605a      	str	r2, [r3, #4]
 80039e0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80039e2:	2b00      	cmp	r3, #0
 80039e4:	d008      	beq.n	80039f8 <HAL_CAN_IRQHandler+0x366>
 80039e6:	687b      	ldr	r3, [r7, #4]
 80039e8:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80039ea:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80039ec:	431a      	orrs	r2, r3
 80039ee:	687b      	ldr	r3, [r7, #4]
 80039f0:	625a      	str	r2, [r3, #36]	; 0x24
 80039f2:	6878      	ldr	r0, [r7, #4]
 80039f4:	f7fd fcb4 	bl	8001360 <HAL_CAN_ErrorCallback>
 80039f8:	bf00      	nop
 80039fa:	3728      	adds	r7, #40	; 0x28
 80039fc:	46bd      	mov	sp, r7
 80039fe:	bd80      	pop	{r7, pc}

08003a00 <HAL_CAN_TxMailbox0CompleteCallback>:
 8003a00:	b480      	push	{r7}
 8003a02:	b083      	sub	sp, #12
 8003a04:	af00      	add	r7, sp, #0
 8003a06:	6078      	str	r0, [r7, #4]
 8003a08:	bf00      	nop
 8003a0a:	370c      	adds	r7, #12
 8003a0c:	46bd      	mov	sp, r7
 8003a0e:	bc80      	pop	{r7}
 8003a10:	4770      	bx	lr

08003a12 <HAL_CAN_TxMailbox1CompleteCallback>:
 8003a12:	b480      	push	{r7}
 8003a14:	b083      	sub	sp, #12
 8003a16:	af00      	add	r7, sp, #0
 8003a18:	6078      	str	r0, [r7, #4]
 8003a1a:	bf00      	nop
 8003a1c:	370c      	adds	r7, #12
 8003a1e:	46bd      	mov	sp, r7
 8003a20:	bc80      	pop	{r7}
 8003a22:	4770      	bx	lr

08003a24 <HAL_CAN_TxMailbox2CompleteCallback>:
 8003a24:	b480      	push	{r7}
 8003a26:	b083      	sub	sp, #12
 8003a28:	af00      	add	r7, sp, #0
 8003a2a:	6078      	str	r0, [r7, #4]
 8003a2c:	bf00      	nop
 8003a2e:	370c      	adds	r7, #12
 8003a30:	46bd      	mov	sp, r7
 8003a32:	bc80      	pop	{r7}
 8003a34:	4770      	bx	lr

08003a36 <HAL_CAN_TxMailbox0AbortCallback>:
 8003a36:	b480      	push	{r7}
 8003a38:	b083      	sub	sp, #12
 8003a3a:	af00      	add	r7, sp, #0
 8003a3c:	6078      	str	r0, [r7, #4]
 8003a3e:	bf00      	nop
 8003a40:	370c      	adds	r7, #12
 8003a42:	46bd      	mov	sp, r7
 8003a44:	bc80      	pop	{r7}
 8003a46:	4770      	bx	lr

08003a48 <HAL_CAN_TxMailbox1AbortCallback>:
 8003a48:	b480      	push	{r7}
 8003a4a:	b083      	sub	sp, #12
 8003a4c:	af00      	add	r7, sp, #0
 8003a4e:	6078      	str	r0, [r7, #4]
 8003a50:	bf00      	nop
 8003a52:	370c      	adds	r7, #12
 8003a54:	46bd      	mov	sp, r7
 8003a56:	bc80      	pop	{r7}
 8003a58:	4770      	bx	lr

08003a5a <HAL_CAN_TxMailbox2AbortCallback>:
 8003a5a:	b480      	push	{r7}
 8003a5c:	b083      	sub	sp, #12
 8003a5e:	af00      	add	r7, sp, #0
 8003a60:	6078      	str	r0, [r7, #4]
 8003a62:	bf00      	nop
 8003a64:	370c      	adds	r7, #12
 8003a66:	46bd      	mov	sp, r7
 8003a68:	bc80      	pop	{r7}
 8003a6a:	4770      	bx	lr

08003a6c <HAL_CAN_RxFifo0FullCallback>:
 8003a6c:	b480      	push	{r7}
 8003a6e:	b083      	sub	sp, #12
 8003a70:	af00      	add	r7, sp, #0
 8003a72:	6078      	str	r0, [r7, #4]
 8003a74:	bf00      	nop
 8003a76:	370c      	adds	r7, #12
 8003a78:	46bd      	mov	sp, r7
 8003a7a:	bc80      	pop	{r7}
 8003a7c:	4770      	bx	lr

08003a7e <HAL_CAN_RxFifo1FullCallback>:
 8003a7e:	b480      	push	{r7}
 8003a80:	b083      	sub	sp, #12
 8003a82:	af00      	add	r7, sp, #0
 8003a84:	6078      	str	r0, [r7, #4]
 8003a86:	bf00      	nop
 8003a88:	370c      	adds	r7, #12
 8003a8a:	46bd      	mov	sp, r7
 8003a8c:	bc80      	pop	{r7}
 8003a8e:	4770      	bx	lr

08003a90 <HAL_CAN_SleepCallback>:
 8003a90:	b480      	push	{r7}
 8003a92:	b083      	sub	sp, #12
 8003a94:	af00      	add	r7, sp, #0
 8003a96:	6078      	str	r0, [r7, #4]
 8003a98:	bf00      	nop
 8003a9a:	370c      	adds	r7, #12
 8003a9c:	46bd      	mov	sp, r7
 8003a9e:	bc80      	pop	{r7}
 8003aa0:	4770      	bx	lr

08003aa2 <HAL_CAN_WakeUpFromRxMsgCallback>:
 8003aa2:	b480      	push	{r7}
 8003aa4:	b083      	sub	sp, #12
 8003aa6:	af00      	add	r7, sp, #0
 8003aa8:	6078      	str	r0, [r7, #4]
 8003aaa:	bf00      	nop
 8003aac:	370c      	adds	r7, #12
 8003aae:	46bd      	mov	sp, r7
 8003ab0:	bc80      	pop	{r7}
 8003ab2:	4770      	bx	lr

08003ab4 <__NVIC_SetPriorityGrouping>:
 8003ab4:	b480      	push	{r7}
 8003ab6:	b085      	sub	sp, #20
 8003ab8:	af00      	add	r7, sp, #0
 8003aba:	6078      	str	r0, [r7, #4]
 8003abc:	687b      	ldr	r3, [r7, #4]
 8003abe:	f003 0307 	and.w	r3, r3, #7
 8003ac2:	60fb      	str	r3, [r7, #12]
 8003ac4:	4b0c      	ldr	r3, [pc, #48]	; (8003af8 <__NVIC_SetPriorityGrouping+0x44>)
 8003ac6:	68db      	ldr	r3, [r3, #12]
 8003ac8:	60bb      	str	r3, [r7, #8]
 8003aca:	68ba      	ldr	r2, [r7, #8]
 8003acc:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8003ad0:	4013      	ands	r3, r2
 8003ad2:	60bb      	str	r3, [r7, #8]
 8003ad4:	68fb      	ldr	r3, [r7, #12]
 8003ad6:	021a      	lsls	r2, r3, #8
 8003ad8:	68bb      	ldr	r3, [r7, #8]
 8003ada:	4313      	orrs	r3, r2
 8003adc:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8003ae0:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8003ae4:	60bb      	str	r3, [r7, #8]
 8003ae6:	4a04      	ldr	r2, [pc, #16]	; (8003af8 <__NVIC_SetPriorityGrouping+0x44>)
 8003ae8:	68bb      	ldr	r3, [r7, #8]
 8003aea:	60d3      	str	r3, [r2, #12]
 8003aec:	bf00      	nop
 8003aee:	3714      	adds	r7, #20
 8003af0:	46bd      	mov	sp, r7
 8003af2:	bc80      	pop	{r7}
 8003af4:	4770      	bx	lr
 8003af6:	bf00      	nop
 8003af8:	e000ed00 	.word	0xe000ed00

08003afc <__NVIC_GetPriorityGrouping>:
 8003afc:	b480      	push	{r7}
 8003afe:	af00      	add	r7, sp, #0
 8003b00:	4b04      	ldr	r3, [pc, #16]	; (8003b14 <__NVIC_GetPriorityGrouping+0x18>)
 8003b02:	68db      	ldr	r3, [r3, #12]
 8003b04:	0a1b      	lsrs	r3, r3, #8
 8003b06:	f003 0307 	and.w	r3, r3, #7
 8003b0a:	4618      	mov	r0, r3
 8003b0c:	46bd      	mov	sp, r7
 8003b0e:	bc80      	pop	{r7}
 8003b10:	4770      	bx	lr
 8003b12:	bf00      	nop
 8003b14:	e000ed00 	.word	0xe000ed00

08003b18 <__NVIC_EnableIRQ>:
 8003b18:	b480      	push	{r7}
 8003b1a:	b083      	sub	sp, #12
 8003b1c:	af00      	add	r7, sp, #0
 8003b1e:	4603      	mov	r3, r0
 8003b20:	71fb      	strb	r3, [r7, #7]
 8003b22:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003b26:	2b00      	cmp	r3, #0
 8003b28:	db0b      	blt.n	8003b42 <__NVIC_EnableIRQ+0x2a>
 8003b2a:	79fb      	ldrb	r3, [r7, #7]
 8003b2c:	f003 021f 	and.w	r2, r3, #31
 8003b30:	4906      	ldr	r1, [pc, #24]	; (8003b4c <__NVIC_EnableIRQ+0x34>)
 8003b32:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003b36:	095b      	lsrs	r3, r3, #5
 8003b38:	2001      	movs	r0, #1
 8003b3a:	fa00 f202 	lsl.w	r2, r0, r2
 8003b3e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8003b42:	bf00      	nop
 8003b44:	370c      	adds	r7, #12
 8003b46:	46bd      	mov	sp, r7
 8003b48:	bc80      	pop	{r7}
 8003b4a:	4770      	bx	lr
 8003b4c:	e000e100 	.word	0xe000e100

08003b50 <__NVIC_SetPriority>:
 8003b50:	b480      	push	{r7}
 8003b52:	b083      	sub	sp, #12
 8003b54:	af00      	add	r7, sp, #0
 8003b56:	4603      	mov	r3, r0
 8003b58:	6039      	str	r1, [r7, #0]
 8003b5a:	71fb      	strb	r3, [r7, #7]
 8003b5c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003b60:	2b00      	cmp	r3, #0
 8003b62:	db0a      	blt.n	8003b7a <__NVIC_SetPriority+0x2a>
 8003b64:	683b      	ldr	r3, [r7, #0]
 8003b66:	b2da      	uxtb	r2, r3
 8003b68:	490c      	ldr	r1, [pc, #48]	; (8003b9c <__NVIC_SetPriority+0x4c>)
 8003b6a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003b6e:	0112      	lsls	r2, r2, #4
 8003b70:	b2d2      	uxtb	r2, r2
 8003b72:	440b      	add	r3, r1
 8003b74:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8003b78:	e00a      	b.n	8003b90 <__NVIC_SetPriority+0x40>
 8003b7a:	683b      	ldr	r3, [r7, #0]
 8003b7c:	b2da      	uxtb	r2, r3
 8003b7e:	4908      	ldr	r1, [pc, #32]	; (8003ba0 <__NVIC_SetPriority+0x50>)
 8003b80:	79fb      	ldrb	r3, [r7, #7]
 8003b82:	f003 030f 	and.w	r3, r3, #15
 8003b86:	3b04      	subs	r3, #4
 8003b88:	0112      	lsls	r2, r2, #4
 8003b8a:	b2d2      	uxtb	r2, r2
 8003b8c:	440b      	add	r3, r1
 8003b8e:	761a      	strb	r2, [r3, #24]
 8003b90:	bf00      	nop
 8003b92:	370c      	adds	r7, #12
 8003b94:	46bd      	mov	sp, r7
 8003b96:	bc80      	pop	{r7}
 8003b98:	4770      	bx	lr
 8003b9a:	bf00      	nop
 8003b9c:	e000e100 	.word	0xe000e100
 8003ba0:	e000ed00 	.word	0xe000ed00

08003ba4 <NVIC_EncodePriority>:
 8003ba4:	b480      	push	{r7}
 8003ba6:	b089      	sub	sp, #36	; 0x24
 8003ba8:	af00      	add	r7, sp, #0
 8003baa:	60f8      	str	r0, [r7, #12]
 8003bac:	60b9      	str	r1, [r7, #8]
 8003bae:	607a      	str	r2, [r7, #4]
 8003bb0:	68fb      	ldr	r3, [r7, #12]
 8003bb2:	f003 0307 	and.w	r3, r3, #7
 8003bb6:	61fb      	str	r3, [r7, #28]
 8003bb8:	69fb      	ldr	r3, [r7, #28]
 8003bba:	f1c3 0307 	rsb	r3, r3, #7
 8003bbe:	2b04      	cmp	r3, #4
 8003bc0:	bf28      	it	cs
 8003bc2:	2304      	movcs	r3, #4
 8003bc4:	61bb      	str	r3, [r7, #24]
 8003bc6:	69fb      	ldr	r3, [r7, #28]
 8003bc8:	3304      	adds	r3, #4
 8003bca:	2b06      	cmp	r3, #6
 8003bcc:	d902      	bls.n	8003bd4 <NVIC_EncodePriority+0x30>
 8003bce:	69fb      	ldr	r3, [r7, #28]
 8003bd0:	3b03      	subs	r3, #3
 8003bd2:	e000      	b.n	8003bd6 <NVIC_EncodePriority+0x32>
 8003bd4:	2300      	movs	r3, #0
 8003bd6:	617b      	str	r3, [r7, #20]
 8003bd8:	f04f 32ff 	mov.w	r2, #4294967295
 8003bdc:	69bb      	ldr	r3, [r7, #24]
 8003bde:	fa02 f303 	lsl.w	r3, r2, r3
 8003be2:	43da      	mvns	r2, r3
 8003be4:	68bb      	ldr	r3, [r7, #8]
 8003be6:	401a      	ands	r2, r3
 8003be8:	697b      	ldr	r3, [r7, #20]
 8003bea:	409a      	lsls	r2, r3
 8003bec:	f04f 31ff 	mov.w	r1, #4294967295
 8003bf0:	697b      	ldr	r3, [r7, #20]
 8003bf2:	fa01 f303 	lsl.w	r3, r1, r3
 8003bf6:	43d9      	mvns	r1, r3
 8003bf8:	687b      	ldr	r3, [r7, #4]
 8003bfa:	400b      	ands	r3, r1
 8003bfc:	4313      	orrs	r3, r2
 8003bfe:	4618      	mov	r0, r3
 8003c00:	3724      	adds	r7, #36	; 0x24
 8003c02:	46bd      	mov	sp, r7
 8003c04:	bc80      	pop	{r7}
 8003c06:	4770      	bx	lr

08003c08 <SysTick_Config>:
 8003c08:	b580      	push	{r7, lr}
 8003c0a:	b082      	sub	sp, #8
 8003c0c:	af00      	add	r7, sp, #0
 8003c0e:	6078      	str	r0, [r7, #4]
 8003c10:	687b      	ldr	r3, [r7, #4]
 8003c12:	3b01      	subs	r3, #1
 8003c14:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8003c18:	d301      	bcc.n	8003c1e <SysTick_Config+0x16>
 8003c1a:	2301      	movs	r3, #1
 8003c1c:	e00f      	b.n	8003c3e <SysTick_Config+0x36>
 8003c1e:	4a0a      	ldr	r2, [pc, #40]	; (8003c48 <SysTick_Config+0x40>)
 8003c20:	687b      	ldr	r3, [r7, #4]
 8003c22:	3b01      	subs	r3, #1
 8003c24:	6053      	str	r3, [r2, #4]
 8003c26:	210f      	movs	r1, #15
 8003c28:	f04f 30ff 	mov.w	r0, #4294967295
 8003c2c:	f7ff ff90 	bl	8003b50 <__NVIC_SetPriority>
 8003c30:	4b05      	ldr	r3, [pc, #20]	; (8003c48 <SysTick_Config+0x40>)
 8003c32:	2200      	movs	r2, #0
 8003c34:	609a      	str	r2, [r3, #8]
 8003c36:	4b04      	ldr	r3, [pc, #16]	; (8003c48 <SysTick_Config+0x40>)
 8003c38:	2207      	movs	r2, #7
 8003c3a:	601a      	str	r2, [r3, #0]
 8003c3c:	2300      	movs	r3, #0
 8003c3e:	4618      	mov	r0, r3
 8003c40:	3708      	adds	r7, #8
 8003c42:	46bd      	mov	sp, r7
 8003c44:	bd80      	pop	{r7, pc}
 8003c46:	bf00      	nop
 8003c48:	e000e010 	.word	0xe000e010

08003c4c <HAL_NVIC_SetPriorityGrouping>:
 8003c4c:	b580      	push	{r7, lr}
 8003c4e:	b082      	sub	sp, #8
 8003c50:	af00      	add	r7, sp, #0
 8003c52:	6078      	str	r0, [r7, #4]
 8003c54:	6878      	ldr	r0, [r7, #4]
 8003c56:	f7ff ff2d 	bl	8003ab4 <__NVIC_SetPriorityGrouping>
 8003c5a:	bf00      	nop
 8003c5c:	3708      	adds	r7, #8
 8003c5e:	46bd      	mov	sp, r7
 8003c60:	bd80      	pop	{r7, pc}

08003c62 <HAL_NVIC_SetPriority>:
 8003c62:	b580      	push	{r7, lr}
 8003c64:	b086      	sub	sp, #24
 8003c66:	af00      	add	r7, sp, #0
 8003c68:	4603      	mov	r3, r0
 8003c6a:	60b9      	str	r1, [r7, #8]
 8003c6c:	607a      	str	r2, [r7, #4]
 8003c6e:	73fb      	strb	r3, [r7, #15]
 8003c70:	2300      	movs	r3, #0
 8003c72:	617b      	str	r3, [r7, #20]
 8003c74:	f7ff ff42 	bl	8003afc <__NVIC_GetPriorityGrouping>
 8003c78:	6178      	str	r0, [r7, #20]
 8003c7a:	687a      	ldr	r2, [r7, #4]
 8003c7c:	68b9      	ldr	r1, [r7, #8]
 8003c7e:	6978      	ldr	r0, [r7, #20]
 8003c80:	f7ff ff90 	bl	8003ba4 <NVIC_EncodePriority>
 8003c84:	4602      	mov	r2, r0
 8003c86:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8003c8a:	4611      	mov	r1, r2
 8003c8c:	4618      	mov	r0, r3
 8003c8e:	f7ff ff5f 	bl	8003b50 <__NVIC_SetPriority>
 8003c92:	bf00      	nop
 8003c94:	3718      	adds	r7, #24
 8003c96:	46bd      	mov	sp, r7
 8003c98:	bd80      	pop	{r7, pc}

08003c9a <HAL_NVIC_EnableIRQ>:
 8003c9a:	b580      	push	{r7, lr}
 8003c9c:	b082      	sub	sp, #8
 8003c9e:	af00      	add	r7, sp, #0
 8003ca0:	4603      	mov	r3, r0
 8003ca2:	71fb      	strb	r3, [r7, #7]
 8003ca4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003ca8:	4618      	mov	r0, r3
 8003caa:	f7ff ff35 	bl	8003b18 <__NVIC_EnableIRQ>
 8003cae:	bf00      	nop
 8003cb0:	3708      	adds	r7, #8
 8003cb2:	46bd      	mov	sp, r7
 8003cb4:	bd80      	pop	{r7, pc}

08003cb6 <HAL_SYSTICK_Config>:
 8003cb6:	b580      	push	{r7, lr}
 8003cb8:	b082      	sub	sp, #8
 8003cba:	af00      	add	r7, sp, #0
 8003cbc:	6078      	str	r0, [r7, #4]
 8003cbe:	6878      	ldr	r0, [r7, #4]
 8003cc0:	f7ff ffa2 	bl	8003c08 <SysTick_Config>
 8003cc4:	4603      	mov	r3, r0
 8003cc6:	4618      	mov	r0, r3
 8003cc8:	3708      	adds	r7, #8
 8003cca:	46bd      	mov	sp, r7
 8003ccc:	bd80      	pop	{r7, pc}
	...

08003cd0 <HAL_DMA_Init>:
 8003cd0:	b480      	push	{r7}
 8003cd2:	b085      	sub	sp, #20
 8003cd4:	af00      	add	r7, sp, #0
 8003cd6:	6078      	str	r0, [r7, #4]
 8003cd8:	2300      	movs	r3, #0
 8003cda:	60fb      	str	r3, [r7, #12]
 8003cdc:	687b      	ldr	r3, [r7, #4]
 8003cde:	2b00      	cmp	r3, #0
 8003ce0:	d101      	bne.n	8003ce6 <HAL_DMA_Init+0x16>
 8003ce2:	2301      	movs	r3, #1
 8003ce4:	e043      	b.n	8003d6e <HAL_DMA_Init+0x9e>
 8003ce6:	687b      	ldr	r3, [r7, #4]
 8003ce8:	681b      	ldr	r3, [r3, #0]
 8003cea:	461a      	mov	r2, r3
 8003cec:	4b22      	ldr	r3, [pc, #136]	; (8003d78 <HAL_DMA_Init+0xa8>)
 8003cee:	4413      	add	r3, r2
 8003cf0:	4a22      	ldr	r2, [pc, #136]	; (8003d7c <HAL_DMA_Init+0xac>)
 8003cf2:	fba2 2303 	umull	r2, r3, r2, r3
 8003cf6:	091b      	lsrs	r3, r3, #4
 8003cf8:	009a      	lsls	r2, r3, #2
 8003cfa:	687b      	ldr	r3, [r7, #4]
 8003cfc:	641a      	str	r2, [r3, #64]	; 0x40
 8003cfe:	687b      	ldr	r3, [r7, #4]
 8003d00:	4a1f      	ldr	r2, [pc, #124]	; (8003d80 <HAL_DMA_Init+0xb0>)
 8003d02:	63da      	str	r2, [r3, #60]	; 0x3c
 8003d04:	687b      	ldr	r3, [r7, #4]
 8003d06:	2202      	movs	r2, #2
 8003d08:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8003d0c:	687b      	ldr	r3, [r7, #4]
 8003d0e:	681b      	ldr	r3, [r3, #0]
 8003d10:	681b      	ldr	r3, [r3, #0]
 8003d12:	60fb      	str	r3, [r7, #12]
 8003d14:	68fb      	ldr	r3, [r7, #12]
 8003d16:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8003d1a:	f023 0330 	bic.w	r3, r3, #48	; 0x30
 8003d1e:	60fb      	str	r3, [r7, #12]
 8003d20:	687b      	ldr	r3, [r7, #4]
 8003d22:	685a      	ldr	r2, [r3, #4]
 8003d24:	687b      	ldr	r3, [r7, #4]
 8003d26:	689b      	ldr	r3, [r3, #8]
 8003d28:	431a      	orrs	r2, r3
 8003d2a:	687b      	ldr	r3, [r7, #4]
 8003d2c:	68db      	ldr	r3, [r3, #12]
 8003d2e:	431a      	orrs	r2, r3
 8003d30:	687b      	ldr	r3, [r7, #4]
 8003d32:	691b      	ldr	r3, [r3, #16]
 8003d34:	431a      	orrs	r2, r3
 8003d36:	687b      	ldr	r3, [r7, #4]
 8003d38:	695b      	ldr	r3, [r3, #20]
 8003d3a:	431a      	orrs	r2, r3
 8003d3c:	687b      	ldr	r3, [r7, #4]
 8003d3e:	699b      	ldr	r3, [r3, #24]
 8003d40:	431a      	orrs	r2, r3
 8003d42:	687b      	ldr	r3, [r7, #4]
 8003d44:	69db      	ldr	r3, [r3, #28]
 8003d46:	4313      	orrs	r3, r2
 8003d48:	68fa      	ldr	r2, [r7, #12]
 8003d4a:	4313      	orrs	r3, r2
 8003d4c:	60fb      	str	r3, [r7, #12]
 8003d4e:	687b      	ldr	r3, [r7, #4]
 8003d50:	681b      	ldr	r3, [r3, #0]
 8003d52:	68fa      	ldr	r2, [r7, #12]
 8003d54:	601a      	str	r2, [r3, #0]
 8003d56:	687b      	ldr	r3, [r7, #4]
 8003d58:	2200      	movs	r2, #0
 8003d5a:	639a      	str	r2, [r3, #56]	; 0x38
 8003d5c:	687b      	ldr	r3, [r7, #4]
 8003d5e:	2201      	movs	r2, #1
 8003d60:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8003d64:	687b      	ldr	r3, [r7, #4]
 8003d66:	2200      	movs	r2, #0
 8003d68:	f883 2020 	strb.w	r2, [r3, #32]
 8003d6c:	2300      	movs	r3, #0
 8003d6e:	4618      	mov	r0, r3
 8003d70:	3714      	adds	r7, #20
 8003d72:	46bd      	mov	sp, r7
 8003d74:	bc80      	pop	{r7}
 8003d76:	4770      	bx	lr
 8003d78:	bffdfff8 	.word	0xbffdfff8
 8003d7c:	cccccccd 	.word	0xcccccccd
 8003d80:	40020000 	.word	0x40020000

08003d84 <HAL_DMA_Start_IT>:
 8003d84:	b580      	push	{r7, lr}
 8003d86:	b086      	sub	sp, #24
 8003d88:	af00      	add	r7, sp, #0
 8003d8a:	60f8      	str	r0, [r7, #12]
 8003d8c:	60b9      	str	r1, [r7, #8]
 8003d8e:	607a      	str	r2, [r7, #4]
 8003d90:	603b      	str	r3, [r7, #0]
 8003d92:	2300      	movs	r3, #0
 8003d94:	75fb      	strb	r3, [r7, #23]
 8003d96:	68fb      	ldr	r3, [r7, #12]
 8003d98:	f893 3020 	ldrb.w	r3, [r3, #32]
 8003d9c:	2b01      	cmp	r3, #1
 8003d9e:	d101      	bne.n	8003da4 <HAL_DMA_Start_IT+0x20>
 8003da0:	2302      	movs	r3, #2
 8003da2:	e04b      	b.n	8003e3c <HAL_DMA_Start_IT+0xb8>
 8003da4:	68fb      	ldr	r3, [r7, #12]
 8003da6:	2201      	movs	r2, #1
 8003da8:	f883 2020 	strb.w	r2, [r3, #32]
 8003dac:	68fb      	ldr	r3, [r7, #12]
 8003dae:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 8003db2:	b2db      	uxtb	r3, r3
 8003db4:	2b01      	cmp	r3, #1
 8003db6:	d13a      	bne.n	8003e2e <HAL_DMA_Start_IT+0xaa>
 8003db8:	68fb      	ldr	r3, [r7, #12]
 8003dba:	2202      	movs	r2, #2
 8003dbc:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8003dc0:	68fb      	ldr	r3, [r7, #12]
 8003dc2:	2200      	movs	r2, #0
 8003dc4:	639a      	str	r2, [r3, #56]	; 0x38
 8003dc6:	68fb      	ldr	r3, [r7, #12]
 8003dc8:	681b      	ldr	r3, [r3, #0]
 8003dca:	681a      	ldr	r2, [r3, #0]
 8003dcc:	68fb      	ldr	r3, [r7, #12]
 8003dce:	681b      	ldr	r3, [r3, #0]
 8003dd0:	f022 0201 	bic.w	r2, r2, #1
 8003dd4:	601a      	str	r2, [r3, #0]
 8003dd6:	683b      	ldr	r3, [r7, #0]
 8003dd8:	687a      	ldr	r2, [r7, #4]
 8003dda:	68b9      	ldr	r1, [r7, #8]
 8003ddc:	68f8      	ldr	r0, [r7, #12]
 8003dde:	f000 f937 	bl	8004050 <DMA_SetConfig>
 8003de2:	68fb      	ldr	r3, [r7, #12]
 8003de4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003de6:	2b00      	cmp	r3, #0
 8003de8:	d008      	beq.n	8003dfc <HAL_DMA_Start_IT+0x78>
 8003dea:	68fb      	ldr	r3, [r7, #12]
 8003dec:	681b      	ldr	r3, [r3, #0]
 8003dee:	681a      	ldr	r2, [r3, #0]
 8003df0:	68fb      	ldr	r3, [r7, #12]
 8003df2:	681b      	ldr	r3, [r3, #0]
 8003df4:	f042 020e 	orr.w	r2, r2, #14
 8003df8:	601a      	str	r2, [r3, #0]
 8003dfa:	e00f      	b.n	8003e1c <HAL_DMA_Start_IT+0x98>
 8003dfc:	68fb      	ldr	r3, [r7, #12]
 8003dfe:	681b      	ldr	r3, [r3, #0]
 8003e00:	681a      	ldr	r2, [r3, #0]
 8003e02:	68fb      	ldr	r3, [r7, #12]
 8003e04:	681b      	ldr	r3, [r3, #0]
 8003e06:	f022 0204 	bic.w	r2, r2, #4
 8003e0a:	601a      	str	r2, [r3, #0]
 8003e0c:	68fb      	ldr	r3, [r7, #12]
 8003e0e:	681b      	ldr	r3, [r3, #0]
 8003e10:	681a      	ldr	r2, [r3, #0]
 8003e12:	68fb      	ldr	r3, [r7, #12]
 8003e14:	681b      	ldr	r3, [r3, #0]
 8003e16:	f042 020a 	orr.w	r2, r2, #10
 8003e1a:	601a      	str	r2, [r3, #0]
 8003e1c:	68fb      	ldr	r3, [r7, #12]
 8003e1e:	681b      	ldr	r3, [r3, #0]
 8003e20:	681a      	ldr	r2, [r3, #0]
 8003e22:	68fb      	ldr	r3, [r7, #12]
 8003e24:	681b      	ldr	r3, [r3, #0]
 8003e26:	f042 0201 	orr.w	r2, r2, #1
 8003e2a:	601a      	str	r2, [r3, #0]
 8003e2c:	e005      	b.n	8003e3a <HAL_DMA_Start_IT+0xb6>
 8003e2e:	68fb      	ldr	r3, [r7, #12]
 8003e30:	2200      	movs	r2, #0
 8003e32:	f883 2020 	strb.w	r2, [r3, #32]
 8003e36:	2302      	movs	r3, #2
 8003e38:	75fb      	strb	r3, [r7, #23]
 8003e3a:	7dfb      	ldrb	r3, [r7, #23]
 8003e3c:	4618      	mov	r0, r3
 8003e3e:	3718      	adds	r7, #24
 8003e40:	46bd      	mov	sp, r7
 8003e42:	bd80      	pop	{r7, pc}

08003e44 <HAL_DMA_IRQHandler>:
 8003e44:	b580      	push	{r7, lr}
 8003e46:	b084      	sub	sp, #16
 8003e48:	af00      	add	r7, sp, #0
 8003e4a:	6078      	str	r0, [r7, #4]
 8003e4c:	687b      	ldr	r3, [r7, #4]
 8003e4e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003e50:	681b      	ldr	r3, [r3, #0]
 8003e52:	60fb      	str	r3, [r7, #12]
 8003e54:	687b      	ldr	r3, [r7, #4]
 8003e56:	681b      	ldr	r3, [r3, #0]
 8003e58:	681b      	ldr	r3, [r3, #0]
 8003e5a:	60bb      	str	r3, [r7, #8]
 8003e5c:	687b      	ldr	r3, [r7, #4]
 8003e5e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003e60:	2204      	movs	r2, #4
 8003e62:	409a      	lsls	r2, r3
 8003e64:	68fb      	ldr	r3, [r7, #12]
 8003e66:	4013      	ands	r3, r2
 8003e68:	2b00      	cmp	r3, #0
 8003e6a:	d04f      	beq.n	8003f0c <HAL_DMA_IRQHandler+0xc8>
 8003e6c:	68bb      	ldr	r3, [r7, #8]
 8003e6e:	f003 0304 	and.w	r3, r3, #4
 8003e72:	2b00      	cmp	r3, #0
 8003e74:	d04a      	beq.n	8003f0c <HAL_DMA_IRQHandler+0xc8>
 8003e76:	687b      	ldr	r3, [r7, #4]
 8003e78:	681b      	ldr	r3, [r3, #0]
 8003e7a:	681b      	ldr	r3, [r3, #0]
 8003e7c:	f003 0320 	and.w	r3, r3, #32
 8003e80:	2b00      	cmp	r3, #0
 8003e82:	d107      	bne.n	8003e94 <HAL_DMA_IRQHandler+0x50>
 8003e84:	687b      	ldr	r3, [r7, #4]
 8003e86:	681b      	ldr	r3, [r3, #0]
 8003e88:	681a      	ldr	r2, [r3, #0]
 8003e8a:	687b      	ldr	r3, [r7, #4]
 8003e8c:	681b      	ldr	r3, [r3, #0]
 8003e8e:	f022 0204 	bic.w	r2, r2, #4
 8003e92:	601a      	str	r2, [r3, #0]
 8003e94:	687b      	ldr	r3, [r7, #4]
 8003e96:	681b      	ldr	r3, [r3, #0]
 8003e98:	4a66      	ldr	r2, [pc, #408]	; (8004034 <HAL_DMA_IRQHandler+0x1f0>)
 8003e9a:	4293      	cmp	r3, r2
 8003e9c:	d029      	beq.n	8003ef2 <HAL_DMA_IRQHandler+0xae>
 8003e9e:	687b      	ldr	r3, [r7, #4]
 8003ea0:	681b      	ldr	r3, [r3, #0]
 8003ea2:	4a65      	ldr	r2, [pc, #404]	; (8004038 <HAL_DMA_IRQHandler+0x1f4>)
 8003ea4:	4293      	cmp	r3, r2
 8003ea6:	d022      	beq.n	8003eee <HAL_DMA_IRQHandler+0xaa>
 8003ea8:	687b      	ldr	r3, [r7, #4]
 8003eaa:	681b      	ldr	r3, [r3, #0]
 8003eac:	4a63      	ldr	r2, [pc, #396]	; (800403c <HAL_DMA_IRQHandler+0x1f8>)
 8003eae:	4293      	cmp	r3, r2
 8003eb0:	d01a      	beq.n	8003ee8 <HAL_DMA_IRQHandler+0xa4>
 8003eb2:	687b      	ldr	r3, [r7, #4]
 8003eb4:	681b      	ldr	r3, [r3, #0]
 8003eb6:	4a62      	ldr	r2, [pc, #392]	; (8004040 <HAL_DMA_IRQHandler+0x1fc>)
 8003eb8:	4293      	cmp	r3, r2
 8003eba:	d012      	beq.n	8003ee2 <HAL_DMA_IRQHandler+0x9e>
 8003ebc:	687b      	ldr	r3, [r7, #4]
 8003ebe:	681b      	ldr	r3, [r3, #0]
 8003ec0:	4a60      	ldr	r2, [pc, #384]	; (8004044 <HAL_DMA_IRQHandler+0x200>)
 8003ec2:	4293      	cmp	r3, r2
 8003ec4:	d00a      	beq.n	8003edc <HAL_DMA_IRQHandler+0x98>
 8003ec6:	687b      	ldr	r3, [r7, #4]
 8003ec8:	681b      	ldr	r3, [r3, #0]
 8003eca:	4a5f      	ldr	r2, [pc, #380]	; (8004048 <HAL_DMA_IRQHandler+0x204>)
 8003ecc:	4293      	cmp	r3, r2
 8003ece:	d102      	bne.n	8003ed6 <HAL_DMA_IRQHandler+0x92>
 8003ed0:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8003ed4:	e00e      	b.n	8003ef4 <HAL_DMA_IRQHandler+0xb0>
 8003ed6:	f04f 6380 	mov.w	r3, #67108864	; 0x4000000
 8003eda:	e00b      	b.n	8003ef4 <HAL_DMA_IRQHandler+0xb0>
 8003edc:	f44f 2380 	mov.w	r3, #262144	; 0x40000
 8003ee0:	e008      	b.n	8003ef4 <HAL_DMA_IRQHandler+0xb0>
 8003ee2:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8003ee6:	e005      	b.n	8003ef4 <HAL_DMA_IRQHandler+0xb0>
 8003ee8:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8003eec:	e002      	b.n	8003ef4 <HAL_DMA_IRQHandler+0xb0>
 8003eee:	2340      	movs	r3, #64	; 0x40
 8003ef0:	e000      	b.n	8003ef4 <HAL_DMA_IRQHandler+0xb0>
 8003ef2:	2304      	movs	r3, #4
 8003ef4:	4a55      	ldr	r2, [pc, #340]	; (800404c <HAL_DMA_IRQHandler+0x208>)
 8003ef6:	6053      	str	r3, [r2, #4]
 8003ef8:	687b      	ldr	r3, [r7, #4]
 8003efa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003efc:	2b00      	cmp	r3, #0
 8003efe:	f000 8094 	beq.w	800402a <HAL_DMA_IRQHandler+0x1e6>
 8003f02:	687b      	ldr	r3, [r7, #4]
 8003f04:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003f06:	6878      	ldr	r0, [r7, #4]
 8003f08:	4798      	blx	r3
 8003f0a:	e08e      	b.n	800402a <HAL_DMA_IRQHandler+0x1e6>
 8003f0c:	687b      	ldr	r3, [r7, #4]
 8003f0e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003f10:	2202      	movs	r2, #2
 8003f12:	409a      	lsls	r2, r3
 8003f14:	68fb      	ldr	r3, [r7, #12]
 8003f16:	4013      	ands	r3, r2
 8003f18:	2b00      	cmp	r3, #0
 8003f1a:	d056      	beq.n	8003fca <HAL_DMA_IRQHandler+0x186>
 8003f1c:	68bb      	ldr	r3, [r7, #8]
 8003f1e:	f003 0302 	and.w	r3, r3, #2
 8003f22:	2b00      	cmp	r3, #0
 8003f24:	d051      	beq.n	8003fca <HAL_DMA_IRQHandler+0x186>
 8003f26:	687b      	ldr	r3, [r7, #4]
 8003f28:	681b      	ldr	r3, [r3, #0]
 8003f2a:	681b      	ldr	r3, [r3, #0]
 8003f2c:	f003 0320 	and.w	r3, r3, #32
 8003f30:	2b00      	cmp	r3, #0
 8003f32:	d10b      	bne.n	8003f4c <HAL_DMA_IRQHandler+0x108>
 8003f34:	687b      	ldr	r3, [r7, #4]
 8003f36:	681b      	ldr	r3, [r3, #0]
 8003f38:	681a      	ldr	r2, [r3, #0]
 8003f3a:	687b      	ldr	r3, [r7, #4]
 8003f3c:	681b      	ldr	r3, [r3, #0]
 8003f3e:	f022 020a 	bic.w	r2, r2, #10
 8003f42:	601a      	str	r2, [r3, #0]
 8003f44:	687b      	ldr	r3, [r7, #4]
 8003f46:	2201      	movs	r2, #1
 8003f48:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8003f4c:	687b      	ldr	r3, [r7, #4]
 8003f4e:	681b      	ldr	r3, [r3, #0]
 8003f50:	4a38      	ldr	r2, [pc, #224]	; (8004034 <HAL_DMA_IRQHandler+0x1f0>)
 8003f52:	4293      	cmp	r3, r2
 8003f54:	d029      	beq.n	8003faa <HAL_DMA_IRQHandler+0x166>
 8003f56:	687b      	ldr	r3, [r7, #4]
 8003f58:	681b      	ldr	r3, [r3, #0]
 8003f5a:	4a37      	ldr	r2, [pc, #220]	; (8004038 <HAL_DMA_IRQHandler+0x1f4>)
 8003f5c:	4293      	cmp	r3, r2
 8003f5e:	d022      	beq.n	8003fa6 <HAL_DMA_IRQHandler+0x162>
 8003f60:	687b      	ldr	r3, [r7, #4]
 8003f62:	681b      	ldr	r3, [r3, #0]
 8003f64:	4a35      	ldr	r2, [pc, #212]	; (800403c <HAL_DMA_IRQHandler+0x1f8>)
 8003f66:	4293      	cmp	r3, r2
 8003f68:	d01a      	beq.n	8003fa0 <HAL_DMA_IRQHandler+0x15c>
 8003f6a:	687b      	ldr	r3, [r7, #4]
 8003f6c:	681b      	ldr	r3, [r3, #0]
 8003f6e:	4a34      	ldr	r2, [pc, #208]	; (8004040 <HAL_DMA_IRQHandler+0x1fc>)
 8003f70:	4293      	cmp	r3, r2
 8003f72:	d012      	beq.n	8003f9a <HAL_DMA_IRQHandler+0x156>
 8003f74:	687b      	ldr	r3, [r7, #4]
 8003f76:	681b      	ldr	r3, [r3, #0]
 8003f78:	4a32      	ldr	r2, [pc, #200]	; (8004044 <HAL_DMA_IRQHandler+0x200>)
 8003f7a:	4293      	cmp	r3, r2
 8003f7c:	d00a      	beq.n	8003f94 <HAL_DMA_IRQHandler+0x150>
 8003f7e:	687b      	ldr	r3, [r7, #4]
 8003f80:	681b      	ldr	r3, [r3, #0]
 8003f82:	4a31      	ldr	r2, [pc, #196]	; (8004048 <HAL_DMA_IRQHandler+0x204>)
 8003f84:	4293      	cmp	r3, r2
 8003f86:	d102      	bne.n	8003f8e <HAL_DMA_IRQHandler+0x14a>
 8003f88:	f44f 1300 	mov.w	r3, #2097152	; 0x200000
 8003f8c:	e00e      	b.n	8003fac <HAL_DMA_IRQHandler+0x168>
 8003f8e:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8003f92:	e00b      	b.n	8003fac <HAL_DMA_IRQHandler+0x168>
 8003f94:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8003f98:	e008      	b.n	8003fac <HAL_DMA_IRQHandler+0x168>
 8003f9a:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8003f9e:	e005      	b.n	8003fac <HAL_DMA_IRQHandler+0x168>
 8003fa0:	f44f 7300 	mov.w	r3, #512	; 0x200
 8003fa4:	e002      	b.n	8003fac <HAL_DMA_IRQHandler+0x168>
 8003fa6:	2320      	movs	r3, #32
 8003fa8:	e000      	b.n	8003fac <HAL_DMA_IRQHandler+0x168>
 8003faa:	2302      	movs	r3, #2
 8003fac:	4a27      	ldr	r2, [pc, #156]	; (800404c <HAL_DMA_IRQHandler+0x208>)
 8003fae:	6053      	str	r3, [r2, #4]
 8003fb0:	687b      	ldr	r3, [r7, #4]
 8003fb2:	2200      	movs	r2, #0
 8003fb4:	f883 2020 	strb.w	r2, [r3, #32]
 8003fb8:	687b      	ldr	r3, [r7, #4]
 8003fba:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003fbc:	2b00      	cmp	r3, #0
 8003fbe:	d034      	beq.n	800402a <HAL_DMA_IRQHandler+0x1e6>
 8003fc0:	687b      	ldr	r3, [r7, #4]
 8003fc2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003fc4:	6878      	ldr	r0, [r7, #4]
 8003fc6:	4798      	blx	r3
 8003fc8:	e02f      	b.n	800402a <HAL_DMA_IRQHandler+0x1e6>
 8003fca:	687b      	ldr	r3, [r7, #4]
 8003fcc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003fce:	2208      	movs	r2, #8
 8003fd0:	409a      	lsls	r2, r3
 8003fd2:	68fb      	ldr	r3, [r7, #12]
 8003fd4:	4013      	ands	r3, r2
 8003fd6:	2b00      	cmp	r3, #0
 8003fd8:	d028      	beq.n	800402c <HAL_DMA_IRQHandler+0x1e8>
 8003fda:	68bb      	ldr	r3, [r7, #8]
 8003fdc:	f003 0308 	and.w	r3, r3, #8
 8003fe0:	2b00      	cmp	r3, #0
 8003fe2:	d023      	beq.n	800402c <HAL_DMA_IRQHandler+0x1e8>
 8003fe4:	687b      	ldr	r3, [r7, #4]
 8003fe6:	681b      	ldr	r3, [r3, #0]
 8003fe8:	681a      	ldr	r2, [r3, #0]
 8003fea:	687b      	ldr	r3, [r7, #4]
 8003fec:	681b      	ldr	r3, [r3, #0]
 8003fee:	f022 020e 	bic.w	r2, r2, #14
 8003ff2:	601a      	str	r2, [r3, #0]
 8003ff4:	687b      	ldr	r3, [r7, #4]
 8003ff6:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8003ff8:	687b      	ldr	r3, [r7, #4]
 8003ffa:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003ffc:	2101      	movs	r1, #1
 8003ffe:	fa01 f202 	lsl.w	r2, r1, r2
 8004002:	605a      	str	r2, [r3, #4]
 8004004:	687b      	ldr	r3, [r7, #4]
 8004006:	2201      	movs	r2, #1
 8004008:	639a      	str	r2, [r3, #56]	; 0x38
 800400a:	687b      	ldr	r3, [r7, #4]
 800400c:	2201      	movs	r2, #1
 800400e:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8004012:	687b      	ldr	r3, [r7, #4]
 8004014:	2200      	movs	r2, #0
 8004016:	f883 2020 	strb.w	r2, [r3, #32]
 800401a:	687b      	ldr	r3, [r7, #4]
 800401c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800401e:	2b00      	cmp	r3, #0
 8004020:	d004      	beq.n	800402c <HAL_DMA_IRQHandler+0x1e8>
 8004022:	687b      	ldr	r3, [r7, #4]
 8004024:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004026:	6878      	ldr	r0, [r7, #4]
 8004028:	4798      	blx	r3
 800402a:	bf00      	nop
 800402c:	bf00      	nop
 800402e:	3710      	adds	r7, #16
 8004030:	46bd      	mov	sp, r7
 8004032:	bd80      	pop	{r7, pc}
 8004034:	40020008 	.word	0x40020008
 8004038:	4002001c 	.word	0x4002001c
 800403c:	40020030 	.word	0x40020030
 8004040:	40020044 	.word	0x40020044
 8004044:	40020058 	.word	0x40020058
 8004048:	4002006c 	.word	0x4002006c
 800404c:	40020000 	.word	0x40020000

08004050 <DMA_SetConfig>:
 8004050:	b480      	push	{r7}
 8004052:	b085      	sub	sp, #20
 8004054:	af00      	add	r7, sp, #0
 8004056:	60f8      	str	r0, [r7, #12]
 8004058:	60b9      	str	r1, [r7, #8]
 800405a:	607a      	str	r2, [r7, #4]
 800405c:	603b      	str	r3, [r7, #0]
 800405e:	68fb      	ldr	r3, [r7, #12]
 8004060:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8004062:	68fb      	ldr	r3, [r7, #12]
 8004064:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004066:	2101      	movs	r1, #1
 8004068:	fa01 f202 	lsl.w	r2, r1, r2
 800406c:	605a      	str	r2, [r3, #4]
 800406e:	68fb      	ldr	r3, [r7, #12]
 8004070:	681b      	ldr	r3, [r3, #0]
 8004072:	683a      	ldr	r2, [r7, #0]
 8004074:	605a      	str	r2, [r3, #4]
 8004076:	68fb      	ldr	r3, [r7, #12]
 8004078:	685b      	ldr	r3, [r3, #4]
 800407a:	2b10      	cmp	r3, #16
 800407c:	d108      	bne.n	8004090 <DMA_SetConfig+0x40>
 800407e:	68fb      	ldr	r3, [r7, #12]
 8004080:	681b      	ldr	r3, [r3, #0]
 8004082:	687a      	ldr	r2, [r7, #4]
 8004084:	609a      	str	r2, [r3, #8]
 8004086:	68fb      	ldr	r3, [r7, #12]
 8004088:	681b      	ldr	r3, [r3, #0]
 800408a:	68ba      	ldr	r2, [r7, #8]
 800408c:	60da      	str	r2, [r3, #12]
 800408e:	e007      	b.n	80040a0 <DMA_SetConfig+0x50>
 8004090:	68fb      	ldr	r3, [r7, #12]
 8004092:	681b      	ldr	r3, [r3, #0]
 8004094:	68ba      	ldr	r2, [r7, #8]
 8004096:	609a      	str	r2, [r3, #8]
 8004098:	68fb      	ldr	r3, [r7, #12]
 800409a:	681b      	ldr	r3, [r3, #0]
 800409c:	687a      	ldr	r2, [r7, #4]
 800409e:	60da      	str	r2, [r3, #12]
 80040a0:	bf00      	nop
 80040a2:	3714      	adds	r7, #20
 80040a4:	46bd      	mov	sp, r7
 80040a6:	bc80      	pop	{r7}
 80040a8:	4770      	bx	lr
	...

080040ac <HAL_GPIO_Init>:
 80040ac:	b480      	push	{r7}
 80040ae:	b08b      	sub	sp, #44	; 0x2c
 80040b0:	af00      	add	r7, sp, #0
 80040b2:	6078      	str	r0, [r7, #4]
 80040b4:	6039      	str	r1, [r7, #0]
 80040b6:	2300      	movs	r3, #0
 80040b8:	627b      	str	r3, [r7, #36]	; 0x24
 80040ba:	2300      	movs	r3, #0
 80040bc:	623b      	str	r3, [r7, #32]
 80040be:	e169      	b.n	8004394 <HAL_GPIO_Init+0x2e8>
 80040c0:	2201      	movs	r2, #1
 80040c2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80040c4:	fa02 f303 	lsl.w	r3, r2, r3
 80040c8:	61fb      	str	r3, [r7, #28]
 80040ca:	683b      	ldr	r3, [r7, #0]
 80040cc:	681b      	ldr	r3, [r3, #0]
 80040ce:	69fa      	ldr	r2, [r7, #28]
 80040d0:	4013      	ands	r3, r2
 80040d2:	61bb      	str	r3, [r7, #24]
 80040d4:	69ba      	ldr	r2, [r7, #24]
 80040d6:	69fb      	ldr	r3, [r7, #28]
 80040d8:	429a      	cmp	r2, r3
 80040da:	f040 8158 	bne.w	800438e <HAL_GPIO_Init+0x2e2>
 80040de:	683b      	ldr	r3, [r7, #0]
 80040e0:	685b      	ldr	r3, [r3, #4]
 80040e2:	4a9a      	ldr	r2, [pc, #616]	; (800434c <HAL_GPIO_Init+0x2a0>)
 80040e4:	4293      	cmp	r3, r2
 80040e6:	d05e      	beq.n	80041a6 <HAL_GPIO_Init+0xfa>
 80040e8:	4a98      	ldr	r2, [pc, #608]	; (800434c <HAL_GPIO_Init+0x2a0>)
 80040ea:	4293      	cmp	r3, r2
 80040ec:	d875      	bhi.n	80041da <HAL_GPIO_Init+0x12e>
 80040ee:	4a98      	ldr	r2, [pc, #608]	; (8004350 <HAL_GPIO_Init+0x2a4>)
 80040f0:	4293      	cmp	r3, r2
 80040f2:	d058      	beq.n	80041a6 <HAL_GPIO_Init+0xfa>
 80040f4:	4a96      	ldr	r2, [pc, #600]	; (8004350 <HAL_GPIO_Init+0x2a4>)
 80040f6:	4293      	cmp	r3, r2
 80040f8:	d86f      	bhi.n	80041da <HAL_GPIO_Init+0x12e>
 80040fa:	4a96      	ldr	r2, [pc, #600]	; (8004354 <HAL_GPIO_Init+0x2a8>)
 80040fc:	4293      	cmp	r3, r2
 80040fe:	d052      	beq.n	80041a6 <HAL_GPIO_Init+0xfa>
 8004100:	4a94      	ldr	r2, [pc, #592]	; (8004354 <HAL_GPIO_Init+0x2a8>)
 8004102:	4293      	cmp	r3, r2
 8004104:	d869      	bhi.n	80041da <HAL_GPIO_Init+0x12e>
 8004106:	4a94      	ldr	r2, [pc, #592]	; (8004358 <HAL_GPIO_Init+0x2ac>)
 8004108:	4293      	cmp	r3, r2
 800410a:	d04c      	beq.n	80041a6 <HAL_GPIO_Init+0xfa>
 800410c:	4a92      	ldr	r2, [pc, #584]	; (8004358 <HAL_GPIO_Init+0x2ac>)
 800410e:	4293      	cmp	r3, r2
 8004110:	d863      	bhi.n	80041da <HAL_GPIO_Init+0x12e>
 8004112:	4a92      	ldr	r2, [pc, #584]	; (800435c <HAL_GPIO_Init+0x2b0>)
 8004114:	4293      	cmp	r3, r2
 8004116:	d046      	beq.n	80041a6 <HAL_GPIO_Init+0xfa>
 8004118:	4a90      	ldr	r2, [pc, #576]	; (800435c <HAL_GPIO_Init+0x2b0>)
 800411a:	4293      	cmp	r3, r2
 800411c:	d85d      	bhi.n	80041da <HAL_GPIO_Init+0x12e>
 800411e:	2b12      	cmp	r3, #18
 8004120:	d82a      	bhi.n	8004178 <HAL_GPIO_Init+0xcc>
 8004122:	2b12      	cmp	r3, #18
 8004124:	d859      	bhi.n	80041da <HAL_GPIO_Init+0x12e>
 8004126:	a201      	add	r2, pc, #4	; (adr r2, 800412c <HAL_GPIO_Init+0x80>)
 8004128:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800412c:	080041a7 	.word	0x080041a7
 8004130:	08004181 	.word	0x08004181
 8004134:	08004193 	.word	0x08004193
 8004138:	080041d5 	.word	0x080041d5
 800413c:	080041db 	.word	0x080041db
 8004140:	080041db 	.word	0x080041db
 8004144:	080041db 	.word	0x080041db
 8004148:	080041db 	.word	0x080041db
 800414c:	080041db 	.word	0x080041db
 8004150:	080041db 	.word	0x080041db
 8004154:	080041db 	.word	0x080041db
 8004158:	080041db 	.word	0x080041db
 800415c:	080041db 	.word	0x080041db
 8004160:	080041db 	.word	0x080041db
 8004164:	080041db 	.word	0x080041db
 8004168:	080041db 	.word	0x080041db
 800416c:	080041db 	.word	0x080041db
 8004170:	08004189 	.word	0x08004189
 8004174:	0800419d 	.word	0x0800419d
 8004178:	4a79      	ldr	r2, [pc, #484]	; (8004360 <HAL_GPIO_Init+0x2b4>)
 800417a:	4293      	cmp	r3, r2
 800417c:	d013      	beq.n	80041a6 <HAL_GPIO_Init+0xfa>
 800417e:	e02c      	b.n	80041da <HAL_GPIO_Init+0x12e>
 8004180:	683b      	ldr	r3, [r7, #0]
 8004182:	68db      	ldr	r3, [r3, #12]
 8004184:	623b      	str	r3, [r7, #32]
 8004186:	e029      	b.n	80041dc <HAL_GPIO_Init+0x130>
 8004188:	683b      	ldr	r3, [r7, #0]
 800418a:	68db      	ldr	r3, [r3, #12]
 800418c:	3304      	adds	r3, #4
 800418e:	623b      	str	r3, [r7, #32]
 8004190:	e024      	b.n	80041dc <HAL_GPIO_Init+0x130>
 8004192:	683b      	ldr	r3, [r7, #0]
 8004194:	68db      	ldr	r3, [r3, #12]
 8004196:	3308      	adds	r3, #8
 8004198:	623b      	str	r3, [r7, #32]
 800419a:	e01f      	b.n	80041dc <HAL_GPIO_Init+0x130>
 800419c:	683b      	ldr	r3, [r7, #0]
 800419e:	68db      	ldr	r3, [r3, #12]
 80041a0:	330c      	adds	r3, #12
 80041a2:	623b      	str	r3, [r7, #32]
 80041a4:	e01a      	b.n	80041dc <HAL_GPIO_Init+0x130>
 80041a6:	683b      	ldr	r3, [r7, #0]
 80041a8:	689b      	ldr	r3, [r3, #8]
 80041aa:	2b00      	cmp	r3, #0
 80041ac:	d102      	bne.n	80041b4 <HAL_GPIO_Init+0x108>
 80041ae:	2304      	movs	r3, #4
 80041b0:	623b      	str	r3, [r7, #32]
 80041b2:	e013      	b.n	80041dc <HAL_GPIO_Init+0x130>
 80041b4:	683b      	ldr	r3, [r7, #0]
 80041b6:	689b      	ldr	r3, [r3, #8]
 80041b8:	2b01      	cmp	r3, #1
 80041ba:	d105      	bne.n	80041c8 <HAL_GPIO_Init+0x11c>
 80041bc:	2308      	movs	r3, #8
 80041be:	623b      	str	r3, [r7, #32]
 80041c0:	687b      	ldr	r3, [r7, #4]
 80041c2:	69fa      	ldr	r2, [r7, #28]
 80041c4:	611a      	str	r2, [r3, #16]
 80041c6:	e009      	b.n	80041dc <HAL_GPIO_Init+0x130>
 80041c8:	2308      	movs	r3, #8
 80041ca:	623b      	str	r3, [r7, #32]
 80041cc:	687b      	ldr	r3, [r7, #4]
 80041ce:	69fa      	ldr	r2, [r7, #28]
 80041d0:	615a      	str	r2, [r3, #20]
 80041d2:	e003      	b.n	80041dc <HAL_GPIO_Init+0x130>
 80041d4:	2300      	movs	r3, #0
 80041d6:	623b      	str	r3, [r7, #32]
 80041d8:	e000      	b.n	80041dc <HAL_GPIO_Init+0x130>
 80041da:	bf00      	nop
 80041dc:	69bb      	ldr	r3, [r7, #24]
 80041de:	2bff      	cmp	r3, #255	; 0xff
 80041e0:	d801      	bhi.n	80041e6 <HAL_GPIO_Init+0x13a>
 80041e2:	687b      	ldr	r3, [r7, #4]
 80041e4:	e001      	b.n	80041ea <HAL_GPIO_Init+0x13e>
 80041e6:	687b      	ldr	r3, [r7, #4]
 80041e8:	3304      	adds	r3, #4
 80041ea:	617b      	str	r3, [r7, #20]
 80041ec:	69bb      	ldr	r3, [r7, #24]
 80041ee:	2bff      	cmp	r3, #255	; 0xff
 80041f0:	d802      	bhi.n	80041f8 <HAL_GPIO_Init+0x14c>
 80041f2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80041f4:	009b      	lsls	r3, r3, #2
 80041f6:	e002      	b.n	80041fe <HAL_GPIO_Init+0x152>
 80041f8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80041fa:	3b08      	subs	r3, #8
 80041fc:	009b      	lsls	r3, r3, #2
 80041fe:	613b      	str	r3, [r7, #16]
 8004200:	697b      	ldr	r3, [r7, #20]
 8004202:	681a      	ldr	r2, [r3, #0]
 8004204:	210f      	movs	r1, #15
 8004206:	693b      	ldr	r3, [r7, #16]
 8004208:	fa01 f303 	lsl.w	r3, r1, r3
 800420c:	43db      	mvns	r3, r3
 800420e:	401a      	ands	r2, r3
 8004210:	6a39      	ldr	r1, [r7, #32]
 8004212:	693b      	ldr	r3, [r7, #16]
 8004214:	fa01 f303 	lsl.w	r3, r1, r3
 8004218:	431a      	orrs	r2, r3
 800421a:	697b      	ldr	r3, [r7, #20]
 800421c:	601a      	str	r2, [r3, #0]
 800421e:	683b      	ldr	r3, [r7, #0]
 8004220:	685b      	ldr	r3, [r3, #4]
 8004222:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004226:	2b00      	cmp	r3, #0
 8004228:	f000 80b1 	beq.w	800438e <HAL_GPIO_Init+0x2e2>
 800422c:	4b4d      	ldr	r3, [pc, #308]	; (8004364 <HAL_GPIO_Init+0x2b8>)
 800422e:	699b      	ldr	r3, [r3, #24]
 8004230:	4a4c      	ldr	r2, [pc, #304]	; (8004364 <HAL_GPIO_Init+0x2b8>)
 8004232:	f043 0301 	orr.w	r3, r3, #1
 8004236:	6193      	str	r3, [r2, #24]
 8004238:	4b4a      	ldr	r3, [pc, #296]	; (8004364 <HAL_GPIO_Init+0x2b8>)
 800423a:	699b      	ldr	r3, [r3, #24]
 800423c:	f003 0301 	and.w	r3, r3, #1
 8004240:	60bb      	str	r3, [r7, #8]
 8004242:	68bb      	ldr	r3, [r7, #8]
 8004244:	4a48      	ldr	r2, [pc, #288]	; (8004368 <HAL_GPIO_Init+0x2bc>)
 8004246:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004248:	089b      	lsrs	r3, r3, #2
 800424a:	3302      	adds	r3, #2
 800424c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8004250:	60fb      	str	r3, [r7, #12]
 8004252:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004254:	f003 0303 	and.w	r3, r3, #3
 8004258:	009b      	lsls	r3, r3, #2
 800425a:	220f      	movs	r2, #15
 800425c:	fa02 f303 	lsl.w	r3, r2, r3
 8004260:	43db      	mvns	r3, r3
 8004262:	68fa      	ldr	r2, [r7, #12]
 8004264:	4013      	ands	r3, r2
 8004266:	60fb      	str	r3, [r7, #12]
 8004268:	687b      	ldr	r3, [r7, #4]
 800426a:	4a40      	ldr	r2, [pc, #256]	; (800436c <HAL_GPIO_Init+0x2c0>)
 800426c:	4293      	cmp	r3, r2
 800426e:	d013      	beq.n	8004298 <HAL_GPIO_Init+0x1ec>
 8004270:	687b      	ldr	r3, [r7, #4]
 8004272:	4a3f      	ldr	r2, [pc, #252]	; (8004370 <HAL_GPIO_Init+0x2c4>)
 8004274:	4293      	cmp	r3, r2
 8004276:	d00d      	beq.n	8004294 <HAL_GPIO_Init+0x1e8>
 8004278:	687b      	ldr	r3, [r7, #4]
 800427a:	4a3e      	ldr	r2, [pc, #248]	; (8004374 <HAL_GPIO_Init+0x2c8>)
 800427c:	4293      	cmp	r3, r2
 800427e:	d007      	beq.n	8004290 <HAL_GPIO_Init+0x1e4>
 8004280:	687b      	ldr	r3, [r7, #4]
 8004282:	4a3d      	ldr	r2, [pc, #244]	; (8004378 <HAL_GPIO_Init+0x2cc>)
 8004284:	4293      	cmp	r3, r2
 8004286:	d101      	bne.n	800428c <HAL_GPIO_Init+0x1e0>
 8004288:	2303      	movs	r3, #3
 800428a:	e006      	b.n	800429a <HAL_GPIO_Init+0x1ee>
 800428c:	2304      	movs	r3, #4
 800428e:	e004      	b.n	800429a <HAL_GPIO_Init+0x1ee>
 8004290:	2302      	movs	r3, #2
 8004292:	e002      	b.n	800429a <HAL_GPIO_Init+0x1ee>
 8004294:	2301      	movs	r3, #1
 8004296:	e000      	b.n	800429a <HAL_GPIO_Init+0x1ee>
 8004298:	2300      	movs	r3, #0
 800429a:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800429c:	f002 0203 	and.w	r2, r2, #3
 80042a0:	0092      	lsls	r2, r2, #2
 80042a2:	4093      	lsls	r3, r2
 80042a4:	68fa      	ldr	r2, [r7, #12]
 80042a6:	4313      	orrs	r3, r2
 80042a8:	60fb      	str	r3, [r7, #12]
 80042aa:	492f      	ldr	r1, [pc, #188]	; (8004368 <HAL_GPIO_Init+0x2bc>)
 80042ac:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80042ae:	089b      	lsrs	r3, r3, #2
 80042b0:	3302      	adds	r3, #2
 80042b2:	68fa      	ldr	r2, [r7, #12]
 80042b4:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80042b8:	683b      	ldr	r3, [r7, #0]
 80042ba:	685b      	ldr	r3, [r3, #4]
 80042bc:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 80042c0:	2b00      	cmp	r3, #0
 80042c2:	d006      	beq.n	80042d2 <HAL_GPIO_Init+0x226>
 80042c4:	4b2d      	ldr	r3, [pc, #180]	; (800437c <HAL_GPIO_Init+0x2d0>)
 80042c6:	689a      	ldr	r2, [r3, #8]
 80042c8:	492c      	ldr	r1, [pc, #176]	; (800437c <HAL_GPIO_Init+0x2d0>)
 80042ca:	69bb      	ldr	r3, [r7, #24]
 80042cc:	4313      	orrs	r3, r2
 80042ce:	608b      	str	r3, [r1, #8]
 80042d0:	e006      	b.n	80042e0 <HAL_GPIO_Init+0x234>
 80042d2:	4b2a      	ldr	r3, [pc, #168]	; (800437c <HAL_GPIO_Init+0x2d0>)
 80042d4:	689a      	ldr	r2, [r3, #8]
 80042d6:	69bb      	ldr	r3, [r7, #24]
 80042d8:	43db      	mvns	r3, r3
 80042da:	4928      	ldr	r1, [pc, #160]	; (800437c <HAL_GPIO_Init+0x2d0>)
 80042dc:	4013      	ands	r3, r2
 80042de:	608b      	str	r3, [r1, #8]
 80042e0:	683b      	ldr	r3, [r7, #0]
 80042e2:	685b      	ldr	r3, [r3, #4]
 80042e4:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80042e8:	2b00      	cmp	r3, #0
 80042ea:	d006      	beq.n	80042fa <HAL_GPIO_Init+0x24e>
 80042ec:	4b23      	ldr	r3, [pc, #140]	; (800437c <HAL_GPIO_Init+0x2d0>)
 80042ee:	68da      	ldr	r2, [r3, #12]
 80042f0:	4922      	ldr	r1, [pc, #136]	; (800437c <HAL_GPIO_Init+0x2d0>)
 80042f2:	69bb      	ldr	r3, [r7, #24]
 80042f4:	4313      	orrs	r3, r2
 80042f6:	60cb      	str	r3, [r1, #12]
 80042f8:	e006      	b.n	8004308 <HAL_GPIO_Init+0x25c>
 80042fa:	4b20      	ldr	r3, [pc, #128]	; (800437c <HAL_GPIO_Init+0x2d0>)
 80042fc:	68da      	ldr	r2, [r3, #12]
 80042fe:	69bb      	ldr	r3, [r7, #24]
 8004300:	43db      	mvns	r3, r3
 8004302:	491e      	ldr	r1, [pc, #120]	; (800437c <HAL_GPIO_Init+0x2d0>)
 8004304:	4013      	ands	r3, r2
 8004306:	60cb      	str	r3, [r1, #12]
 8004308:	683b      	ldr	r3, [r7, #0]
 800430a:	685b      	ldr	r3, [r3, #4]
 800430c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004310:	2b00      	cmp	r3, #0
 8004312:	d006      	beq.n	8004322 <HAL_GPIO_Init+0x276>
 8004314:	4b19      	ldr	r3, [pc, #100]	; (800437c <HAL_GPIO_Init+0x2d0>)
 8004316:	685a      	ldr	r2, [r3, #4]
 8004318:	4918      	ldr	r1, [pc, #96]	; (800437c <HAL_GPIO_Init+0x2d0>)
 800431a:	69bb      	ldr	r3, [r7, #24]
 800431c:	4313      	orrs	r3, r2
 800431e:	604b      	str	r3, [r1, #4]
 8004320:	e006      	b.n	8004330 <HAL_GPIO_Init+0x284>
 8004322:	4b16      	ldr	r3, [pc, #88]	; (800437c <HAL_GPIO_Init+0x2d0>)
 8004324:	685a      	ldr	r2, [r3, #4]
 8004326:	69bb      	ldr	r3, [r7, #24]
 8004328:	43db      	mvns	r3, r3
 800432a:	4914      	ldr	r1, [pc, #80]	; (800437c <HAL_GPIO_Init+0x2d0>)
 800432c:	4013      	ands	r3, r2
 800432e:	604b      	str	r3, [r1, #4]
 8004330:	683b      	ldr	r3, [r7, #0]
 8004332:	685b      	ldr	r3, [r3, #4]
 8004334:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8004338:	2b00      	cmp	r3, #0
 800433a:	d021      	beq.n	8004380 <HAL_GPIO_Init+0x2d4>
 800433c:	4b0f      	ldr	r3, [pc, #60]	; (800437c <HAL_GPIO_Init+0x2d0>)
 800433e:	681a      	ldr	r2, [r3, #0]
 8004340:	490e      	ldr	r1, [pc, #56]	; (800437c <HAL_GPIO_Init+0x2d0>)
 8004342:	69bb      	ldr	r3, [r7, #24]
 8004344:	4313      	orrs	r3, r2
 8004346:	600b      	str	r3, [r1, #0]
 8004348:	e021      	b.n	800438e <HAL_GPIO_Init+0x2e2>
 800434a:	bf00      	nop
 800434c:	10320000 	.word	0x10320000
 8004350:	10310000 	.word	0x10310000
 8004354:	10220000 	.word	0x10220000
 8004358:	10210000 	.word	0x10210000
 800435c:	10120000 	.word	0x10120000
 8004360:	10110000 	.word	0x10110000
 8004364:	40021000 	.word	0x40021000
 8004368:	40010000 	.word	0x40010000
 800436c:	40010800 	.word	0x40010800
 8004370:	40010c00 	.word	0x40010c00
 8004374:	40011000 	.word	0x40011000
 8004378:	40011400 	.word	0x40011400
 800437c:	40010400 	.word	0x40010400
 8004380:	4b0b      	ldr	r3, [pc, #44]	; (80043b0 <HAL_GPIO_Init+0x304>)
 8004382:	681a      	ldr	r2, [r3, #0]
 8004384:	69bb      	ldr	r3, [r7, #24]
 8004386:	43db      	mvns	r3, r3
 8004388:	4909      	ldr	r1, [pc, #36]	; (80043b0 <HAL_GPIO_Init+0x304>)
 800438a:	4013      	ands	r3, r2
 800438c:	600b      	str	r3, [r1, #0]
 800438e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004390:	3301      	adds	r3, #1
 8004392:	627b      	str	r3, [r7, #36]	; 0x24
 8004394:	683b      	ldr	r3, [r7, #0]
 8004396:	681a      	ldr	r2, [r3, #0]
 8004398:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800439a:	fa22 f303 	lsr.w	r3, r2, r3
 800439e:	2b00      	cmp	r3, #0
 80043a0:	f47f ae8e 	bne.w	80040c0 <HAL_GPIO_Init+0x14>
 80043a4:	bf00      	nop
 80043a6:	bf00      	nop
 80043a8:	372c      	adds	r7, #44	; 0x2c
 80043aa:	46bd      	mov	sp, r7
 80043ac:	bc80      	pop	{r7}
 80043ae:	4770      	bx	lr
 80043b0:	40010400 	.word	0x40010400

080043b4 <HAL_GPIO_ReadPin>:
 80043b4:	b480      	push	{r7}
 80043b6:	b085      	sub	sp, #20
 80043b8:	af00      	add	r7, sp, #0
 80043ba:	6078      	str	r0, [r7, #4]
 80043bc:	460b      	mov	r3, r1
 80043be:	807b      	strh	r3, [r7, #2]
 80043c0:	687b      	ldr	r3, [r7, #4]
 80043c2:	689a      	ldr	r2, [r3, #8]
 80043c4:	887b      	ldrh	r3, [r7, #2]
 80043c6:	4013      	ands	r3, r2
 80043c8:	2b00      	cmp	r3, #0
 80043ca:	d002      	beq.n	80043d2 <HAL_GPIO_ReadPin+0x1e>
 80043cc:	2301      	movs	r3, #1
 80043ce:	73fb      	strb	r3, [r7, #15]
 80043d0:	e001      	b.n	80043d6 <HAL_GPIO_ReadPin+0x22>
 80043d2:	2300      	movs	r3, #0
 80043d4:	73fb      	strb	r3, [r7, #15]
 80043d6:	7bfb      	ldrb	r3, [r7, #15]
 80043d8:	4618      	mov	r0, r3
 80043da:	3714      	adds	r7, #20
 80043dc:	46bd      	mov	sp, r7
 80043de:	bc80      	pop	{r7}
 80043e0:	4770      	bx	lr

080043e2 <HAL_GPIO_WritePin>:
 80043e2:	b480      	push	{r7}
 80043e4:	b083      	sub	sp, #12
 80043e6:	af00      	add	r7, sp, #0
 80043e8:	6078      	str	r0, [r7, #4]
 80043ea:	460b      	mov	r3, r1
 80043ec:	807b      	strh	r3, [r7, #2]
 80043ee:	4613      	mov	r3, r2
 80043f0:	707b      	strb	r3, [r7, #1]
 80043f2:	787b      	ldrb	r3, [r7, #1]
 80043f4:	2b00      	cmp	r3, #0
 80043f6:	d003      	beq.n	8004400 <HAL_GPIO_WritePin+0x1e>
 80043f8:	887a      	ldrh	r2, [r7, #2]
 80043fa:	687b      	ldr	r3, [r7, #4]
 80043fc:	611a      	str	r2, [r3, #16]
 80043fe:	e003      	b.n	8004408 <HAL_GPIO_WritePin+0x26>
 8004400:	887b      	ldrh	r3, [r7, #2]
 8004402:	041a      	lsls	r2, r3, #16
 8004404:	687b      	ldr	r3, [r7, #4]
 8004406:	611a      	str	r2, [r3, #16]
 8004408:	bf00      	nop
 800440a:	370c      	adds	r7, #12
 800440c:	46bd      	mov	sp, r7
 800440e:	bc80      	pop	{r7}
 8004410:	4770      	bx	lr
	...

08004414 <HAL_RCC_OscConfig>:
 8004414:	b580      	push	{r7, lr}
 8004416:	b086      	sub	sp, #24
 8004418:	af00      	add	r7, sp, #0
 800441a:	6078      	str	r0, [r7, #4]
 800441c:	687b      	ldr	r3, [r7, #4]
 800441e:	2b00      	cmp	r3, #0
 8004420:	d101      	bne.n	8004426 <HAL_RCC_OscConfig+0x12>
 8004422:	2301      	movs	r3, #1
 8004424:	e272      	b.n	800490c <HAL_RCC_OscConfig+0x4f8>
 8004426:	687b      	ldr	r3, [r7, #4]
 8004428:	681b      	ldr	r3, [r3, #0]
 800442a:	f003 0301 	and.w	r3, r3, #1
 800442e:	2b00      	cmp	r3, #0
 8004430:	f000 8087 	beq.w	8004542 <HAL_RCC_OscConfig+0x12e>
 8004434:	4b92      	ldr	r3, [pc, #584]	; (8004680 <HAL_RCC_OscConfig+0x26c>)
 8004436:	685b      	ldr	r3, [r3, #4]
 8004438:	f003 030c 	and.w	r3, r3, #12
 800443c:	2b04      	cmp	r3, #4
 800443e:	d00c      	beq.n	800445a <HAL_RCC_OscConfig+0x46>
 8004440:	4b8f      	ldr	r3, [pc, #572]	; (8004680 <HAL_RCC_OscConfig+0x26c>)
 8004442:	685b      	ldr	r3, [r3, #4]
 8004444:	f003 030c 	and.w	r3, r3, #12
 8004448:	2b08      	cmp	r3, #8
 800444a:	d112      	bne.n	8004472 <HAL_RCC_OscConfig+0x5e>
 800444c:	4b8c      	ldr	r3, [pc, #560]	; (8004680 <HAL_RCC_OscConfig+0x26c>)
 800444e:	685b      	ldr	r3, [r3, #4]
 8004450:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8004454:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8004458:	d10b      	bne.n	8004472 <HAL_RCC_OscConfig+0x5e>
 800445a:	4b89      	ldr	r3, [pc, #548]	; (8004680 <HAL_RCC_OscConfig+0x26c>)
 800445c:	681b      	ldr	r3, [r3, #0]
 800445e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004462:	2b00      	cmp	r3, #0
 8004464:	d06c      	beq.n	8004540 <HAL_RCC_OscConfig+0x12c>
 8004466:	687b      	ldr	r3, [r7, #4]
 8004468:	685b      	ldr	r3, [r3, #4]
 800446a:	2b00      	cmp	r3, #0
 800446c:	d168      	bne.n	8004540 <HAL_RCC_OscConfig+0x12c>
 800446e:	2301      	movs	r3, #1
 8004470:	e24c      	b.n	800490c <HAL_RCC_OscConfig+0x4f8>
 8004472:	687b      	ldr	r3, [r7, #4]
 8004474:	685b      	ldr	r3, [r3, #4]
 8004476:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800447a:	d106      	bne.n	800448a <HAL_RCC_OscConfig+0x76>
 800447c:	4b80      	ldr	r3, [pc, #512]	; (8004680 <HAL_RCC_OscConfig+0x26c>)
 800447e:	681b      	ldr	r3, [r3, #0]
 8004480:	4a7f      	ldr	r2, [pc, #508]	; (8004680 <HAL_RCC_OscConfig+0x26c>)
 8004482:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8004486:	6013      	str	r3, [r2, #0]
 8004488:	e02e      	b.n	80044e8 <HAL_RCC_OscConfig+0xd4>
 800448a:	687b      	ldr	r3, [r7, #4]
 800448c:	685b      	ldr	r3, [r3, #4]
 800448e:	2b00      	cmp	r3, #0
 8004490:	d10c      	bne.n	80044ac <HAL_RCC_OscConfig+0x98>
 8004492:	4b7b      	ldr	r3, [pc, #492]	; (8004680 <HAL_RCC_OscConfig+0x26c>)
 8004494:	681b      	ldr	r3, [r3, #0]
 8004496:	4a7a      	ldr	r2, [pc, #488]	; (8004680 <HAL_RCC_OscConfig+0x26c>)
 8004498:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800449c:	6013      	str	r3, [r2, #0]
 800449e:	4b78      	ldr	r3, [pc, #480]	; (8004680 <HAL_RCC_OscConfig+0x26c>)
 80044a0:	681b      	ldr	r3, [r3, #0]
 80044a2:	4a77      	ldr	r2, [pc, #476]	; (8004680 <HAL_RCC_OscConfig+0x26c>)
 80044a4:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80044a8:	6013      	str	r3, [r2, #0]
 80044aa:	e01d      	b.n	80044e8 <HAL_RCC_OscConfig+0xd4>
 80044ac:	687b      	ldr	r3, [r7, #4]
 80044ae:	685b      	ldr	r3, [r3, #4]
 80044b0:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80044b4:	d10c      	bne.n	80044d0 <HAL_RCC_OscConfig+0xbc>
 80044b6:	4b72      	ldr	r3, [pc, #456]	; (8004680 <HAL_RCC_OscConfig+0x26c>)
 80044b8:	681b      	ldr	r3, [r3, #0]
 80044ba:	4a71      	ldr	r2, [pc, #452]	; (8004680 <HAL_RCC_OscConfig+0x26c>)
 80044bc:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80044c0:	6013      	str	r3, [r2, #0]
 80044c2:	4b6f      	ldr	r3, [pc, #444]	; (8004680 <HAL_RCC_OscConfig+0x26c>)
 80044c4:	681b      	ldr	r3, [r3, #0]
 80044c6:	4a6e      	ldr	r2, [pc, #440]	; (8004680 <HAL_RCC_OscConfig+0x26c>)
 80044c8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80044cc:	6013      	str	r3, [r2, #0]
 80044ce:	e00b      	b.n	80044e8 <HAL_RCC_OscConfig+0xd4>
 80044d0:	4b6b      	ldr	r3, [pc, #428]	; (8004680 <HAL_RCC_OscConfig+0x26c>)
 80044d2:	681b      	ldr	r3, [r3, #0]
 80044d4:	4a6a      	ldr	r2, [pc, #424]	; (8004680 <HAL_RCC_OscConfig+0x26c>)
 80044d6:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80044da:	6013      	str	r3, [r2, #0]
 80044dc:	4b68      	ldr	r3, [pc, #416]	; (8004680 <HAL_RCC_OscConfig+0x26c>)
 80044de:	681b      	ldr	r3, [r3, #0]
 80044e0:	4a67      	ldr	r2, [pc, #412]	; (8004680 <HAL_RCC_OscConfig+0x26c>)
 80044e2:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80044e6:	6013      	str	r3, [r2, #0]
 80044e8:	687b      	ldr	r3, [r7, #4]
 80044ea:	685b      	ldr	r3, [r3, #4]
 80044ec:	2b00      	cmp	r3, #0
 80044ee:	d013      	beq.n	8004518 <HAL_RCC_OscConfig+0x104>
 80044f0:	f7fd ff9c 	bl	800242c <HAL_GetTick>
 80044f4:	6138      	str	r0, [r7, #16]
 80044f6:	e008      	b.n	800450a <HAL_RCC_OscConfig+0xf6>
 80044f8:	f7fd ff98 	bl	800242c <HAL_GetTick>
 80044fc:	4602      	mov	r2, r0
 80044fe:	693b      	ldr	r3, [r7, #16]
 8004500:	1ad3      	subs	r3, r2, r3
 8004502:	2b64      	cmp	r3, #100	; 0x64
 8004504:	d901      	bls.n	800450a <HAL_RCC_OscConfig+0xf6>
 8004506:	2303      	movs	r3, #3
 8004508:	e200      	b.n	800490c <HAL_RCC_OscConfig+0x4f8>
 800450a:	4b5d      	ldr	r3, [pc, #372]	; (8004680 <HAL_RCC_OscConfig+0x26c>)
 800450c:	681b      	ldr	r3, [r3, #0]
 800450e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004512:	2b00      	cmp	r3, #0
 8004514:	d0f0      	beq.n	80044f8 <HAL_RCC_OscConfig+0xe4>
 8004516:	e014      	b.n	8004542 <HAL_RCC_OscConfig+0x12e>
 8004518:	f7fd ff88 	bl	800242c <HAL_GetTick>
 800451c:	6138      	str	r0, [r7, #16]
 800451e:	e008      	b.n	8004532 <HAL_RCC_OscConfig+0x11e>
 8004520:	f7fd ff84 	bl	800242c <HAL_GetTick>
 8004524:	4602      	mov	r2, r0
 8004526:	693b      	ldr	r3, [r7, #16]
 8004528:	1ad3      	subs	r3, r2, r3
 800452a:	2b64      	cmp	r3, #100	; 0x64
 800452c:	d901      	bls.n	8004532 <HAL_RCC_OscConfig+0x11e>
 800452e:	2303      	movs	r3, #3
 8004530:	e1ec      	b.n	800490c <HAL_RCC_OscConfig+0x4f8>
 8004532:	4b53      	ldr	r3, [pc, #332]	; (8004680 <HAL_RCC_OscConfig+0x26c>)
 8004534:	681b      	ldr	r3, [r3, #0]
 8004536:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800453a:	2b00      	cmp	r3, #0
 800453c:	d1f0      	bne.n	8004520 <HAL_RCC_OscConfig+0x10c>
 800453e:	e000      	b.n	8004542 <HAL_RCC_OscConfig+0x12e>
 8004540:	bf00      	nop
 8004542:	687b      	ldr	r3, [r7, #4]
 8004544:	681b      	ldr	r3, [r3, #0]
 8004546:	f003 0302 	and.w	r3, r3, #2
 800454a:	2b00      	cmp	r3, #0
 800454c:	d063      	beq.n	8004616 <HAL_RCC_OscConfig+0x202>
 800454e:	4b4c      	ldr	r3, [pc, #304]	; (8004680 <HAL_RCC_OscConfig+0x26c>)
 8004550:	685b      	ldr	r3, [r3, #4]
 8004552:	f003 030c 	and.w	r3, r3, #12
 8004556:	2b00      	cmp	r3, #0
 8004558:	d00b      	beq.n	8004572 <HAL_RCC_OscConfig+0x15e>
 800455a:	4b49      	ldr	r3, [pc, #292]	; (8004680 <HAL_RCC_OscConfig+0x26c>)
 800455c:	685b      	ldr	r3, [r3, #4]
 800455e:	f003 030c 	and.w	r3, r3, #12
 8004562:	2b08      	cmp	r3, #8
 8004564:	d11c      	bne.n	80045a0 <HAL_RCC_OscConfig+0x18c>
 8004566:	4b46      	ldr	r3, [pc, #280]	; (8004680 <HAL_RCC_OscConfig+0x26c>)
 8004568:	685b      	ldr	r3, [r3, #4]
 800456a:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800456e:	2b00      	cmp	r3, #0
 8004570:	d116      	bne.n	80045a0 <HAL_RCC_OscConfig+0x18c>
 8004572:	4b43      	ldr	r3, [pc, #268]	; (8004680 <HAL_RCC_OscConfig+0x26c>)
 8004574:	681b      	ldr	r3, [r3, #0]
 8004576:	f003 0302 	and.w	r3, r3, #2
 800457a:	2b00      	cmp	r3, #0
 800457c:	d005      	beq.n	800458a <HAL_RCC_OscConfig+0x176>
 800457e:	687b      	ldr	r3, [r7, #4]
 8004580:	691b      	ldr	r3, [r3, #16]
 8004582:	2b01      	cmp	r3, #1
 8004584:	d001      	beq.n	800458a <HAL_RCC_OscConfig+0x176>
 8004586:	2301      	movs	r3, #1
 8004588:	e1c0      	b.n	800490c <HAL_RCC_OscConfig+0x4f8>
 800458a:	4b3d      	ldr	r3, [pc, #244]	; (8004680 <HAL_RCC_OscConfig+0x26c>)
 800458c:	681b      	ldr	r3, [r3, #0]
 800458e:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8004592:	687b      	ldr	r3, [r7, #4]
 8004594:	695b      	ldr	r3, [r3, #20]
 8004596:	00db      	lsls	r3, r3, #3
 8004598:	4939      	ldr	r1, [pc, #228]	; (8004680 <HAL_RCC_OscConfig+0x26c>)
 800459a:	4313      	orrs	r3, r2
 800459c:	600b      	str	r3, [r1, #0]
 800459e:	e03a      	b.n	8004616 <HAL_RCC_OscConfig+0x202>
 80045a0:	687b      	ldr	r3, [r7, #4]
 80045a2:	691b      	ldr	r3, [r3, #16]
 80045a4:	2b00      	cmp	r3, #0
 80045a6:	d020      	beq.n	80045ea <HAL_RCC_OscConfig+0x1d6>
 80045a8:	4b36      	ldr	r3, [pc, #216]	; (8004684 <HAL_RCC_OscConfig+0x270>)
 80045aa:	2201      	movs	r2, #1
 80045ac:	601a      	str	r2, [r3, #0]
 80045ae:	f7fd ff3d 	bl	800242c <HAL_GetTick>
 80045b2:	6138      	str	r0, [r7, #16]
 80045b4:	e008      	b.n	80045c8 <HAL_RCC_OscConfig+0x1b4>
 80045b6:	f7fd ff39 	bl	800242c <HAL_GetTick>
 80045ba:	4602      	mov	r2, r0
 80045bc:	693b      	ldr	r3, [r7, #16]
 80045be:	1ad3      	subs	r3, r2, r3
 80045c0:	2b02      	cmp	r3, #2
 80045c2:	d901      	bls.n	80045c8 <HAL_RCC_OscConfig+0x1b4>
 80045c4:	2303      	movs	r3, #3
 80045c6:	e1a1      	b.n	800490c <HAL_RCC_OscConfig+0x4f8>
 80045c8:	4b2d      	ldr	r3, [pc, #180]	; (8004680 <HAL_RCC_OscConfig+0x26c>)
 80045ca:	681b      	ldr	r3, [r3, #0]
 80045cc:	f003 0302 	and.w	r3, r3, #2
 80045d0:	2b00      	cmp	r3, #0
 80045d2:	d0f0      	beq.n	80045b6 <HAL_RCC_OscConfig+0x1a2>
 80045d4:	4b2a      	ldr	r3, [pc, #168]	; (8004680 <HAL_RCC_OscConfig+0x26c>)
 80045d6:	681b      	ldr	r3, [r3, #0]
 80045d8:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80045dc:	687b      	ldr	r3, [r7, #4]
 80045de:	695b      	ldr	r3, [r3, #20]
 80045e0:	00db      	lsls	r3, r3, #3
 80045e2:	4927      	ldr	r1, [pc, #156]	; (8004680 <HAL_RCC_OscConfig+0x26c>)
 80045e4:	4313      	orrs	r3, r2
 80045e6:	600b      	str	r3, [r1, #0]
 80045e8:	e015      	b.n	8004616 <HAL_RCC_OscConfig+0x202>
 80045ea:	4b26      	ldr	r3, [pc, #152]	; (8004684 <HAL_RCC_OscConfig+0x270>)
 80045ec:	2200      	movs	r2, #0
 80045ee:	601a      	str	r2, [r3, #0]
 80045f0:	f7fd ff1c 	bl	800242c <HAL_GetTick>
 80045f4:	6138      	str	r0, [r7, #16]
 80045f6:	e008      	b.n	800460a <HAL_RCC_OscConfig+0x1f6>
 80045f8:	f7fd ff18 	bl	800242c <HAL_GetTick>
 80045fc:	4602      	mov	r2, r0
 80045fe:	693b      	ldr	r3, [r7, #16]
 8004600:	1ad3      	subs	r3, r2, r3
 8004602:	2b02      	cmp	r3, #2
 8004604:	d901      	bls.n	800460a <HAL_RCC_OscConfig+0x1f6>
 8004606:	2303      	movs	r3, #3
 8004608:	e180      	b.n	800490c <HAL_RCC_OscConfig+0x4f8>
 800460a:	4b1d      	ldr	r3, [pc, #116]	; (8004680 <HAL_RCC_OscConfig+0x26c>)
 800460c:	681b      	ldr	r3, [r3, #0]
 800460e:	f003 0302 	and.w	r3, r3, #2
 8004612:	2b00      	cmp	r3, #0
 8004614:	d1f0      	bne.n	80045f8 <HAL_RCC_OscConfig+0x1e4>
 8004616:	687b      	ldr	r3, [r7, #4]
 8004618:	681b      	ldr	r3, [r3, #0]
 800461a:	f003 0308 	and.w	r3, r3, #8
 800461e:	2b00      	cmp	r3, #0
 8004620:	d03a      	beq.n	8004698 <HAL_RCC_OscConfig+0x284>
 8004622:	687b      	ldr	r3, [r7, #4]
 8004624:	699b      	ldr	r3, [r3, #24]
 8004626:	2b00      	cmp	r3, #0
 8004628:	d019      	beq.n	800465e <HAL_RCC_OscConfig+0x24a>
 800462a:	4b17      	ldr	r3, [pc, #92]	; (8004688 <HAL_RCC_OscConfig+0x274>)
 800462c:	2201      	movs	r2, #1
 800462e:	601a      	str	r2, [r3, #0]
 8004630:	f7fd fefc 	bl	800242c <HAL_GetTick>
 8004634:	6138      	str	r0, [r7, #16]
 8004636:	e008      	b.n	800464a <HAL_RCC_OscConfig+0x236>
 8004638:	f7fd fef8 	bl	800242c <HAL_GetTick>
 800463c:	4602      	mov	r2, r0
 800463e:	693b      	ldr	r3, [r7, #16]
 8004640:	1ad3      	subs	r3, r2, r3
 8004642:	2b02      	cmp	r3, #2
 8004644:	d901      	bls.n	800464a <HAL_RCC_OscConfig+0x236>
 8004646:	2303      	movs	r3, #3
 8004648:	e160      	b.n	800490c <HAL_RCC_OscConfig+0x4f8>
 800464a:	4b0d      	ldr	r3, [pc, #52]	; (8004680 <HAL_RCC_OscConfig+0x26c>)
 800464c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800464e:	f003 0302 	and.w	r3, r3, #2
 8004652:	2b00      	cmp	r3, #0
 8004654:	d0f0      	beq.n	8004638 <HAL_RCC_OscConfig+0x224>
 8004656:	2001      	movs	r0, #1
 8004658:	f000 face 	bl	8004bf8 <RCC_Delay>
 800465c:	e01c      	b.n	8004698 <HAL_RCC_OscConfig+0x284>
 800465e:	4b0a      	ldr	r3, [pc, #40]	; (8004688 <HAL_RCC_OscConfig+0x274>)
 8004660:	2200      	movs	r2, #0
 8004662:	601a      	str	r2, [r3, #0]
 8004664:	f7fd fee2 	bl	800242c <HAL_GetTick>
 8004668:	6138      	str	r0, [r7, #16]
 800466a:	e00f      	b.n	800468c <HAL_RCC_OscConfig+0x278>
 800466c:	f7fd fede 	bl	800242c <HAL_GetTick>
 8004670:	4602      	mov	r2, r0
 8004672:	693b      	ldr	r3, [r7, #16]
 8004674:	1ad3      	subs	r3, r2, r3
 8004676:	2b02      	cmp	r3, #2
 8004678:	d908      	bls.n	800468c <HAL_RCC_OscConfig+0x278>
 800467a:	2303      	movs	r3, #3
 800467c:	e146      	b.n	800490c <HAL_RCC_OscConfig+0x4f8>
 800467e:	bf00      	nop
 8004680:	40021000 	.word	0x40021000
 8004684:	42420000 	.word	0x42420000
 8004688:	42420480 	.word	0x42420480
 800468c:	4b92      	ldr	r3, [pc, #584]	; (80048d8 <HAL_RCC_OscConfig+0x4c4>)
 800468e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004690:	f003 0302 	and.w	r3, r3, #2
 8004694:	2b00      	cmp	r3, #0
 8004696:	d1e9      	bne.n	800466c <HAL_RCC_OscConfig+0x258>
 8004698:	687b      	ldr	r3, [r7, #4]
 800469a:	681b      	ldr	r3, [r3, #0]
 800469c:	f003 0304 	and.w	r3, r3, #4
 80046a0:	2b00      	cmp	r3, #0
 80046a2:	f000 80a6 	beq.w	80047f2 <HAL_RCC_OscConfig+0x3de>
 80046a6:	2300      	movs	r3, #0
 80046a8:	75fb      	strb	r3, [r7, #23]
 80046aa:	4b8b      	ldr	r3, [pc, #556]	; (80048d8 <HAL_RCC_OscConfig+0x4c4>)
 80046ac:	69db      	ldr	r3, [r3, #28]
 80046ae:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80046b2:	2b00      	cmp	r3, #0
 80046b4:	d10d      	bne.n	80046d2 <HAL_RCC_OscConfig+0x2be>
 80046b6:	4b88      	ldr	r3, [pc, #544]	; (80048d8 <HAL_RCC_OscConfig+0x4c4>)
 80046b8:	69db      	ldr	r3, [r3, #28]
 80046ba:	4a87      	ldr	r2, [pc, #540]	; (80048d8 <HAL_RCC_OscConfig+0x4c4>)
 80046bc:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80046c0:	61d3      	str	r3, [r2, #28]
 80046c2:	4b85      	ldr	r3, [pc, #532]	; (80048d8 <HAL_RCC_OscConfig+0x4c4>)
 80046c4:	69db      	ldr	r3, [r3, #28]
 80046c6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80046ca:	60bb      	str	r3, [r7, #8]
 80046cc:	68bb      	ldr	r3, [r7, #8]
 80046ce:	2301      	movs	r3, #1
 80046d0:	75fb      	strb	r3, [r7, #23]
 80046d2:	4b82      	ldr	r3, [pc, #520]	; (80048dc <HAL_RCC_OscConfig+0x4c8>)
 80046d4:	681b      	ldr	r3, [r3, #0]
 80046d6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80046da:	2b00      	cmp	r3, #0
 80046dc:	d118      	bne.n	8004710 <HAL_RCC_OscConfig+0x2fc>
 80046de:	4b7f      	ldr	r3, [pc, #508]	; (80048dc <HAL_RCC_OscConfig+0x4c8>)
 80046e0:	681b      	ldr	r3, [r3, #0]
 80046e2:	4a7e      	ldr	r2, [pc, #504]	; (80048dc <HAL_RCC_OscConfig+0x4c8>)
 80046e4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80046e8:	6013      	str	r3, [r2, #0]
 80046ea:	f7fd fe9f 	bl	800242c <HAL_GetTick>
 80046ee:	6138      	str	r0, [r7, #16]
 80046f0:	e008      	b.n	8004704 <HAL_RCC_OscConfig+0x2f0>
 80046f2:	f7fd fe9b 	bl	800242c <HAL_GetTick>
 80046f6:	4602      	mov	r2, r0
 80046f8:	693b      	ldr	r3, [r7, #16]
 80046fa:	1ad3      	subs	r3, r2, r3
 80046fc:	2b64      	cmp	r3, #100	; 0x64
 80046fe:	d901      	bls.n	8004704 <HAL_RCC_OscConfig+0x2f0>
 8004700:	2303      	movs	r3, #3
 8004702:	e103      	b.n	800490c <HAL_RCC_OscConfig+0x4f8>
 8004704:	4b75      	ldr	r3, [pc, #468]	; (80048dc <HAL_RCC_OscConfig+0x4c8>)
 8004706:	681b      	ldr	r3, [r3, #0]
 8004708:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800470c:	2b00      	cmp	r3, #0
 800470e:	d0f0      	beq.n	80046f2 <HAL_RCC_OscConfig+0x2de>
 8004710:	687b      	ldr	r3, [r7, #4]
 8004712:	68db      	ldr	r3, [r3, #12]
 8004714:	2b01      	cmp	r3, #1
 8004716:	d106      	bne.n	8004726 <HAL_RCC_OscConfig+0x312>
 8004718:	4b6f      	ldr	r3, [pc, #444]	; (80048d8 <HAL_RCC_OscConfig+0x4c4>)
 800471a:	6a1b      	ldr	r3, [r3, #32]
 800471c:	4a6e      	ldr	r2, [pc, #440]	; (80048d8 <HAL_RCC_OscConfig+0x4c4>)
 800471e:	f043 0301 	orr.w	r3, r3, #1
 8004722:	6213      	str	r3, [r2, #32]
 8004724:	e02d      	b.n	8004782 <HAL_RCC_OscConfig+0x36e>
 8004726:	687b      	ldr	r3, [r7, #4]
 8004728:	68db      	ldr	r3, [r3, #12]
 800472a:	2b00      	cmp	r3, #0
 800472c:	d10c      	bne.n	8004748 <HAL_RCC_OscConfig+0x334>
 800472e:	4b6a      	ldr	r3, [pc, #424]	; (80048d8 <HAL_RCC_OscConfig+0x4c4>)
 8004730:	6a1b      	ldr	r3, [r3, #32]
 8004732:	4a69      	ldr	r2, [pc, #420]	; (80048d8 <HAL_RCC_OscConfig+0x4c4>)
 8004734:	f023 0301 	bic.w	r3, r3, #1
 8004738:	6213      	str	r3, [r2, #32]
 800473a:	4b67      	ldr	r3, [pc, #412]	; (80048d8 <HAL_RCC_OscConfig+0x4c4>)
 800473c:	6a1b      	ldr	r3, [r3, #32]
 800473e:	4a66      	ldr	r2, [pc, #408]	; (80048d8 <HAL_RCC_OscConfig+0x4c4>)
 8004740:	f023 0304 	bic.w	r3, r3, #4
 8004744:	6213      	str	r3, [r2, #32]
 8004746:	e01c      	b.n	8004782 <HAL_RCC_OscConfig+0x36e>
 8004748:	687b      	ldr	r3, [r7, #4]
 800474a:	68db      	ldr	r3, [r3, #12]
 800474c:	2b05      	cmp	r3, #5
 800474e:	d10c      	bne.n	800476a <HAL_RCC_OscConfig+0x356>
 8004750:	4b61      	ldr	r3, [pc, #388]	; (80048d8 <HAL_RCC_OscConfig+0x4c4>)
 8004752:	6a1b      	ldr	r3, [r3, #32]
 8004754:	4a60      	ldr	r2, [pc, #384]	; (80048d8 <HAL_RCC_OscConfig+0x4c4>)
 8004756:	f043 0304 	orr.w	r3, r3, #4
 800475a:	6213      	str	r3, [r2, #32]
 800475c:	4b5e      	ldr	r3, [pc, #376]	; (80048d8 <HAL_RCC_OscConfig+0x4c4>)
 800475e:	6a1b      	ldr	r3, [r3, #32]
 8004760:	4a5d      	ldr	r2, [pc, #372]	; (80048d8 <HAL_RCC_OscConfig+0x4c4>)
 8004762:	f043 0301 	orr.w	r3, r3, #1
 8004766:	6213      	str	r3, [r2, #32]
 8004768:	e00b      	b.n	8004782 <HAL_RCC_OscConfig+0x36e>
 800476a:	4b5b      	ldr	r3, [pc, #364]	; (80048d8 <HAL_RCC_OscConfig+0x4c4>)
 800476c:	6a1b      	ldr	r3, [r3, #32]
 800476e:	4a5a      	ldr	r2, [pc, #360]	; (80048d8 <HAL_RCC_OscConfig+0x4c4>)
 8004770:	f023 0301 	bic.w	r3, r3, #1
 8004774:	6213      	str	r3, [r2, #32]
 8004776:	4b58      	ldr	r3, [pc, #352]	; (80048d8 <HAL_RCC_OscConfig+0x4c4>)
 8004778:	6a1b      	ldr	r3, [r3, #32]
 800477a:	4a57      	ldr	r2, [pc, #348]	; (80048d8 <HAL_RCC_OscConfig+0x4c4>)
 800477c:	f023 0304 	bic.w	r3, r3, #4
 8004780:	6213      	str	r3, [r2, #32]
 8004782:	687b      	ldr	r3, [r7, #4]
 8004784:	68db      	ldr	r3, [r3, #12]
 8004786:	2b00      	cmp	r3, #0
 8004788:	d015      	beq.n	80047b6 <HAL_RCC_OscConfig+0x3a2>
 800478a:	f7fd fe4f 	bl	800242c <HAL_GetTick>
 800478e:	6138      	str	r0, [r7, #16]
 8004790:	e00a      	b.n	80047a8 <HAL_RCC_OscConfig+0x394>
 8004792:	f7fd fe4b 	bl	800242c <HAL_GetTick>
 8004796:	4602      	mov	r2, r0
 8004798:	693b      	ldr	r3, [r7, #16]
 800479a:	1ad3      	subs	r3, r2, r3
 800479c:	f241 3288 	movw	r2, #5000	; 0x1388
 80047a0:	4293      	cmp	r3, r2
 80047a2:	d901      	bls.n	80047a8 <HAL_RCC_OscConfig+0x394>
 80047a4:	2303      	movs	r3, #3
 80047a6:	e0b1      	b.n	800490c <HAL_RCC_OscConfig+0x4f8>
 80047a8:	4b4b      	ldr	r3, [pc, #300]	; (80048d8 <HAL_RCC_OscConfig+0x4c4>)
 80047aa:	6a1b      	ldr	r3, [r3, #32]
 80047ac:	f003 0302 	and.w	r3, r3, #2
 80047b0:	2b00      	cmp	r3, #0
 80047b2:	d0ee      	beq.n	8004792 <HAL_RCC_OscConfig+0x37e>
 80047b4:	e014      	b.n	80047e0 <HAL_RCC_OscConfig+0x3cc>
 80047b6:	f7fd fe39 	bl	800242c <HAL_GetTick>
 80047ba:	6138      	str	r0, [r7, #16]
 80047bc:	e00a      	b.n	80047d4 <HAL_RCC_OscConfig+0x3c0>
 80047be:	f7fd fe35 	bl	800242c <HAL_GetTick>
 80047c2:	4602      	mov	r2, r0
 80047c4:	693b      	ldr	r3, [r7, #16]
 80047c6:	1ad3      	subs	r3, r2, r3
 80047c8:	f241 3288 	movw	r2, #5000	; 0x1388
 80047cc:	4293      	cmp	r3, r2
 80047ce:	d901      	bls.n	80047d4 <HAL_RCC_OscConfig+0x3c0>
 80047d0:	2303      	movs	r3, #3
 80047d2:	e09b      	b.n	800490c <HAL_RCC_OscConfig+0x4f8>
 80047d4:	4b40      	ldr	r3, [pc, #256]	; (80048d8 <HAL_RCC_OscConfig+0x4c4>)
 80047d6:	6a1b      	ldr	r3, [r3, #32]
 80047d8:	f003 0302 	and.w	r3, r3, #2
 80047dc:	2b00      	cmp	r3, #0
 80047de:	d1ee      	bne.n	80047be <HAL_RCC_OscConfig+0x3aa>
 80047e0:	7dfb      	ldrb	r3, [r7, #23]
 80047e2:	2b01      	cmp	r3, #1
 80047e4:	d105      	bne.n	80047f2 <HAL_RCC_OscConfig+0x3de>
 80047e6:	4b3c      	ldr	r3, [pc, #240]	; (80048d8 <HAL_RCC_OscConfig+0x4c4>)
 80047e8:	69db      	ldr	r3, [r3, #28]
 80047ea:	4a3b      	ldr	r2, [pc, #236]	; (80048d8 <HAL_RCC_OscConfig+0x4c4>)
 80047ec:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80047f0:	61d3      	str	r3, [r2, #28]
 80047f2:	687b      	ldr	r3, [r7, #4]
 80047f4:	69db      	ldr	r3, [r3, #28]
 80047f6:	2b00      	cmp	r3, #0
 80047f8:	f000 8087 	beq.w	800490a <HAL_RCC_OscConfig+0x4f6>
 80047fc:	4b36      	ldr	r3, [pc, #216]	; (80048d8 <HAL_RCC_OscConfig+0x4c4>)
 80047fe:	685b      	ldr	r3, [r3, #4]
 8004800:	f003 030c 	and.w	r3, r3, #12
 8004804:	2b08      	cmp	r3, #8
 8004806:	d061      	beq.n	80048cc <HAL_RCC_OscConfig+0x4b8>
 8004808:	687b      	ldr	r3, [r7, #4]
 800480a:	69db      	ldr	r3, [r3, #28]
 800480c:	2b02      	cmp	r3, #2
 800480e:	d146      	bne.n	800489e <HAL_RCC_OscConfig+0x48a>
 8004810:	4b33      	ldr	r3, [pc, #204]	; (80048e0 <HAL_RCC_OscConfig+0x4cc>)
 8004812:	2200      	movs	r2, #0
 8004814:	601a      	str	r2, [r3, #0]
 8004816:	f7fd fe09 	bl	800242c <HAL_GetTick>
 800481a:	6138      	str	r0, [r7, #16]
 800481c:	e008      	b.n	8004830 <HAL_RCC_OscConfig+0x41c>
 800481e:	f7fd fe05 	bl	800242c <HAL_GetTick>
 8004822:	4602      	mov	r2, r0
 8004824:	693b      	ldr	r3, [r7, #16]
 8004826:	1ad3      	subs	r3, r2, r3
 8004828:	2b02      	cmp	r3, #2
 800482a:	d901      	bls.n	8004830 <HAL_RCC_OscConfig+0x41c>
 800482c:	2303      	movs	r3, #3
 800482e:	e06d      	b.n	800490c <HAL_RCC_OscConfig+0x4f8>
 8004830:	4b29      	ldr	r3, [pc, #164]	; (80048d8 <HAL_RCC_OscConfig+0x4c4>)
 8004832:	681b      	ldr	r3, [r3, #0]
 8004834:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004838:	2b00      	cmp	r3, #0
 800483a:	d1f0      	bne.n	800481e <HAL_RCC_OscConfig+0x40a>
 800483c:	687b      	ldr	r3, [r7, #4]
 800483e:	6a1b      	ldr	r3, [r3, #32]
 8004840:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8004844:	d108      	bne.n	8004858 <HAL_RCC_OscConfig+0x444>
 8004846:	4b24      	ldr	r3, [pc, #144]	; (80048d8 <HAL_RCC_OscConfig+0x4c4>)
 8004848:	685b      	ldr	r3, [r3, #4]
 800484a:	f423 3200 	bic.w	r2, r3, #131072	; 0x20000
 800484e:	687b      	ldr	r3, [r7, #4]
 8004850:	689b      	ldr	r3, [r3, #8]
 8004852:	4921      	ldr	r1, [pc, #132]	; (80048d8 <HAL_RCC_OscConfig+0x4c4>)
 8004854:	4313      	orrs	r3, r2
 8004856:	604b      	str	r3, [r1, #4]
 8004858:	4b1f      	ldr	r3, [pc, #124]	; (80048d8 <HAL_RCC_OscConfig+0x4c4>)
 800485a:	685b      	ldr	r3, [r3, #4]
 800485c:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 8004860:	687b      	ldr	r3, [r7, #4]
 8004862:	6a19      	ldr	r1, [r3, #32]
 8004864:	687b      	ldr	r3, [r7, #4]
 8004866:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004868:	430b      	orrs	r3, r1
 800486a:	491b      	ldr	r1, [pc, #108]	; (80048d8 <HAL_RCC_OscConfig+0x4c4>)
 800486c:	4313      	orrs	r3, r2
 800486e:	604b      	str	r3, [r1, #4]
 8004870:	4b1b      	ldr	r3, [pc, #108]	; (80048e0 <HAL_RCC_OscConfig+0x4cc>)
 8004872:	2201      	movs	r2, #1
 8004874:	601a      	str	r2, [r3, #0]
 8004876:	f7fd fdd9 	bl	800242c <HAL_GetTick>
 800487a:	6138      	str	r0, [r7, #16]
 800487c:	e008      	b.n	8004890 <HAL_RCC_OscConfig+0x47c>
 800487e:	f7fd fdd5 	bl	800242c <HAL_GetTick>
 8004882:	4602      	mov	r2, r0
 8004884:	693b      	ldr	r3, [r7, #16]
 8004886:	1ad3      	subs	r3, r2, r3
 8004888:	2b02      	cmp	r3, #2
 800488a:	d901      	bls.n	8004890 <HAL_RCC_OscConfig+0x47c>
 800488c:	2303      	movs	r3, #3
 800488e:	e03d      	b.n	800490c <HAL_RCC_OscConfig+0x4f8>
 8004890:	4b11      	ldr	r3, [pc, #68]	; (80048d8 <HAL_RCC_OscConfig+0x4c4>)
 8004892:	681b      	ldr	r3, [r3, #0]
 8004894:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004898:	2b00      	cmp	r3, #0
 800489a:	d0f0      	beq.n	800487e <HAL_RCC_OscConfig+0x46a>
 800489c:	e035      	b.n	800490a <HAL_RCC_OscConfig+0x4f6>
 800489e:	4b10      	ldr	r3, [pc, #64]	; (80048e0 <HAL_RCC_OscConfig+0x4cc>)
 80048a0:	2200      	movs	r2, #0
 80048a2:	601a      	str	r2, [r3, #0]
 80048a4:	f7fd fdc2 	bl	800242c <HAL_GetTick>
 80048a8:	6138      	str	r0, [r7, #16]
 80048aa:	e008      	b.n	80048be <HAL_RCC_OscConfig+0x4aa>
 80048ac:	f7fd fdbe 	bl	800242c <HAL_GetTick>
 80048b0:	4602      	mov	r2, r0
 80048b2:	693b      	ldr	r3, [r7, #16]
 80048b4:	1ad3      	subs	r3, r2, r3
 80048b6:	2b02      	cmp	r3, #2
 80048b8:	d901      	bls.n	80048be <HAL_RCC_OscConfig+0x4aa>
 80048ba:	2303      	movs	r3, #3
 80048bc:	e026      	b.n	800490c <HAL_RCC_OscConfig+0x4f8>
 80048be:	4b06      	ldr	r3, [pc, #24]	; (80048d8 <HAL_RCC_OscConfig+0x4c4>)
 80048c0:	681b      	ldr	r3, [r3, #0]
 80048c2:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80048c6:	2b00      	cmp	r3, #0
 80048c8:	d1f0      	bne.n	80048ac <HAL_RCC_OscConfig+0x498>
 80048ca:	e01e      	b.n	800490a <HAL_RCC_OscConfig+0x4f6>
 80048cc:	687b      	ldr	r3, [r7, #4]
 80048ce:	69db      	ldr	r3, [r3, #28]
 80048d0:	2b01      	cmp	r3, #1
 80048d2:	d107      	bne.n	80048e4 <HAL_RCC_OscConfig+0x4d0>
 80048d4:	2301      	movs	r3, #1
 80048d6:	e019      	b.n	800490c <HAL_RCC_OscConfig+0x4f8>
 80048d8:	40021000 	.word	0x40021000
 80048dc:	40007000 	.word	0x40007000
 80048e0:	42420060 	.word	0x42420060
 80048e4:	4b0b      	ldr	r3, [pc, #44]	; (8004914 <HAL_RCC_OscConfig+0x500>)
 80048e6:	685b      	ldr	r3, [r3, #4]
 80048e8:	60fb      	str	r3, [r7, #12]
 80048ea:	68fb      	ldr	r3, [r7, #12]
 80048ec:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 80048f0:	687b      	ldr	r3, [r7, #4]
 80048f2:	6a1b      	ldr	r3, [r3, #32]
 80048f4:	429a      	cmp	r2, r3
 80048f6:	d106      	bne.n	8004906 <HAL_RCC_OscConfig+0x4f2>
 80048f8:	68fb      	ldr	r3, [r7, #12]
 80048fa:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 80048fe:	687b      	ldr	r3, [r7, #4]
 8004900:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004902:	429a      	cmp	r2, r3
 8004904:	d001      	beq.n	800490a <HAL_RCC_OscConfig+0x4f6>
 8004906:	2301      	movs	r3, #1
 8004908:	e000      	b.n	800490c <HAL_RCC_OscConfig+0x4f8>
 800490a:	2300      	movs	r3, #0
 800490c:	4618      	mov	r0, r3
 800490e:	3718      	adds	r7, #24
 8004910:	46bd      	mov	sp, r7
 8004912:	bd80      	pop	{r7, pc}
 8004914:	40021000 	.word	0x40021000

08004918 <HAL_RCC_ClockConfig>:
 8004918:	b580      	push	{r7, lr}
 800491a:	b084      	sub	sp, #16
 800491c:	af00      	add	r7, sp, #0
 800491e:	6078      	str	r0, [r7, #4]
 8004920:	6039      	str	r1, [r7, #0]
 8004922:	687b      	ldr	r3, [r7, #4]
 8004924:	2b00      	cmp	r3, #0
 8004926:	d101      	bne.n	800492c <HAL_RCC_ClockConfig+0x14>
 8004928:	2301      	movs	r3, #1
 800492a:	e0d0      	b.n	8004ace <HAL_RCC_ClockConfig+0x1b6>
 800492c:	4b6a      	ldr	r3, [pc, #424]	; (8004ad8 <HAL_RCC_ClockConfig+0x1c0>)
 800492e:	681b      	ldr	r3, [r3, #0]
 8004930:	f003 0307 	and.w	r3, r3, #7
 8004934:	683a      	ldr	r2, [r7, #0]
 8004936:	429a      	cmp	r2, r3
 8004938:	d910      	bls.n	800495c <HAL_RCC_ClockConfig+0x44>
 800493a:	4b67      	ldr	r3, [pc, #412]	; (8004ad8 <HAL_RCC_ClockConfig+0x1c0>)
 800493c:	681b      	ldr	r3, [r3, #0]
 800493e:	f023 0207 	bic.w	r2, r3, #7
 8004942:	4965      	ldr	r1, [pc, #404]	; (8004ad8 <HAL_RCC_ClockConfig+0x1c0>)
 8004944:	683b      	ldr	r3, [r7, #0]
 8004946:	4313      	orrs	r3, r2
 8004948:	600b      	str	r3, [r1, #0]
 800494a:	4b63      	ldr	r3, [pc, #396]	; (8004ad8 <HAL_RCC_ClockConfig+0x1c0>)
 800494c:	681b      	ldr	r3, [r3, #0]
 800494e:	f003 0307 	and.w	r3, r3, #7
 8004952:	683a      	ldr	r2, [r7, #0]
 8004954:	429a      	cmp	r2, r3
 8004956:	d001      	beq.n	800495c <HAL_RCC_ClockConfig+0x44>
 8004958:	2301      	movs	r3, #1
 800495a:	e0b8      	b.n	8004ace <HAL_RCC_ClockConfig+0x1b6>
 800495c:	687b      	ldr	r3, [r7, #4]
 800495e:	681b      	ldr	r3, [r3, #0]
 8004960:	f003 0302 	and.w	r3, r3, #2
 8004964:	2b00      	cmp	r3, #0
 8004966:	d020      	beq.n	80049aa <HAL_RCC_ClockConfig+0x92>
 8004968:	687b      	ldr	r3, [r7, #4]
 800496a:	681b      	ldr	r3, [r3, #0]
 800496c:	f003 0304 	and.w	r3, r3, #4
 8004970:	2b00      	cmp	r3, #0
 8004972:	d005      	beq.n	8004980 <HAL_RCC_ClockConfig+0x68>
 8004974:	4b59      	ldr	r3, [pc, #356]	; (8004adc <HAL_RCC_ClockConfig+0x1c4>)
 8004976:	685b      	ldr	r3, [r3, #4]
 8004978:	4a58      	ldr	r2, [pc, #352]	; (8004adc <HAL_RCC_ClockConfig+0x1c4>)
 800497a:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 800497e:	6053      	str	r3, [r2, #4]
 8004980:	687b      	ldr	r3, [r7, #4]
 8004982:	681b      	ldr	r3, [r3, #0]
 8004984:	f003 0308 	and.w	r3, r3, #8
 8004988:	2b00      	cmp	r3, #0
 800498a:	d005      	beq.n	8004998 <HAL_RCC_ClockConfig+0x80>
 800498c:	4b53      	ldr	r3, [pc, #332]	; (8004adc <HAL_RCC_ClockConfig+0x1c4>)
 800498e:	685b      	ldr	r3, [r3, #4]
 8004990:	4a52      	ldr	r2, [pc, #328]	; (8004adc <HAL_RCC_ClockConfig+0x1c4>)
 8004992:	f443 5360 	orr.w	r3, r3, #14336	; 0x3800
 8004996:	6053      	str	r3, [r2, #4]
 8004998:	4b50      	ldr	r3, [pc, #320]	; (8004adc <HAL_RCC_ClockConfig+0x1c4>)
 800499a:	685b      	ldr	r3, [r3, #4]
 800499c:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 80049a0:	687b      	ldr	r3, [r7, #4]
 80049a2:	689b      	ldr	r3, [r3, #8]
 80049a4:	494d      	ldr	r1, [pc, #308]	; (8004adc <HAL_RCC_ClockConfig+0x1c4>)
 80049a6:	4313      	orrs	r3, r2
 80049a8:	604b      	str	r3, [r1, #4]
 80049aa:	687b      	ldr	r3, [r7, #4]
 80049ac:	681b      	ldr	r3, [r3, #0]
 80049ae:	f003 0301 	and.w	r3, r3, #1
 80049b2:	2b00      	cmp	r3, #0
 80049b4:	d040      	beq.n	8004a38 <HAL_RCC_ClockConfig+0x120>
 80049b6:	687b      	ldr	r3, [r7, #4]
 80049b8:	685b      	ldr	r3, [r3, #4]
 80049ba:	2b01      	cmp	r3, #1
 80049bc:	d107      	bne.n	80049ce <HAL_RCC_ClockConfig+0xb6>
 80049be:	4b47      	ldr	r3, [pc, #284]	; (8004adc <HAL_RCC_ClockConfig+0x1c4>)
 80049c0:	681b      	ldr	r3, [r3, #0]
 80049c2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80049c6:	2b00      	cmp	r3, #0
 80049c8:	d115      	bne.n	80049f6 <HAL_RCC_ClockConfig+0xde>
 80049ca:	2301      	movs	r3, #1
 80049cc:	e07f      	b.n	8004ace <HAL_RCC_ClockConfig+0x1b6>
 80049ce:	687b      	ldr	r3, [r7, #4]
 80049d0:	685b      	ldr	r3, [r3, #4]
 80049d2:	2b02      	cmp	r3, #2
 80049d4:	d107      	bne.n	80049e6 <HAL_RCC_ClockConfig+0xce>
 80049d6:	4b41      	ldr	r3, [pc, #260]	; (8004adc <HAL_RCC_ClockConfig+0x1c4>)
 80049d8:	681b      	ldr	r3, [r3, #0]
 80049da:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80049de:	2b00      	cmp	r3, #0
 80049e0:	d109      	bne.n	80049f6 <HAL_RCC_ClockConfig+0xde>
 80049e2:	2301      	movs	r3, #1
 80049e4:	e073      	b.n	8004ace <HAL_RCC_ClockConfig+0x1b6>
 80049e6:	4b3d      	ldr	r3, [pc, #244]	; (8004adc <HAL_RCC_ClockConfig+0x1c4>)
 80049e8:	681b      	ldr	r3, [r3, #0]
 80049ea:	f003 0302 	and.w	r3, r3, #2
 80049ee:	2b00      	cmp	r3, #0
 80049f0:	d101      	bne.n	80049f6 <HAL_RCC_ClockConfig+0xde>
 80049f2:	2301      	movs	r3, #1
 80049f4:	e06b      	b.n	8004ace <HAL_RCC_ClockConfig+0x1b6>
 80049f6:	4b39      	ldr	r3, [pc, #228]	; (8004adc <HAL_RCC_ClockConfig+0x1c4>)
 80049f8:	685b      	ldr	r3, [r3, #4]
 80049fa:	f023 0203 	bic.w	r2, r3, #3
 80049fe:	687b      	ldr	r3, [r7, #4]
 8004a00:	685b      	ldr	r3, [r3, #4]
 8004a02:	4936      	ldr	r1, [pc, #216]	; (8004adc <HAL_RCC_ClockConfig+0x1c4>)
 8004a04:	4313      	orrs	r3, r2
 8004a06:	604b      	str	r3, [r1, #4]
 8004a08:	f7fd fd10 	bl	800242c <HAL_GetTick>
 8004a0c:	60f8      	str	r0, [r7, #12]
 8004a0e:	e00a      	b.n	8004a26 <HAL_RCC_ClockConfig+0x10e>
 8004a10:	f7fd fd0c 	bl	800242c <HAL_GetTick>
 8004a14:	4602      	mov	r2, r0
 8004a16:	68fb      	ldr	r3, [r7, #12]
 8004a18:	1ad3      	subs	r3, r2, r3
 8004a1a:	f241 3288 	movw	r2, #5000	; 0x1388
 8004a1e:	4293      	cmp	r3, r2
 8004a20:	d901      	bls.n	8004a26 <HAL_RCC_ClockConfig+0x10e>
 8004a22:	2303      	movs	r3, #3
 8004a24:	e053      	b.n	8004ace <HAL_RCC_ClockConfig+0x1b6>
 8004a26:	4b2d      	ldr	r3, [pc, #180]	; (8004adc <HAL_RCC_ClockConfig+0x1c4>)
 8004a28:	685b      	ldr	r3, [r3, #4]
 8004a2a:	f003 020c 	and.w	r2, r3, #12
 8004a2e:	687b      	ldr	r3, [r7, #4]
 8004a30:	685b      	ldr	r3, [r3, #4]
 8004a32:	009b      	lsls	r3, r3, #2
 8004a34:	429a      	cmp	r2, r3
 8004a36:	d1eb      	bne.n	8004a10 <HAL_RCC_ClockConfig+0xf8>
 8004a38:	4b27      	ldr	r3, [pc, #156]	; (8004ad8 <HAL_RCC_ClockConfig+0x1c0>)
 8004a3a:	681b      	ldr	r3, [r3, #0]
 8004a3c:	f003 0307 	and.w	r3, r3, #7
 8004a40:	683a      	ldr	r2, [r7, #0]
 8004a42:	429a      	cmp	r2, r3
 8004a44:	d210      	bcs.n	8004a68 <HAL_RCC_ClockConfig+0x150>
 8004a46:	4b24      	ldr	r3, [pc, #144]	; (8004ad8 <HAL_RCC_ClockConfig+0x1c0>)
 8004a48:	681b      	ldr	r3, [r3, #0]
 8004a4a:	f023 0207 	bic.w	r2, r3, #7
 8004a4e:	4922      	ldr	r1, [pc, #136]	; (8004ad8 <HAL_RCC_ClockConfig+0x1c0>)
 8004a50:	683b      	ldr	r3, [r7, #0]
 8004a52:	4313      	orrs	r3, r2
 8004a54:	600b      	str	r3, [r1, #0]
 8004a56:	4b20      	ldr	r3, [pc, #128]	; (8004ad8 <HAL_RCC_ClockConfig+0x1c0>)
 8004a58:	681b      	ldr	r3, [r3, #0]
 8004a5a:	f003 0307 	and.w	r3, r3, #7
 8004a5e:	683a      	ldr	r2, [r7, #0]
 8004a60:	429a      	cmp	r2, r3
 8004a62:	d001      	beq.n	8004a68 <HAL_RCC_ClockConfig+0x150>
 8004a64:	2301      	movs	r3, #1
 8004a66:	e032      	b.n	8004ace <HAL_RCC_ClockConfig+0x1b6>
 8004a68:	687b      	ldr	r3, [r7, #4]
 8004a6a:	681b      	ldr	r3, [r3, #0]
 8004a6c:	f003 0304 	and.w	r3, r3, #4
 8004a70:	2b00      	cmp	r3, #0
 8004a72:	d008      	beq.n	8004a86 <HAL_RCC_ClockConfig+0x16e>
 8004a74:	4b19      	ldr	r3, [pc, #100]	; (8004adc <HAL_RCC_ClockConfig+0x1c4>)
 8004a76:	685b      	ldr	r3, [r3, #4]
 8004a78:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 8004a7c:	687b      	ldr	r3, [r7, #4]
 8004a7e:	68db      	ldr	r3, [r3, #12]
 8004a80:	4916      	ldr	r1, [pc, #88]	; (8004adc <HAL_RCC_ClockConfig+0x1c4>)
 8004a82:	4313      	orrs	r3, r2
 8004a84:	604b      	str	r3, [r1, #4]
 8004a86:	687b      	ldr	r3, [r7, #4]
 8004a88:	681b      	ldr	r3, [r3, #0]
 8004a8a:	f003 0308 	and.w	r3, r3, #8
 8004a8e:	2b00      	cmp	r3, #0
 8004a90:	d009      	beq.n	8004aa6 <HAL_RCC_ClockConfig+0x18e>
 8004a92:	4b12      	ldr	r3, [pc, #72]	; (8004adc <HAL_RCC_ClockConfig+0x1c4>)
 8004a94:	685b      	ldr	r3, [r3, #4]
 8004a96:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 8004a9a:	687b      	ldr	r3, [r7, #4]
 8004a9c:	691b      	ldr	r3, [r3, #16]
 8004a9e:	00db      	lsls	r3, r3, #3
 8004aa0:	490e      	ldr	r1, [pc, #56]	; (8004adc <HAL_RCC_ClockConfig+0x1c4>)
 8004aa2:	4313      	orrs	r3, r2
 8004aa4:	604b      	str	r3, [r1, #4]
 8004aa6:	f000 f821 	bl	8004aec <HAL_RCC_GetSysClockFreq>
 8004aaa:	4602      	mov	r2, r0
 8004aac:	4b0b      	ldr	r3, [pc, #44]	; (8004adc <HAL_RCC_ClockConfig+0x1c4>)
 8004aae:	685b      	ldr	r3, [r3, #4]
 8004ab0:	091b      	lsrs	r3, r3, #4
 8004ab2:	f003 030f 	and.w	r3, r3, #15
 8004ab6:	490a      	ldr	r1, [pc, #40]	; (8004ae0 <HAL_RCC_ClockConfig+0x1c8>)
 8004ab8:	5ccb      	ldrb	r3, [r1, r3]
 8004aba:	fa22 f303 	lsr.w	r3, r2, r3
 8004abe:	4a09      	ldr	r2, [pc, #36]	; (8004ae4 <HAL_RCC_ClockConfig+0x1cc>)
 8004ac0:	6013      	str	r3, [r2, #0]
 8004ac2:	4b09      	ldr	r3, [pc, #36]	; (8004ae8 <HAL_RCC_ClockConfig+0x1d0>)
 8004ac4:	681b      	ldr	r3, [r3, #0]
 8004ac6:	4618      	mov	r0, r3
 8004ac8:	f7fd fc6e 	bl	80023a8 <HAL_InitTick>
 8004acc:	2300      	movs	r3, #0
 8004ace:	4618      	mov	r0, r3
 8004ad0:	3710      	adds	r7, #16
 8004ad2:	46bd      	mov	sp, r7
 8004ad4:	bd80      	pop	{r7, pc}
 8004ad6:	bf00      	nop
 8004ad8:	40022000 	.word	0x40022000
 8004adc:	40021000 	.word	0x40021000
 8004ae0:	08006390 	.word	0x08006390
 8004ae4:	2000000c 	.word	0x2000000c
 8004ae8:	20000010 	.word	0x20000010

08004aec <HAL_RCC_GetSysClockFreq>:
 8004aec:	b480      	push	{r7}
 8004aee:	b087      	sub	sp, #28
 8004af0:	af00      	add	r7, sp, #0
 8004af2:	2300      	movs	r3, #0
 8004af4:	60fb      	str	r3, [r7, #12]
 8004af6:	2300      	movs	r3, #0
 8004af8:	60bb      	str	r3, [r7, #8]
 8004afa:	2300      	movs	r3, #0
 8004afc:	617b      	str	r3, [r7, #20]
 8004afe:	2300      	movs	r3, #0
 8004b00:	607b      	str	r3, [r7, #4]
 8004b02:	2300      	movs	r3, #0
 8004b04:	613b      	str	r3, [r7, #16]
 8004b06:	4b1e      	ldr	r3, [pc, #120]	; (8004b80 <HAL_RCC_GetSysClockFreq+0x94>)
 8004b08:	685b      	ldr	r3, [r3, #4]
 8004b0a:	60fb      	str	r3, [r7, #12]
 8004b0c:	68fb      	ldr	r3, [r7, #12]
 8004b0e:	f003 030c 	and.w	r3, r3, #12
 8004b12:	2b04      	cmp	r3, #4
 8004b14:	d002      	beq.n	8004b1c <HAL_RCC_GetSysClockFreq+0x30>
 8004b16:	2b08      	cmp	r3, #8
 8004b18:	d003      	beq.n	8004b22 <HAL_RCC_GetSysClockFreq+0x36>
 8004b1a:	e027      	b.n	8004b6c <HAL_RCC_GetSysClockFreq+0x80>
 8004b1c:	4b19      	ldr	r3, [pc, #100]	; (8004b84 <HAL_RCC_GetSysClockFreq+0x98>)
 8004b1e:	613b      	str	r3, [r7, #16]
 8004b20:	e027      	b.n	8004b72 <HAL_RCC_GetSysClockFreq+0x86>
 8004b22:	68fb      	ldr	r3, [r7, #12]
 8004b24:	0c9b      	lsrs	r3, r3, #18
 8004b26:	f003 030f 	and.w	r3, r3, #15
 8004b2a:	4a17      	ldr	r2, [pc, #92]	; (8004b88 <HAL_RCC_GetSysClockFreq+0x9c>)
 8004b2c:	5cd3      	ldrb	r3, [r2, r3]
 8004b2e:	607b      	str	r3, [r7, #4]
 8004b30:	68fb      	ldr	r3, [r7, #12]
 8004b32:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8004b36:	2b00      	cmp	r3, #0
 8004b38:	d010      	beq.n	8004b5c <HAL_RCC_GetSysClockFreq+0x70>
 8004b3a:	4b11      	ldr	r3, [pc, #68]	; (8004b80 <HAL_RCC_GetSysClockFreq+0x94>)
 8004b3c:	685b      	ldr	r3, [r3, #4]
 8004b3e:	0c5b      	lsrs	r3, r3, #17
 8004b40:	f003 0301 	and.w	r3, r3, #1
 8004b44:	4a11      	ldr	r2, [pc, #68]	; (8004b8c <HAL_RCC_GetSysClockFreq+0xa0>)
 8004b46:	5cd3      	ldrb	r3, [r2, r3]
 8004b48:	60bb      	str	r3, [r7, #8]
 8004b4a:	687b      	ldr	r3, [r7, #4]
 8004b4c:	4a0d      	ldr	r2, [pc, #52]	; (8004b84 <HAL_RCC_GetSysClockFreq+0x98>)
 8004b4e:	fb03 f202 	mul.w	r2, r3, r2
 8004b52:	68bb      	ldr	r3, [r7, #8]
 8004b54:	fbb2 f3f3 	udiv	r3, r2, r3
 8004b58:	617b      	str	r3, [r7, #20]
 8004b5a:	e004      	b.n	8004b66 <HAL_RCC_GetSysClockFreq+0x7a>
 8004b5c:	687b      	ldr	r3, [r7, #4]
 8004b5e:	4a0c      	ldr	r2, [pc, #48]	; (8004b90 <HAL_RCC_GetSysClockFreq+0xa4>)
 8004b60:	fb02 f303 	mul.w	r3, r2, r3
 8004b64:	617b      	str	r3, [r7, #20]
 8004b66:	697b      	ldr	r3, [r7, #20]
 8004b68:	613b      	str	r3, [r7, #16]
 8004b6a:	e002      	b.n	8004b72 <HAL_RCC_GetSysClockFreq+0x86>
 8004b6c:	4b05      	ldr	r3, [pc, #20]	; (8004b84 <HAL_RCC_GetSysClockFreq+0x98>)
 8004b6e:	613b      	str	r3, [r7, #16]
 8004b70:	bf00      	nop
 8004b72:	693b      	ldr	r3, [r7, #16]
 8004b74:	4618      	mov	r0, r3
 8004b76:	371c      	adds	r7, #28
 8004b78:	46bd      	mov	sp, r7
 8004b7a:	bc80      	pop	{r7}
 8004b7c:	4770      	bx	lr
 8004b7e:	bf00      	nop
 8004b80:	40021000 	.word	0x40021000
 8004b84:	007a1200 	.word	0x007a1200
 8004b88:	080063a8 	.word	0x080063a8
 8004b8c:	080063b8 	.word	0x080063b8
 8004b90:	003d0900 	.word	0x003d0900

08004b94 <HAL_RCC_GetHCLKFreq>:
 8004b94:	b480      	push	{r7}
 8004b96:	af00      	add	r7, sp, #0
 8004b98:	4b02      	ldr	r3, [pc, #8]	; (8004ba4 <HAL_RCC_GetHCLKFreq+0x10>)
 8004b9a:	681b      	ldr	r3, [r3, #0]
 8004b9c:	4618      	mov	r0, r3
 8004b9e:	46bd      	mov	sp, r7
 8004ba0:	bc80      	pop	{r7}
 8004ba2:	4770      	bx	lr
 8004ba4:	2000000c 	.word	0x2000000c

08004ba8 <HAL_RCC_GetPCLK1Freq>:
 8004ba8:	b580      	push	{r7, lr}
 8004baa:	af00      	add	r7, sp, #0
 8004bac:	f7ff fff2 	bl	8004b94 <HAL_RCC_GetHCLKFreq>
 8004bb0:	4602      	mov	r2, r0
 8004bb2:	4b05      	ldr	r3, [pc, #20]	; (8004bc8 <HAL_RCC_GetPCLK1Freq+0x20>)
 8004bb4:	685b      	ldr	r3, [r3, #4]
 8004bb6:	0a1b      	lsrs	r3, r3, #8
 8004bb8:	f003 0307 	and.w	r3, r3, #7
 8004bbc:	4903      	ldr	r1, [pc, #12]	; (8004bcc <HAL_RCC_GetPCLK1Freq+0x24>)
 8004bbe:	5ccb      	ldrb	r3, [r1, r3]
 8004bc0:	fa22 f303 	lsr.w	r3, r2, r3
 8004bc4:	4618      	mov	r0, r3
 8004bc6:	bd80      	pop	{r7, pc}
 8004bc8:	40021000 	.word	0x40021000
 8004bcc:	080063a0 	.word	0x080063a0

08004bd0 <HAL_RCC_GetPCLK2Freq>:
 8004bd0:	b580      	push	{r7, lr}
 8004bd2:	af00      	add	r7, sp, #0
 8004bd4:	f7ff ffde 	bl	8004b94 <HAL_RCC_GetHCLKFreq>
 8004bd8:	4602      	mov	r2, r0
 8004bda:	4b05      	ldr	r3, [pc, #20]	; (8004bf0 <HAL_RCC_GetPCLK2Freq+0x20>)
 8004bdc:	685b      	ldr	r3, [r3, #4]
 8004bde:	0adb      	lsrs	r3, r3, #11
 8004be0:	f003 0307 	and.w	r3, r3, #7
 8004be4:	4903      	ldr	r1, [pc, #12]	; (8004bf4 <HAL_RCC_GetPCLK2Freq+0x24>)
 8004be6:	5ccb      	ldrb	r3, [r1, r3]
 8004be8:	fa22 f303 	lsr.w	r3, r2, r3
 8004bec:	4618      	mov	r0, r3
 8004bee:	bd80      	pop	{r7, pc}
 8004bf0:	40021000 	.word	0x40021000
 8004bf4:	080063a0 	.word	0x080063a0

08004bf8 <RCC_Delay>:
 8004bf8:	b480      	push	{r7}
 8004bfa:	b085      	sub	sp, #20
 8004bfc:	af00      	add	r7, sp, #0
 8004bfe:	6078      	str	r0, [r7, #4]
 8004c00:	4b0a      	ldr	r3, [pc, #40]	; (8004c2c <RCC_Delay+0x34>)
 8004c02:	681b      	ldr	r3, [r3, #0]
 8004c04:	4a0a      	ldr	r2, [pc, #40]	; (8004c30 <RCC_Delay+0x38>)
 8004c06:	fba2 2303 	umull	r2, r3, r2, r3
 8004c0a:	0a5b      	lsrs	r3, r3, #9
 8004c0c:	687a      	ldr	r2, [r7, #4]
 8004c0e:	fb02 f303 	mul.w	r3, r2, r3
 8004c12:	60fb      	str	r3, [r7, #12]
 8004c14:	bf00      	nop
 8004c16:	68fb      	ldr	r3, [r7, #12]
 8004c18:	1e5a      	subs	r2, r3, #1
 8004c1a:	60fa      	str	r2, [r7, #12]
 8004c1c:	2b00      	cmp	r3, #0
 8004c1e:	d1f9      	bne.n	8004c14 <RCC_Delay+0x1c>
 8004c20:	bf00      	nop
 8004c22:	bf00      	nop
 8004c24:	3714      	adds	r7, #20
 8004c26:	46bd      	mov	sp, r7
 8004c28:	bc80      	pop	{r7}
 8004c2a:	4770      	bx	lr
 8004c2c:	2000000c 	.word	0x2000000c
 8004c30:	10624dd3 	.word	0x10624dd3

08004c34 <HAL_RCCEx_PeriphCLKConfig>:
 8004c34:	b580      	push	{r7, lr}
 8004c36:	b086      	sub	sp, #24
 8004c38:	af00      	add	r7, sp, #0
 8004c3a:	6078      	str	r0, [r7, #4]
 8004c3c:	2300      	movs	r3, #0
 8004c3e:	613b      	str	r3, [r7, #16]
 8004c40:	2300      	movs	r3, #0
 8004c42:	60fb      	str	r3, [r7, #12]
 8004c44:	687b      	ldr	r3, [r7, #4]
 8004c46:	681b      	ldr	r3, [r3, #0]
 8004c48:	f003 0301 	and.w	r3, r3, #1
 8004c4c:	2b00      	cmp	r3, #0
 8004c4e:	d07d      	beq.n	8004d4c <HAL_RCCEx_PeriphCLKConfig+0x118>
 8004c50:	2300      	movs	r3, #0
 8004c52:	75fb      	strb	r3, [r7, #23]
 8004c54:	4b4f      	ldr	r3, [pc, #316]	; (8004d94 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8004c56:	69db      	ldr	r3, [r3, #28]
 8004c58:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004c5c:	2b00      	cmp	r3, #0
 8004c5e:	d10d      	bne.n	8004c7c <HAL_RCCEx_PeriphCLKConfig+0x48>
 8004c60:	4b4c      	ldr	r3, [pc, #304]	; (8004d94 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8004c62:	69db      	ldr	r3, [r3, #28]
 8004c64:	4a4b      	ldr	r2, [pc, #300]	; (8004d94 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8004c66:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8004c6a:	61d3      	str	r3, [r2, #28]
 8004c6c:	4b49      	ldr	r3, [pc, #292]	; (8004d94 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8004c6e:	69db      	ldr	r3, [r3, #28]
 8004c70:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004c74:	60bb      	str	r3, [r7, #8]
 8004c76:	68bb      	ldr	r3, [r7, #8]
 8004c78:	2301      	movs	r3, #1
 8004c7a:	75fb      	strb	r3, [r7, #23]
 8004c7c:	4b46      	ldr	r3, [pc, #280]	; (8004d98 <HAL_RCCEx_PeriphCLKConfig+0x164>)
 8004c7e:	681b      	ldr	r3, [r3, #0]
 8004c80:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004c84:	2b00      	cmp	r3, #0
 8004c86:	d118      	bne.n	8004cba <HAL_RCCEx_PeriphCLKConfig+0x86>
 8004c88:	4b43      	ldr	r3, [pc, #268]	; (8004d98 <HAL_RCCEx_PeriphCLKConfig+0x164>)
 8004c8a:	681b      	ldr	r3, [r3, #0]
 8004c8c:	4a42      	ldr	r2, [pc, #264]	; (8004d98 <HAL_RCCEx_PeriphCLKConfig+0x164>)
 8004c8e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004c92:	6013      	str	r3, [r2, #0]
 8004c94:	f7fd fbca 	bl	800242c <HAL_GetTick>
 8004c98:	6138      	str	r0, [r7, #16]
 8004c9a:	e008      	b.n	8004cae <HAL_RCCEx_PeriphCLKConfig+0x7a>
 8004c9c:	f7fd fbc6 	bl	800242c <HAL_GetTick>
 8004ca0:	4602      	mov	r2, r0
 8004ca2:	693b      	ldr	r3, [r7, #16]
 8004ca4:	1ad3      	subs	r3, r2, r3
 8004ca6:	2b64      	cmp	r3, #100	; 0x64
 8004ca8:	d901      	bls.n	8004cae <HAL_RCCEx_PeriphCLKConfig+0x7a>
 8004caa:	2303      	movs	r3, #3
 8004cac:	e06d      	b.n	8004d8a <HAL_RCCEx_PeriphCLKConfig+0x156>
 8004cae:	4b3a      	ldr	r3, [pc, #232]	; (8004d98 <HAL_RCCEx_PeriphCLKConfig+0x164>)
 8004cb0:	681b      	ldr	r3, [r3, #0]
 8004cb2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004cb6:	2b00      	cmp	r3, #0
 8004cb8:	d0f0      	beq.n	8004c9c <HAL_RCCEx_PeriphCLKConfig+0x68>
 8004cba:	4b36      	ldr	r3, [pc, #216]	; (8004d94 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8004cbc:	6a1b      	ldr	r3, [r3, #32]
 8004cbe:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8004cc2:	60fb      	str	r3, [r7, #12]
 8004cc4:	68fb      	ldr	r3, [r7, #12]
 8004cc6:	2b00      	cmp	r3, #0
 8004cc8:	d02e      	beq.n	8004d28 <HAL_RCCEx_PeriphCLKConfig+0xf4>
 8004cca:	687b      	ldr	r3, [r7, #4]
 8004ccc:	685b      	ldr	r3, [r3, #4]
 8004cce:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8004cd2:	68fa      	ldr	r2, [r7, #12]
 8004cd4:	429a      	cmp	r2, r3
 8004cd6:	d027      	beq.n	8004d28 <HAL_RCCEx_PeriphCLKConfig+0xf4>
 8004cd8:	4b2e      	ldr	r3, [pc, #184]	; (8004d94 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8004cda:	6a1b      	ldr	r3, [r3, #32]
 8004cdc:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8004ce0:	60fb      	str	r3, [r7, #12]
 8004ce2:	4b2e      	ldr	r3, [pc, #184]	; (8004d9c <HAL_RCCEx_PeriphCLKConfig+0x168>)
 8004ce4:	2201      	movs	r2, #1
 8004ce6:	601a      	str	r2, [r3, #0]
 8004ce8:	4b2c      	ldr	r3, [pc, #176]	; (8004d9c <HAL_RCCEx_PeriphCLKConfig+0x168>)
 8004cea:	2200      	movs	r2, #0
 8004cec:	601a      	str	r2, [r3, #0]
 8004cee:	4a29      	ldr	r2, [pc, #164]	; (8004d94 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8004cf0:	68fb      	ldr	r3, [r7, #12]
 8004cf2:	6213      	str	r3, [r2, #32]
 8004cf4:	68fb      	ldr	r3, [r7, #12]
 8004cf6:	f003 0301 	and.w	r3, r3, #1
 8004cfa:	2b00      	cmp	r3, #0
 8004cfc:	d014      	beq.n	8004d28 <HAL_RCCEx_PeriphCLKConfig+0xf4>
 8004cfe:	f7fd fb95 	bl	800242c <HAL_GetTick>
 8004d02:	6138      	str	r0, [r7, #16]
 8004d04:	e00a      	b.n	8004d1c <HAL_RCCEx_PeriphCLKConfig+0xe8>
 8004d06:	f7fd fb91 	bl	800242c <HAL_GetTick>
 8004d0a:	4602      	mov	r2, r0
 8004d0c:	693b      	ldr	r3, [r7, #16]
 8004d0e:	1ad3      	subs	r3, r2, r3
 8004d10:	f241 3288 	movw	r2, #5000	; 0x1388
 8004d14:	4293      	cmp	r3, r2
 8004d16:	d901      	bls.n	8004d1c <HAL_RCCEx_PeriphCLKConfig+0xe8>
 8004d18:	2303      	movs	r3, #3
 8004d1a:	e036      	b.n	8004d8a <HAL_RCCEx_PeriphCLKConfig+0x156>
 8004d1c:	4b1d      	ldr	r3, [pc, #116]	; (8004d94 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8004d1e:	6a1b      	ldr	r3, [r3, #32]
 8004d20:	f003 0302 	and.w	r3, r3, #2
 8004d24:	2b00      	cmp	r3, #0
 8004d26:	d0ee      	beq.n	8004d06 <HAL_RCCEx_PeriphCLKConfig+0xd2>
 8004d28:	4b1a      	ldr	r3, [pc, #104]	; (8004d94 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8004d2a:	6a1b      	ldr	r3, [r3, #32]
 8004d2c:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 8004d30:	687b      	ldr	r3, [r7, #4]
 8004d32:	685b      	ldr	r3, [r3, #4]
 8004d34:	4917      	ldr	r1, [pc, #92]	; (8004d94 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8004d36:	4313      	orrs	r3, r2
 8004d38:	620b      	str	r3, [r1, #32]
 8004d3a:	7dfb      	ldrb	r3, [r7, #23]
 8004d3c:	2b01      	cmp	r3, #1
 8004d3e:	d105      	bne.n	8004d4c <HAL_RCCEx_PeriphCLKConfig+0x118>
 8004d40:	4b14      	ldr	r3, [pc, #80]	; (8004d94 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8004d42:	69db      	ldr	r3, [r3, #28]
 8004d44:	4a13      	ldr	r2, [pc, #76]	; (8004d94 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8004d46:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8004d4a:	61d3      	str	r3, [r2, #28]
 8004d4c:	687b      	ldr	r3, [r7, #4]
 8004d4e:	681b      	ldr	r3, [r3, #0]
 8004d50:	f003 0302 	and.w	r3, r3, #2
 8004d54:	2b00      	cmp	r3, #0
 8004d56:	d008      	beq.n	8004d6a <HAL_RCCEx_PeriphCLKConfig+0x136>
 8004d58:	4b0e      	ldr	r3, [pc, #56]	; (8004d94 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8004d5a:	685b      	ldr	r3, [r3, #4]
 8004d5c:	f423 4240 	bic.w	r2, r3, #49152	; 0xc000
 8004d60:	687b      	ldr	r3, [r7, #4]
 8004d62:	689b      	ldr	r3, [r3, #8]
 8004d64:	490b      	ldr	r1, [pc, #44]	; (8004d94 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8004d66:	4313      	orrs	r3, r2
 8004d68:	604b      	str	r3, [r1, #4]
 8004d6a:	687b      	ldr	r3, [r7, #4]
 8004d6c:	681b      	ldr	r3, [r3, #0]
 8004d6e:	f003 0310 	and.w	r3, r3, #16
 8004d72:	2b00      	cmp	r3, #0
 8004d74:	d008      	beq.n	8004d88 <HAL_RCCEx_PeriphCLKConfig+0x154>
 8004d76:	4b07      	ldr	r3, [pc, #28]	; (8004d94 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8004d78:	685b      	ldr	r3, [r3, #4]
 8004d7a:	f423 0280 	bic.w	r2, r3, #4194304	; 0x400000
 8004d7e:	687b      	ldr	r3, [r7, #4]
 8004d80:	68db      	ldr	r3, [r3, #12]
 8004d82:	4904      	ldr	r1, [pc, #16]	; (8004d94 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8004d84:	4313      	orrs	r3, r2
 8004d86:	604b      	str	r3, [r1, #4]
 8004d88:	2300      	movs	r3, #0
 8004d8a:	4618      	mov	r0, r3
 8004d8c:	3718      	adds	r7, #24
 8004d8e:	46bd      	mov	sp, r7
 8004d90:	bd80      	pop	{r7, pc}
 8004d92:	bf00      	nop
 8004d94:	40021000 	.word	0x40021000
 8004d98:	40007000 	.word	0x40007000
 8004d9c:	42420440 	.word	0x42420440

08004da0 <HAL_RCCEx_GetPeriphCLKFreq>:
 8004da0:	b580      	push	{r7, lr}
 8004da2:	b088      	sub	sp, #32
 8004da4:	af00      	add	r7, sp, #0
 8004da6:	6078      	str	r0, [r7, #4]
 8004da8:	2300      	movs	r3, #0
 8004daa:	617b      	str	r3, [r7, #20]
 8004dac:	2300      	movs	r3, #0
 8004dae:	61fb      	str	r3, [r7, #28]
 8004db0:	2300      	movs	r3, #0
 8004db2:	613b      	str	r3, [r7, #16]
 8004db4:	2300      	movs	r3, #0
 8004db6:	60fb      	str	r3, [r7, #12]
 8004db8:	2300      	movs	r3, #0
 8004dba:	61bb      	str	r3, [r7, #24]
 8004dbc:	687b      	ldr	r3, [r7, #4]
 8004dbe:	2b10      	cmp	r3, #16
 8004dc0:	d00a      	beq.n	8004dd8 <HAL_RCCEx_GetPeriphCLKFreq+0x38>
 8004dc2:	687b      	ldr	r3, [r7, #4]
 8004dc4:	2b10      	cmp	r3, #16
 8004dc6:	f200 808a 	bhi.w	8004ede <HAL_RCCEx_GetPeriphCLKFreq+0x13e>
 8004dca:	687b      	ldr	r3, [r7, #4]
 8004dcc:	2b01      	cmp	r3, #1
 8004dce:	d045      	beq.n	8004e5c <HAL_RCCEx_GetPeriphCLKFreq+0xbc>
 8004dd0:	687b      	ldr	r3, [r7, #4]
 8004dd2:	2b02      	cmp	r3, #2
 8004dd4:	d075      	beq.n	8004ec2 <HAL_RCCEx_GetPeriphCLKFreq+0x122>
 8004dd6:	e082      	b.n	8004ede <HAL_RCCEx_GetPeriphCLKFreq+0x13e>
 8004dd8:	4b46      	ldr	r3, [pc, #280]	; (8004ef4 <HAL_RCCEx_GetPeriphCLKFreq+0x154>)
 8004dda:	685b      	ldr	r3, [r3, #4]
 8004ddc:	60fb      	str	r3, [r7, #12]
 8004dde:	4b45      	ldr	r3, [pc, #276]	; (8004ef4 <HAL_RCCEx_GetPeriphCLKFreq+0x154>)
 8004de0:	681b      	ldr	r3, [r3, #0]
 8004de2:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8004de6:	2b00      	cmp	r3, #0
 8004de8:	d07b      	beq.n	8004ee2 <HAL_RCCEx_GetPeriphCLKFreq+0x142>
 8004dea:	68fb      	ldr	r3, [r7, #12]
 8004dec:	0c9b      	lsrs	r3, r3, #18
 8004dee:	f003 030f 	and.w	r3, r3, #15
 8004df2:	4a41      	ldr	r2, [pc, #260]	; (8004ef8 <HAL_RCCEx_GetPeriphCLKFreq+0x158>)
 8004df4:	5cd3      	ldrb	r3, [r2, r3]
 8004df6:	613b      	str	r3, [r7, #16]
 8004df8:	68fb      	ldr	r3, [r7, #12]
 8004dfa:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8004dfe:	2b00      	cmp	r3, #0
 8004e00:	d015      	beq.n	8004e2e <HAL_RCCEx_GetPeriphCLKFreq+0x8e>
 8004e02:	4b3c      	ldr	r3, [pc, #240]	; (8004ef4 <HAL_RCCEx_GetPeriphCLKFreq+0x154>)
 8004e04:	685b      	ldr	r3, [r3, #4]
 8004e06:	0c5b      	lsrs	r3, r3, #17
 8004e08:	f003 0301 	and.w	r3, r3, #1
 8004e0c:	4a3b      	ldr	r2, [pc, #236]	; (8004efc <HAL_RCCEx_GetPeriphCLKFreq+0x15c>)
 8004e0e:	5cd3      	ldrb	r3, [r2, r3]
 8004e10:	617b      	str	r3, [r7, #20]
 8004e12:	68fb      	ldr	r3, [r7, #12]
 8004e14:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8004e18:	2b00      	cmp	r3, #0
 8004e1a:	d00d      	beq.n	8004e38 <HAL_RCCEx_GetPeriphCLKFreq+0x98>
 8004e1c:	4a38      	ldr	r2, [pc, #224]	; (8004f00 <HAL_RCCEx_GetPeriphCLKFreq+0x160>)
 8004e1e:	697b      	ldr	r3, [r7, #20]
 8004e20:	fbb2 f2f3 	udiv	r2, r2, r3
 8004e24:	693b      	ldr	r3, [r7, #16]
 8004e26:	fb02 f303 	mul.w	r3, r2, r3
 8004e2a:	61fb      	str	r3, [r7, #28]
 8004e2c:	e004      	b.n	8004e38 <HAL_RCCEx_GetPeriphCLKFreq+0x98>
 8004e2e:	693b      	ldr	r3, [r7, #16]
 8004e30:	4a34      	ldr	r2, [pc, #208]	; (8004f04 <HAL_RCCEx_GetPeriphCLKFreq+0x164>)
 8004e32:	fb02 f303 	mul.w	r3, r2, r3
 8004e36:	61fb      	str	r3, [r7, #28]
 8004e38:	4b2e      	ldr	r3, [pc, #184]	; (8004ef4 <HAL_RCCEx_GetPeriphCLKFreq+0x154>)
 8004e3a:	685b      	ldr	r3, [r3, #4]
 8004e3c:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8004e40:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8004e44:	d102      	bne.n	8004e4c <HAL_RCCEx_GetPeriphCLKFreq+0xac>
 8004e46:	69fb      	ldr	r3, [r7, #28]
 8004e48:	61bb      	str	r3, [r7, #24]
 8004e4a:	e04a      	b.n	8004ee2 <HAL_RCCEx_GetPeriphCLKFreq+0x142>
 8004e4c:	69fb      	ldr	r3, [r7, #28]
 8004e4e:	005b      	lsls	r3, r3, #1
 8004e50:	4a2d      	ldr	r2, [pc, #180]	; (8004f08 <HAL_RCCEx_GetPeriphCLKFreq+0x168>)
 8004e52:	fba2 2303 	umull	r2, r3, r2, r3
 8004e56:	085b      	lsrs	r3, r3, #1
 8004e58:	61bb      	str	r3, [r7, #24]
 8004e5a:	e042      	b.n	8004ee2 <HAL_RCCEx_GetPeriphCLKFreq+0x142>
 8004e5c:	4b25      	ldr	r3, [pc, #148]	; (8004ef4 <HAL_RCCEx_GetPeriphCLKFreq+0x154>)
 8004e5e:	6a1b      	ldr	r3, [r3, #32]
 8004e60:	60fb      	str	r3, [r7, #12]
 8004e62:	68fb      	ldr	r3, [r7, #12]
 8004e64:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8004e68:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8004e6c:	d108      	bne.n	8004e80 <HAL_RCCEx_GetPeriphCLKFreq+0xe0>
 8004e6e:	68fb      	ldr	r3, [r7, #12]
 8004e70:	f003 0302 	and.w	r3, r3, #2
 8004e74:	2b00      	cmp	r3, #0
 8004e76:	d003      	beq.n	8004e80 <HAL_RCCEx_GetPeriphCLKFreq+0xe0>
 8004e78:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8004e7c:	61bb      	str	r3, [r7, #24]
 8004e7e:	e01f      	b.n	8004ec0 <HAL_RCCEx_GetPeriphCLKFreq+0x120>
 8004e80:	68fb      	ldr	r3, [r7, #12]
 8004e82:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8004e86:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8004e8a:	d109      	bne.n	8004ea0 <HAL_RCCEx_GetPeriphCLKFreq+0x100>
 8004e8c:	4b19      	ldr	r3, [pc, #100]	; (8004ef4 <HAL_RCCEx_GetPeriphCLKFreq+0x154>)
 8004e8e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004e90:	f003 0302 	and.w	r3, r3, #2
 8004e94:	2b00      	cmp	r3, #0
 8004e96:	d003      	beq.n	8004ea0 <HAL_RCCEx_GetPeriphCLKFreq+0x100>
 8004e98:	f649 4340 	movw	r3, #40000	; 0x9c40
 8004e9c:	61bb      	str	r3, [r7, #24]
 8004e9e:	e00f      	b.n	8004ec0 <HAL_RCCEx_GetPeriphCLKFreq+0x120>
 8004ea0:	68fb      	ldr	r3, [r7, #12]
 8004ea2:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8004ea6:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8004eaa:	d11c      	bne.n	8004ee6 <HAL_RCCEx_GetPeriphCLKFreq+0x146>
 8004eac:	4b11      	ldr	r3, [pc, #68]	; (8004ef4 <HAL_RCCEx_GetPeriphCLKFreq+0x154>)
 8004eae:	681b      	ldr	r3, [r3, #0]
 8004eb0:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004eb4:	2b00      	cmp	r3, #0
 8004eb6:	d016      	beq.n	8004ee6 <HAL_RCCEx_GetPeriphCLKFreq+0x146>
 8004eb8:	f24f 4324 	movw	r3, #62500	; 0xf424
 8004ebc:	61bb      	str	r3, [r7, #24]
 8004ebe:	e012      	b.n	8004ee6 <HAL_RCCEx_GetPeriphCLKFreq+0x146>
 8004ec0:	e011      	b.n	8004ee6 <HAL_RCCEx_GetPeriphCLKFreq+0x146>
 8004ec2:	f7ff fe85 	bl	8004bd0 <HAL_RCC_GetPCLK2Freq>
 8004ec6:	4602      	mov	r2, r0
 8004ec8:	4b0a      	ldr	r3, [pc, #40]	; (8004ef4 <HAL_RCCEx_GetPeriphCLKFreq+0x154>)
 8004eca:	685b      	ldr	r3, [r3, #4]
 8004ecc:	0b9b      	lsrs	r3, r3, #14
 8004ece:	f003 0303 	and.w	r3, r3, #3
 8004ed2:	3301      	adds	r3, #1
 8004ed4:	005b      	lsls	r3, r3, #1
 8004ed6:	fbb2 f3f3 	udiv	r3, r2, r3
 8004eda:	61bb      	str	r3, [r7, #24]
 8004edc:	e004      	b.n	8004ee8 <HAL_RCCEx_GetPeriphCLKFreq+0x148>
 8004ede:	bf00      	nop
 8004ee0:	e002      	b.n	8004ee8 <HAL_RCCEx_GetPeriphCLKFreq+0x148>
 8004ee2:	bf00      	nop
 8004ee4:	e000      	b.n	8004ee8 <HAL_RCCEx_GetPeriphCLKFreq+0x148>
 8004ee6:	bf00      	nop
 8004ee8:	69bb      	ldr	r3, [r7, #24]
 8004eea:	4618      	mov	r0, r3
 8004eec:	3720      	adds	r7, #32
 8004eee:	46bd      	mov	sp, r7
 8004ef0:	bd80      	pop	{r7, pc}
 8004ef2:	bf00      	nop
 8004ef4:	40021000 	.word	0x40021000
 8004ef8:	080063bc 	.word	0x080063bc
 8004efc:	080063cc 	.word	0x080063cc
 8004f00:	007a1200 	.word	0x007a1200
 8004f04:	003d0900 	.word	0x003d0900
 8004f08:	aaaaaaab 	.word	0xaaaaaaab

08004f0c <HAL_TIM_Base_Init>:
 8004f0c:	b580      	push	{r7, lr}
 8004f0e:	b082      	sub	sp, #8
 8004f10:	af00      	add	r7, sp, #0
 8004f12:	6078      	str	r0, [r7, #4]
 8004f14:	687b      	ldr	r3, [r7, #4]
 8004f16:	2b00      	cmp	r3, #0
 8004f18:	d101      	bne.n	8004f1e <HAL_TIM_Base_Init+0x12>
 8004f1a:	2301      	movs	r3, #1
 8004f1c:	e041      	b.n	8004fa2 <HAL_TIM_Base_Init+0x96>
 8004f1e:	687b      	ldr	r3, [r7, #4]
 8004f20:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8004f24:	b2db      	uxtb	r3, r3
 8004f26:	2b00      	cmp	r3, #0
 8004f28:	d106      	bne.n	8004f38 <HAL_TIM_Base_Init+0x2c>
 8004f2a:	687b      	ldr	r3, [r7, #4]
 8004f2c:	2200      	movs	r2, #0
 8004f2e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004f32:	6878      	ldr	r0, [r7, #4]
 8004f34:	f7fd f820 	bl	8001f78 <HAL_TIM_Base_MspInit>
 8004f38:	687b      	ldr	r3, [r7, #4]
 8004f3a:	2202      	movs	r2, #2
 8004f3c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004f40:	687b      	ldr	r3, [r7, #4]
 8004f42:	681a      	ldr	r2, [r3, #0]
 8004f44:	687b      	ldr	r3, [r7, #4]
 8004f46:	3304      	adds	r3, #4
 8004f48:	4619      	mov	r1, r3
 8004f4a:	4610      	mov	r0, r2
 8004f4c:	f000 fabe 	bl	80054cc <TIM_Base_SetConfig>
 8004f50:	687b      	ldr	r3, [r7, #4]
 8004f52:	2201      	movs	r2, #1
 8004f54:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8004f58:	687b      	ldr	r3, [r7, #4]
 8004f5a:	2201      	movs	r2, #1
 8004f5c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004f60:	687b      	ldr	r3, [r7, #4]
 8004f62:	2201      	movs	r2, #1
 8004f64:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8004f68:	687b      	ldr	r3, [r7, #4]
 8004f6a:	2201      	movs	r2, #1
 8004f6c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8004f70:	687b      	ldr	r3, [r7, #4]
 8004f72:	2201      	movs	r2, #1
 8004f74:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8004f78:	687b      	ldr	r3, [r7, #4]
 8004f7a:	2201      	movs	r2, #1
 8004f7c:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8004f80:	687b      	ldr	r3, [r7, #4]
 8004f82:	2201      	movs	r2, #1
 8004f84:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8004f88:	687b      	ldr	r3, [r7, #4]
 8004f8a:	2201      	movs	r2, #1
 8004f8c:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8004f90:	687b      	ldr	r3, [r7, #4]
 8004f92:	2201      	movs	r2, #1
 8004f94:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8004f98:	687b      	ldr	r3, [r7, #4]
 8004f9a:	2201      	movs	r2, #1
 8004f9c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004fa0:	2300      	movs	r3, #0
 8004fa2:	4618      	mov	r0, r3
 8004fa4:	3708      	adds	r7, #8
 8004fa6:	46bd      	mov	sp, r7
 8004fa8:	bd80      	pop	{r7, pc}
	...

08004fac <HAL_TIM_Base_Start>:
 8004fac:	b480      	push	{r7}
 8004fae:	b085      	sub	sp, #20
 8004fb0:	af00      	add	r7, sp, #0
 8004fb2:	6078      	str	r0, [r7, #4]
 8004fb4:	687b      	ldr	r3, [r7, #4]
 8004fb6:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8004fba:	b2db      	uxtb	r3, r3
 8004fbc:	2b01      	cmp	r3, #1
 8004fbe:	d001      	beq.n	8004fc4 <HAL_TIM_Base_Start+0x18>
 8004fc0:	2301      	movs	r3, #1
 8004fc2:	e032      	b.n	800502a <HAL_TIM_Base_Start+0x7e>
 8004fc4:	687b      	ldr	r3, [r7, #4]
 8004fc6:	2202      	movs	r2, #2
 8004fc8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004fcc:	687b      	ldr	r3, [r7, #4]
 8004fce:	681b      	ldr	r3, [r3, #0]
 8004fd0:	4a18      	ldr	r2, [pc, #96]	; (8005034 <HAL_TIM_Base_Start+0x88>)
 8004fd2:	4293      	cmp	r3, r2
 8004fd4:	d00e      	beq.n	8004ff4 <HAL_TIM_Base_Start+0x48>
 8004fd6:	687b      	ldr	r3, [r7, #4]
 8004fd8:	681b      	ldr	r3, [r3, #0]
 8004fda:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8004fde:	d009      	beq.n	8004ff4 <HAL_TIM_Base_Start+0x48>
 8004fe0:	687b      	ldr	r3, [r7, #4]
 8004fe2:	681b      	ldr	r3, [r3, #0]
 8004fe4:	4a14      	ldr	r2, [pc, #80]	; (8005038 <HAL_TIM_Base_Start+0x8c>)
 8004fe6:	4293      	cmp	r3, r2
 8004fe8:	d004      	beq.n	8004ff4 <HAL_TIM_Base_Start+0x48>
 8004fea:	687b      	ldr	r3, [r7, #4]
 8004fec:	681b      	ldr	r3, [r3, #0]
 8004fee:	4a13      	ldr	r2, [pc, #76]	; (800503c <HAL_TIM_Base_Start+0x90>)
 8004ff0:	4293      	cmp	r3, r2
 8004ff2:	d111      	bne.n	8005018 <HAL_TIM_Base_Start+0x6c>
 8004ff4:	687b      	ldr	r3, [r7, #4]
 8004ff6:	681b      	ldr	r3, [r3, #0]
 8004ff8:	689b      	ldr	r3, [r3, #8]
 8004ffa:	f003 0307 	and.w	r3, r3, #7
 8004ffe:	60fb      	str	r3, [r7, #12]
 8005000:	68fb      	ldr	r3, [r7, #12]
 8005002:	2b06      	cmp	r3, #6
 8005004:	d010      	beq.n	8005028 <HAL_TIM_Base_Start+0x7c>
 8005006:	687b      	ldr	r3, [r7, #4]
 8005008:	681b      	ldr	r3, [r3, #0]
 800500a:	681a      	ldr	r2, [r3, #0]
 800500c:	687b      	ldr	r3, [r7, #4]
 800500e:	681b      	ldr	r3, [r3, #0]
 8005010:	f042 0201 	orr.w	r2, r2, #1
 8005014:	601a      	str	r2, [r3, #0]
 8005016:	e007      	b.n	8005028 <HAL_TIM_Base_Start+0x7c>
 8005018:	687b      	ldr	r3, [r7, #4]
 800501a:	681b      	ldr	r3, [r3, #0]
 800501c:	681a      	ldr	r2, [r3, #0]
 800501e:	687b      	ldr	r3, [r7, #4]
 8005020:	681b      	ldr	r3, [r3, #0]
 8005022:	f042 0201 	orr.w	r2, r2, #1
 8005026:	601a      	str	r2, [r3, #0]
 8005028:	2300      	movs	r3, #0
 800502a:	4618      	mov	r0, r3
 800502c:	3714      	adds	r7, #20
 800502e:	46bd      	mov	sp, r7
 8005030:	bc80      	pop	{r7}
 8005032:	4770      	bx	lr
 8005034:	40012c00 	.word	0x40012c00
 8005038:	40000400 	.word	0x40000400
 800503c:	40000800 	.word	0x40000800

08005040 <HAL_TIM_Base_Start_IT>:
 8005040:	b480      	push	{r7}
 8005042:	b085      	sub	sp, #20
 8005044:	af00      	add	r7, sp, #0
 8005046:	6078      	str	r0, [r7, #4]
 8005048:	687b      	ldr	r3, [r7, #4]
 800504a:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800504e:	b2db      	uxtb	r3, r3
 8005050:	2b01      	cmp	r3, #1
 8005052:	d001      	beq.n	8005058 <HAL_TIM_Base_Start_IT+0x18>
 8005054:	2301      	movs	r3, #1
 8005056:	e03a      	b.n	80050ce <HAL_TIM_Base_Start_IT+0x8e>
 8005058:	687b      	ldr	r3, [r7, #4]
 800505a:	2202      	movs	r2, #2
 800505c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005060:	687b      	ldr	r3, [r7, #4]
 8005062:	681b      	ldr	r3, [r3, #0]
 8005064:	68da      	ldr	r2, [r3, #12]
 8005066:	687b      	ldr	r3, [r7, #4]
 8005068:	681b      	ldr	r3, [r3, #0]
 800506a:	f042 0201 	orr.w	r2, r2, #1
 800506e:	60da      	str	r2, [r3, #12]
 8005070:	687b      	ldr	r3, [r7, #4]
 8005072:	681b      	ldr	r3, [r3, #0]
 8005074:	4a18      	ldr	r2, [pc, #96]	; (80050d8 <HAL_TIM_Base_Start_IT+0x98>)
 8005076:	4293      	cmp	r3, r2
 8005078:	d00e      	beq.n	8005098 <HAL_TIM_Base_Start_IT+0x58>
 800507a:	687b      	ldr	r3, [r7, #4]
 800507c:	681b      	ldr	r3, [r3, #0]
 800507e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8005082:	d009      	beq.n	8005098 <HAL_TIM_Base_Start_IT+0x58>
 8005084:	687b      	ldr	r3, [r7, #4]
 8005086:	681b      	ldr	r3, [r3, #0]
 8005088:	4a14      	ldr	r2, [pc, #80]	; (80050dc <HAL_TIM_Base_Start_IT+0x9c>)
 800508a:	4293      	cmp	r3, r2
 800508c:	d004      	beq.n	8005098 <HAL_TIM_Base_Start_IT+0x58>
 800508e:	687b      	ldr	r3, [r7, #4]
 8005090:	681b      	ldr	r3, [r3, #0]
 8005092:	4a13      	ldr	r2, [pc, #76]	; (80050e0 <HAL_TIM_Base_Start_IT+0xa0>)
 8005094:	4293      	cmp	r3, r2
 8005096:	d111      	bne.n	80050bc <HAL_TIM_Base_Start_IT+0x7c>
 8005098:	687b      	ldr	r3, [r7, #4]
 800509a:	681b      	ldr	r3, [r3, #0]
 800509c:	689b      	ldr	r3, [r3, #8]
 800509e:	f003 0307 	and.w	r3, r3, #7
 80050a2:	60fb      	str	r3, [r7, #12]
 80050a4:	68fb      	ldr	r3, [r7, #12]
 80050a6:	2b06      	cmp	r3, #6
 80050a8:	d010      	beq.n	80050cc <HAL_TIM_Base_Start_IT+0x8c>
 80050aa:	687b      	ldr	r3, [r7, #4]
 80050ac:	681b      	ldr	r3, [r3, #0]
 80050ae:	681a      	ldr	r2, [r3, #0]
 80050b0:	687b      	ldr	r3, [r7, #4]
 80050b2:	681b      	ldr	r3, [r3, #0]
 80050b4:	f042 0201 	orr.w	r2, r2, #1
 80050b8:	601a      	str	r2, [r3, #0]
 80050ba:	e007      	b.n	80050cc <HAL_TIM_Base_Start_IT+0x8c>
 80050bc:	687b      	ldr	r3, [r7, #4]
 80050be:	681b      	ldr	r3, [r3, #0]
 80050c0:	681a      	ldr	r2, [r3, #0]
 80050c2:	687b      	ldr	r3, [r7, #4]
 80050c4:	681b      	ldr	r3, [r3, #0]
 80050c6:	f042 0201 	orr.w	r2, r2, #1
 80050ca:	601a      	str	r2, [r3, #0]
 80050cc:	2300      	movs	r3, #0
 80050ce:	4618      	mov	r0, r3
 80050d0:	3714      	adds	r7, #20
 80050d2:	46bd      	mov	sp, r7
 80050d4:	bc80      	pop	{r7}
 80050d6:	4770      	bx	lr
 80050d8:	40012c00 	.word	0x40012c00
 80050dc:	40000400 	.word	0x40000400
 80050e0:	40000800 	.word	0x40000800

080050e4 <HAL_TIM_IRQHandler>:
 80050e4:	b580      	push	{r7, lr}
 80050e6:	b082      	sub	sp, #8
 80050e8:	af00      	add	r7, sp, #0
 80050ea:	6078      	str	r0, [r7, #4]
 80050ec:	687b      	ldr	r3, [r7, #4]
 80050ee:	681b      	ldr	r3, [r3, #0]
 80050f0:	691b      	ldr	r3, [r3, #16]
 80050f2:	f003 0302 	and.w	r3, r3, #2
 80050f6:	2b02      	cmp	r3, #2
 80050f8:	d122      	bne.n	8005140 <HAL_TIM_IRQHandler+0x5c>
 80050fa:	687b      	ldr	r3, [r7, #4]
 80050fc:	681b      	ldr	r3, [r3, #0]
 80050fe:	68db      	ldr	r3, [r3, #12]
 8005100:	f003 0302 	and.w	r3, r3, #2
 8005104:	2b02      	cmp	r3, #2
 8005106:	d11b      	bne.n	8005140 <HAL_TIM_IRQHandler+0x5c>
 8005108:	687b      	ldr	r3, [r7, #4]
 800510a:	681b      	ldr	r3, [r3, #0]
 800510c:	f06f 0202 	mvn.w	r2, #2
 8005110:	611a      	str	r2, [r3, #16]
 8005112:	687b      	ldr	r3, [r7, #4]
 8005114:	2201      	movs	r2, #1
 8005116:	771a      	strb	r2, [r3, #28]
 8005118:	687b      	ldr	r3, [r7, #4]
 800511a:	681b      	ldr	r3, [r3, #0]
 800511c:	699b      	ldr	r3, [r3, #24]
 800511e:	f003 0303 	and.w	r3, r3, #3
 8005122:	2b00      	cmp	r3, #0
 8005124:	d003      	beq.n	800512e <HAL_TIM_IRQHandler+0x4a>
 8005126:	6878      	ldr	r0, [r7, #4]
 8005128:	f000 f9b4 	bl	8005494 <HAL_TIM_IC_CaptureCallback>
 800512c:	e005      	b.n	800513a <HAL_TIM_IRQHandler+0x56>
 800512e:	6878      	ldr	r0, [r7, #4]
 8005130:	f000 f9a7 	bl	8005482 <HAL_TIM_OC_DelayElapsedCallback>
 8005134:	6878      	ldr	r0, [r7, #4]
 8005136:	f000 f9b6 	bl	80054a6 <HAL_TIM_PWM_PulseFinishedCallback>
 800513a:	687b      	ldr	r3, [r7, #4]
 800513c:	2200      	movs	r2, #0
 800513e:	771a      	strb	r2, [r3, #28]
 8005140:	687b      	ldr	r3, [r7, #4]
 8005142:	681b      	ldr	r3, [r3, #0]
 8005144:	691b      	ldr	r3, [r3, #16]
 8005146:	f003 0304 	and.w	r3, r3, #4
 800514a:	2b04      	cmp	r3, #4
 800514c:	d122      	bne.n	8005194 <HAL_TIM_IRQHandler+0xb0>
 800514e:	687b      	ldr	r3, [r7, #4]
 8005150:	681b      	ldr	r3, [r3, #0]
 8005152:	68db      	ldr	r3, [r3, #12]
 8005154:	f003 0304 	and.w	r3, r3, #4
 8005158:	2b04      	cmp	r3, #4
 800515a:	d11b      	bne.n	8005194 <HAL_TIM_IRQHandler+0xb0>
 800515c:	687b      	ldr	r3, [r7, #4]
 800515e:	681b      	ldr	r3, [r3, #0]
 8005160:	f06f 0204 	mvn.w	r2, #4
 8005164:	611a      	str	r2, [r3, #16]
 8005166:	687b      	ldr	r3, [r7, #4]
 8005168:	2202      	movs	r2, #2
 800516a:	771a      	strb	r2, [r3, #28]
 800516c:	687b      	ldr	r3, [r7, #4]
 800516e:	681b      	ldr	r3, [r3, #0]
 8005170:	699b      	ldr	r3, [r3, #24]
 8005172:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8005176:	2b00      	cmp	r3, #0
 8005178:	d003      	beq.n	8005182 <HAL_TIM_IRQHandler+0x9e>
 800517a:	6878      	ldr	r0, [r7, #4]
 800517c:	f000 f98a 	bl	8005494 <HAL_TIM_IC_CaptureCallback>
 8005180:	e005      	b.n	800518e <HAL_TIM_IRQHandler+0xaa>
 8005182:	6878      	ldr	r0, [r7, #4]
 8005184:	f000 f97d 	bl	8005482 <HAL_TIM_OC_DelayElapsedCallback>
 8005188:	6878      	ldr	r0, [r7, #4]
 800518a:	f000 f98c 	bl	80054a6 <HAL_TIM_PWM_PulseFinishedCallback>
 800518e:	687b      	ldr	r3, [r7, #4]
 8005190:	2200      	movs	r2, #0
 8005192:	771a      	strb	r2, [r3, #28]
 8005194:	687b      	ldr	r3, [r7, #4]
 8005196:	681b      	ldr	r3, [r3, #0]
 8005198:	691b      	ldr	r3, [r3, #16]
 800519a:	f003 0308 	and.w	r3, r3, #8
 800519e:	2b08      	cmp	r3, #8
 80051a0:	d122      	bne.n	80051e8 <HAL_TIM_IRQHandler+0x104>
 80051a2:	687b      	ldr	r3, [r7, #4]
 80051a4:	681b      	ldr	r3, [r3, #0]
 80051a6:	68db      	ldr	r3, [r3, #12]
 80051a8:	f003 0308 	and.w	r3, r3, #8
 80051ac:	2b08      	cmp	r3, #8
 80051ae:	d11b      	bne.n	80051e8 <HAL_TIM_IRQHandler+0x104>
 80051b0:	687b      	ldr	r3, [r7, #4]
 80051b2:	681b      	ldr	r3, [r3, #0]
 80051b4:	f06f 0208 	mvn.w	r2, #8
 80051b8:	611a      	str	r2, [r3, #16]
 80051ba:	687b      	ldr	r3, [r7, #4]
 80051bc:	2204      	movs	r2, #4
 80051be:	771a      	strb	r2, [r3, #28]
 80051c0:	687b      	ldr	r3, [r7, #4]
 80051c2:	681b      	ldr	r3, [r3, #0]
 80051c4:	69db      	ldr	r3, [r3, #28]
 80051c6:	f003 0303 	and.w	r3, r3, #3
 80051ca:	2b00      	cmp	r3, #0
 80051cc:	d003      	beq.n	80051d6 <HAL_TIM_IRQHandler+0xf2>
 80051ce:	6878      	ldr	r0, [r7, #4]
 80051d0:	f000 f960 	bl	8005494 <HAL_TIM_IC_CaptureCallback>
 80051d4:	e005      	b.n	80051e2 <HAL_TIM_IRQHandler+0xfe>
 80051d6:	6878      	ldr	r0, [r7, #4]
 80051d8:	f000 f953 	bl	8005482 <HAL_TIM_OC_DelayElapsedCallback>
 80051dc:	6878      	ldr	r0, [r7, #4]
 80051de:	f000 f962 	bl	80054a6 <HAL_TIM_PWM_PulseFinishedCallback>
 80051e2:	687b      	ldr	r3, [r7, #4]
 80051e4:	2200      	movs	r2, #0
 80051e6:	771a      	strb	r2, [r3, #28]
 80051e8:	687b      	ldr	r3, [r7, #4]
 80051ea:	681b      	ldr	r3, [r3, #0]
 80051ec:	691b      	ldr	r3, [r3, #16]
 80051ee:	f003 0310 	and.w	r3, r3, #16
 80051f2:	2b10      	cmp	r3, #16
 80051f4:	d122      	bne.n	800523c <HAL_TIM_IRQHandler+0x158>
 80051f6:	687b      	ldr	r3, [r7, #4]
 80051f8:	681b      	ldr	r3, [r3, #0]
 80051fa:	68db      	ldr	r3, [r3, #12]
 80051fc:	f003 0310 	and.w	r3, r3, #16
 8005200:	2b10      	cmp	r3, #16
 8005202:	d11b      	bne.n	800523c <HAL_TIM_IRQHandler+0x158>
 8005204:	687b      	ldr	r3, [r7, #4]
 8005206:	681b      	ldr	r3, [r3, #0]
 8005208:	f06f 0210 	mvn.w	r2, #16
 800520c:	611a      	str	r2, [r3, #16]
 800520e:	687b      	ldr	r3, [r7, #4]
 8005210:	2208      	movs	r2, #8
 8005212:	771a      	strb	r2, [r3, #28]
 8005214:	687b      	ldr	r3, [r7, #4]
 8005216:	681b      	ldr	r3, [r3, #0]
 8005218:	69db      	ldr	r3, [r3, #28]
 800521a:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800521e:	2b00      	cmp	r3, #0
 8005220:	d003      	beq.n	800522a <HAL_TIM_IRQHandler+0x146>
 8005222:	6878      	ldr	r0, [r7, #4]
 8005224:	f000 f936 	bl	8005494 <HAL_TIM_IC_CaptureCallback>
 8005228:	e005      	b.n	8005236 <HAL_TIM_IRQHandler+0x152>
 800522a:	6878      	ldr	r0, [r7, #4]
 800522c:	f000 f929 	bl	8005482 <HAL_TIM_OC_DelayElapsedCallback>
 8005230:	6878      	ldr	r0, [r7, #4]
 8005232:	f000 f938 	bl	80054a6 <HAL_TIM_PWM_PulseFinishedCallback>
 8005236:	687b      	ldr	r3, [r7, #4]
 8005238:	2200      	movs	r2, #0
 800523a:	771a      	strb	r2, [r3, #28]
 800523c:	687b      	ldr	r3, [r7, #4]
 800523e:	681b      	ldr	r3, [r3, #0]
 8005240:	691b      	ldr	r3, [r3, #16]
 8005242:	f003 0301 	and.w	r3, r3, #1
 8005246:	2b01      	cmp	r3, #1
 8005248:	d10e      	bne.n	8005268 <HAL_TIM_IRQHandler+0x184>
 800524a:	687b      	ldr	r3, [r7, #4]
 800524c:	681b      	ldr	r3, [r3, #0]
 800524e:	68db      	ldr	r3, [r3, #12]
 8005250:	f003 0301 	and.w	r3, r3, #1
 8005254:	2b01      	cmp	r3, #1
 8005256:	d107      	bne.n	8005268 <HAL_TIM_IRQHandler+0x184>
 8005258:	687b      	ldr	r3, [r7, #4]
 800525a:	681b      	ldr	r3, [r3, #0]
 800525c:	f06f 0201 	mvn.w	r2, #1
 8005260:	611a      	str	r2, [r3, #16]
 8005262:	6878      	ldr	r0, [r7, #4]
 8005264:	f7fc fbec 	bl	8001a40 <HAL_TIM_PeriodElapsedCallback>
 8005268:	687b      	ldr	r3, [r7, #4]
 800526a:	681b      	ldr	r3, [r3, #0]
 800526c:	691b      	ldr	r3, [r3, #16]
 800526e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8005272:	2b80      	cmp	r3, #128	; 0x80
 8005274:	d10e      	bne.n	8005294 <HAL_TIM_IRQHandler+0x1b0>
 8005276:	687b      	ldr	r3, [r7, #4]
 8005278:	681b      	ldr	r3, [r3, #0]
 800527a:	68db      	ldr	r3, [r3, #12]
 800527c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8005280:	2b80      	cmp	r3, #128	; 0x80
 8005282:	d107      	bne.n	8005294 <HAL_TIM_IRQHandler+0x1b0>
 8005284:	687b      	ldr	r3, [r7, #4]
 8005286:	681b      	ldr	r3, [r3, #0]
 8005288:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800528c:	611a      	str	r2, [r3, #16]
 800528e:	6878      	ldr	r0, [r7, #4]
 8005290:	f000 fa7b 	bl	800578a <HAL_TIMEx_BreakCallback>
 8005294:	687b      	ldr	r3, [r7, #4]
 8005296:	681b      	ldr	r3, [r3, #0]
 8005298:	691b      	ldr	r3, [r3, #16]
 800529a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800529e:	2b40      	cmp	r3, #64	; 0x40
 80052a0:	d10e      	bne.n	80052c0 <HAL_TIM_IRQHandler+0x1dc>
 80052a2:	687b      	ldr	r3, [r7, #4]
 80052a4:	681b      	ldr	r3, [r3, #0]
 80052a6:	68db      	ldr	r3, [r3, #12]
 80052a8:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80052ac:	2b40      	cmp	r3, #64	; 0x40
 80052ae:	d107      	bne.n	80052c0 <HAL_TIM_IRQHandler+0x1dc>
 80052b0:	687b      	ldr	r3, [r7, #4]
 80052b2:	681b      	ldr	r3, [r3, #0]
 80052b4:	f06f 0240 	mvn.w	r2, #64	; 0x40
 80052b8:	611a      	str	r2, [r3, #16]
 80052ba:	6878      	ldr	r0, [r7, #4]
 80052bc:	f000 f8fc 	bl	80054b8 <HAL_TIM_TriggerCallback>
 80052c0:	687b      	ldr	r3, [r7, #4]
 80052c2:	681b      	ldr	r3, [r3, #0]
 80052c4:	691b      	ldr	r3, [r3, #16]
 80052c6:	f003 0320 	and.w	r3, r3, #32
 80052ca:	2b20      	cmp	r3, #32
 80052cc:	d10e      	bne.n	80052ec <HAL_TIM_IRQHandler+0x208>
 80052ce:	687b      	ldr	r3, [r7, #4]
 80052d0:	681b      	ldr	r3, [r3, #0]
 80052d2:	68db      	ldr	r3, [r3, #12]
 80052d4:	f003 0320 	and.w	r3, r3, #32
 80052d8:	2b20      	cmp	r3, #32
 80052da:	d107      	bne.n	80052ec <HAL_TIM_IRQHandler+0x208>
 80052dc:	687b      	ldr	r3, [r7, #4]
 80052de:	681b      	ldr	r3, [r3, #0]
 80052e0:	f06f 0220 	mvn.w	r2, #32
 80052e4:	611a      	str	r2, [r3, #16]
 80052e6:	6878      	ldr	r0, [r7, #4]
 80052e8:	f000 fa46 	bl	8005778 <HAL_TIMEx_CommutCallback>
 80052ec:	bf00      	nop
 80052ee:	3708      	adds	r7, #8
 80052f0:	46bd      	mov	sp, r7
 80052f2:	bd80      	pop	{r7, pc}

080052f4 <HAL_TIM_ConfigClockSource>:
 80052f4:	b580      	push	{r7, lr}
 80052f6:	b084      	sub	sp, #16
 80052f8:	af00      	add	r7, sp, #0
 80052fa:	6078      	str	r0, [r7, #4]
 80052fc:	6039      	str	r1, [r7, #0]
 80052fe:	2300      	movs	r3, #0
 8005300:	73fb      	strb	r3, [r7, #15]
 8005302:	687b      	ldr	r3, [r7, #4]
 8005304:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8005308:	2b01      	cmp	r3, #1
 800530a:	d101      	bne.n	8005310 <HAL_TIM_ConfigClockSource+0x1c>
 800530c:	2302      	movs	r3, #2
 800530e:	e0b4      	b.n	800547a <HAL_TIM_ConfigClockSource+0x186>
 8005310:	687b      	ldr	r3, [r7, #4]
 8005312:	2201      	movs	r2, #1
 8005314:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005318:	687b      	ldr	r3, [r7, #4]
 800531a:	2202      	movs	r2, #2
 800531c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005320:	687b      	ldr	r3, [r7, #4]
 8005322:	681b      	ldr	r3, [r3, #0]
 8005324:	689b      	ldr	r3, [r3, #8]
 8005326:	60bb      	str	r3, [r7, #8]
 8005328:	68bb      	ldr	r3, [r7, #8]
 800532a:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 800532e:	60bb      	str	r3, [r7, #8]
 8005330:	68bb      	ldr	r3, [r7, #8]
 8005332:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8005336:	60bb      	str	r3, [r7, #8]
 8005338:	687b      	ldr	r3, [r7, #4]
 800533a:	681b      	ldr	r3, [r3, #0]
 800533c:	68ba      	ldr	r2, [r7, #8]
 800533e:	609a      	str	r2, [r3, #8]
 8005340:	683b      	ldr	r3, [r7, #0]
 8005342:	681b      	ldr	r3, [r3, #0]
 8005344:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8005348:	d03e      	beq.n	80053c8 <HAL_TIM_ConfigClockSource+0xd4>
 800534a:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800534e:	f200 8087 	bhi.w	8005460 <HAL_TIM_ConfigClockSource+0x16c>
 8005352:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8005356:	f000 8086 	beq.w	8005466 <HAL_TIM_ConfigClockSource+0x172>
 800535a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800535e:	d87f      	bhi.n	8005460 <HAL_TIM_ConfigClockSource+0x16c>
 8005360:	2b70      	cmp	r3, #112	; 0x70
 8005362:	d01a      	beq.n	800539a <HAL_TIM_ConfigClockSource+0xa6>
 8005364:	2b70      	cmp	r3, #112	; 0x70
 8005366:	d87b      	bhi.n	8005460 <HAL_TIM_ConfigClockSource+0x16c>
 8005368:	2b60      	cmp	r3, #96	; 0x60
 800536a:	d050      	beq.n	800540e <HAL_TIM_ConfigClockSource+0x11a>
 800536c:	2b60      	cmp	r3, #96	; 0x60
 800536e:	d877      	bhi.n	8005460 <HAL_TIM_ConfigClockSource+0x16c>
 8005370:	2b50      	cmp	r3, #80	; 0x50
 8005372:	d03c      	beq.n	80053ee <HAL_TIM_ConfigClockSource+0xfa>
 8005374:	2b50      	cmp	r3, #80	; 0x50
 8005376:	d873      	bhi.n	8005460 <HAL_TIM_ConfigClockSource+0x16c>
 8005378:	2b40      	cmp	r3, #64	; 0x40
 800537a:	d058      	beq.n	800542e <HAL_TIM_ConfigClockSource+0x13a>
 800537c:	2b40      	cmp	r3, #64	; 0x40
 800537e:	d86f      	bhi.n	8005460 <HAL_TIM_ConfigClockSource+0x16c>
 8005380:	2b30      	cmp	r3, #48	; 0x30
 8005382:	d064      	beq.n	800544e <HAL_TIM_ConfigClockSource+0x15a>
 8005384:	2b30      	cmp	r3, #48	; 0x30
 8005386:	d86b      	bhi.n	8005460 <HAL_TIM_ConfigClockSource+0x16c>
 8005388:	2b20      	cmp	r3, #32
 800538a:	d060      	beq.n	800544e <HAL_TIM_ConfigClockSource+0x15a>
 800538c:	2b20      	cmp	r3, #32
 800538e:	d867      	bhi.n	8005460 <HAL_TIM_ConfigClockSource+0x16c>
 8005390:	2b00      	cmp	r3, #0
 8005392:	d05c      	beq.n	800544e <HAL_TIM_ConfigClockSource+0x15a>
 8005394:	2b10      	cmp	r3, #16
 8005396:	d05a      	beq.n	800544e <HAL_TIM_ConfigClockSource+0x15a>
 8005398:	e062      	b.n	8005460 <HAL_TIM_ConfigClockSource+0x16c>
 800539a:	687b      	ldr	r3, [r7, #4]
 800539c:	6818      	ldr	r0, [r3, #0]
 800539e:	683b      	ldr	r3, [r7, #0]
 80053a0:	6899      	ldr	r1, [r3, #8]
 80053a2:	683b      	ldr	r3, [r7, #0]
 80053a4:	685a      	ldr	r2, [r3, #4]
 80053a6:	683b      	ldr	r3, [r7, #0]
 80053a8:	68db      	ldr	r3, [r3, #12]
 80053aa:	f000 f968 	bl	800567e <TIM_ETR_SetConfig>
 80053ae:	687b      	ldr	r3, [r7, #4]
 80053b0:	681b      	ldr	r3, [r3, #0]
 80053b2:	689b      	ldr	r3, [r3, #8]
 80053b4:	60bb      	str	r3, [r7, #8]
 80053b6:	68bb      	ldr	r3, [r7, #8]
 80053b8:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 80053bc:	60bb      	str	r3, [r7, #8]
 80053be:	687b      	ldr	r3, [r7, #4]
 80053c0:	681b      	ldr	r3, [r3, #0]
 80053c2:	68ba      	ldr	r2, [r7, #8]
 80053c4:	609a      	str	r2, [r3, #8]
 80053c6:	e04f      	b.n	8005468 <HAL_TIM_ConfigClockSource+0x174>
 80053c8:	687b      	ldr	r3, [r7, #4]
 80053ca:	6818      	ldr	r0, [r3, #0]
 80053cc:	683b      	ldr	r3, [r7, #0]
 80053ce:	6899      	ldr	r1, [r3, #8]
 80053d0:	683b      	ldr	r3, [r7, #0]
 80053d2:	685a      	ldr	r2, [r3, #4]
 80053d4:	683b      	ldr	r3, [r7, #0]
 80053d6:	68db      	ldr	r3, [r3, #12]
 80053d8:	f000 f951 	bl	800567e <TIM_ETR_SetConfig>
 80053dc:	687b      	ldr	r3, [r7, #4]
 80053de:	681b      	ldr	r3, [r3, #0]
 80053e0:	689a      	ldr	r2, [r3, #8]
 80053e2:	687b      	ldr	r3, [r7, #4]
 80053e4:	681b      	ldr	r3, [r3, #0]
 80053e6:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80053ea:	609a      	str	r2, [r3, #8]
 80053ec:	e03c      	b.n	8005468 <HAL_TIM_ConfigClockSource+0x174>
 80053ee:	687b      	ldr	r3, [r7, #4]
 80053f0:	6818      	ldr	r0, [r3, #0]
 80053f2:	683b      	ldr	r3, [r7, #0]
 80053f4:	6859      	ldr	r1, [r3, #4]
 80053f6:	683b      	ldr	r3, [r7, #0]
 80053f8:	68db      	ldr	r3, [r3, #12]
 80053fa:	461a      	mov	r2, r3
 80053fc:	f000 f8c8 	bl	8005590 <TIM_TI1_ConfigInputStage>
 8005400:	687b      	ldr	r3, [r7, #4]
 8005402:	681b      	ldr	r3, [r3, #0]
 8005404:	2150      	movs	r1, #80	; 0x50
 8005406:	4618      	mov	r0, r3
 8005408:	f000 f91f 	bl	800564a <TIM_ITRx_SetConfig>
 800540c:	e02c      	b.n	8005468 <HAL_TIM_ConfigClockSource+0x174>
 800540e:	687b      	ldr	r3, [r7, #4]
 8005410:	6818      	ldr	r0, [r3, #0]
 8005412:	683b      	ldr	r3, [r7, #0]
 8005414:	6859      	ldr	r1, [r3, #4]
 8005416:	683b      	ldr	r3, [r7, #0]
 8005418:	68db      	ldr	r3, [r3, #12]
 800541a:	461a      	mov	r2, r3
 800541c:	f000 f8e6 	bl	80055ec <TIM_TI2_ConfigInputStage>
 8005420:	687b      	ldr	r3, [r7, #4]
 8005422:	681b      	ldr	r3, [r3, #0]
 8005424:	2160      	movs	r1, #96	; 0x60
 8005426:	4618      	mov	r0, r3
 8005428:	f000 f90f 	bl	800564a <TIM_ITRx_SetConfig>
 800542c:	e01c      	b.n	8005468 <HAL_TIM_ConfigClockSource+0x174>
 800542e:	687b      	ldr	r3, [r7, #4]
 8005430:	6818      	ldr	r0, [r3, #0]
 8005432:	683b      	ldr	r3, [r7, #0]
 8005434:	6859      	ldr	r1, [r3, #4]
 8005436:	683b      	ldr	r3, [r7, #0]
 8005438:	68db      	ldr	r3, [r3, #12]
 800543a:	461a      	mov	r2, r3
 800543c:	f000 f8a8 	bl	8005590 <TIM_TI1_ConfigInputStage>
 8005440:	687b      	ldr	r3, [r7, #4]
 8005442:	681b      	ldr	r3, [r3, #0]
 8005444:	2140      	movs	r1, #64	; 0x40
 8005446:	4618      	mov	r0, r3
 8005448:	f000 f8ff 	bl	800564a <TIM_ITRx_SetConfig>
 800544c:	e00c      	b.n	8005468 <HAL_TIM_ConfigClockSource+0x174>
 800544e:	687b      	ldr	r3, [r7, #4]
 8005450:	681a      	ldr	r2, [r3, #0]
 8005452:	683b      	ldr	r3, [r7, #0]
 8005454:	681b      	ldr	r3, [r3, #0]
 8005456:	4619      	mov	r1, r3
 8005458:	4610      	mov	r0, r2
 800545a:	f000 f8f6 	bl	800564a <TIM_ITRx_SetConfig>
 800545e:	e003      	b.n	8005468 <HAL_TIM_ConfigClockSource+0x174>
 8005460:	2301      	movs	r3, #1
 8005462:	73fb      	strb	r3, [r7, #15]
 8005464:	e000      	b.n	8005468 <HAL_TIM_ConfigClockSource+0x174>
 8005466:	bf00      	nop
 8005468:	687b      	ldr	r3, [r7, #4]
 800546a:	2201      	movs	r2, #1
 800546c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005470:	687b      	ldr	r3, [r7, #4]
 8005472:	2200      	movs	r2, #0
 8005474:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005478:	7bfb      	ldrb	r3, [r7, #15]
 800547a:	4618      	mov	r0, r3
 800547c:	3710      	adds	r7, #16
 800547e:	46bd      	mov	sp, r7
 8005480:	bd80      	pop	{r7, pc}

08005482 <HAL_TIM_OC_DelayElapsedCallback>:
 8005482:	b480      	push	{r7}
 8005484:	b083      	sub	sp, #12
 8005486:	af00      	add	r7, sp, #0
 8005488:	6078      	str	r0, [r7, #4]
 800548a:	bf00      	nop
 800548c:	370c      	adds	r7, #12
 800548e:	46bd      	mov	sp, r7
 8005490:	bc80      	pop	{r7}
 8005492:	4770      	bx	lr

08005494 <HAL_TIM_IC_CaptureCallback>:
 8005494:	b480      	push	{r7}
 8005496:	b083      	sub	sp, #12
 8005498:	af00      	add	r7, sp, #0
 800549a:	6078      	str	r0, [r7, #4]
 800549c:	bf00      	nop
 800549e:	370c      	adds	r7, #12
 80054a0:	46bd      	mov	sp, r7
 80054a2:	bc80      	pop	{r7}
 80054a4:	4770      	bx	lr

080054a6 <HAL_TIM_PWM_PulseFinishedCallback>:
 80054a6:	b480      	push	{r7}
 80054a8:	b083      	sub	sp, #12
 80054aa:	af00      	add	r7, sp, #0
 80054ac:	6078      	str	r0, [r7, #4]
 80054ae:	bf00      	nop
 80054b0:	370c      	adds	r7, #12
 80054b2:	46bd      	mov	sp, r7
 80054b4:	bc80      	pop	{r7}
 80054b6:	4770      	bx	lr

080054b8 <HAL_TIM_TriggerCallback>:
 80054b8:	b480      	push	{r7}
 80054ba:	b083      	sub	sp, #12
 80054bc:	af00      	add	r7, sp, #0
 80054be:	6078      	str	r0, [r7, #4]
 80054c0:	bf00      	nop
 80054c2:	370c      	adds	r7, #12
 80054c4:	46bd      	mov	sp, r7
 80054c6:	bc80      	pop	{r7}
 80054c8:	4770      	bx	lr
	...

080054cc <TIM_Base_SetConfig>:
 80054cc:	b480      	push	{r7}
 80054ce:	b085      	sub	sp, #20
 80054d0:	af00      	add	r7, sp, #0
 80054d2:	6078      	str	r0, [r7, #4]
 80054d4:	6039      	str	r1, [r7, #0]
 80054d6:	687b      	ldr	r3, [r7, #4]
 80054d8:	681b      	ldr	r3, [r3, #0]
 80054da:	60fb      	str	r3, [r7, #12]
 80054dc:	687b      	ldr	r3, [r7, #4]
 80054de:	4a29      	ldr	r2, [pc, #164]	; (8005584 <TIM_Base_SetConfig+0xb8>)
 80054e0:	4293      	cmp	r3, r2
 80054e2:	d00b      	beq.n	80054fc <TIM_Base_SetConfig+0x30>
 80054e4:	687b      	ldr	r3, [r7, #4]
 80054e6:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80054ea:	d007      	beq.n	80054fc <TIM_Base_SetConfig+0x30>
 80054ec:	687b      	ldr	r3, [r7, #4]
 80054ee:	4a26      	ldr	r2, [pc, #152]	; (8005588 <TIM_Base_SetConfig+0xbc>)
 80054f0:	4293      	cmp	r3, r2
 80054f2:	d003      	beq.n	80054fc <TIM_Base_SetConfig+0x30>
 80054f4:	687b      	ldr	r3, [r7, #4]
 80054f6:	4a25      	ldr	r2, [pc, #148]	; (800558c <TIM_Base_SetConfig+0xc0>)
 80054f8:	4293      	cmp	r3, r2
 80054fa:	d108      	bne.n	800550e <TIM_Base_SetConfig+0x42>
 80054fc:	68fb      	ldr	r3, [r7, #12]
 80054fe:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8005502:	60fb      	str	r3, [r7, #12]
 8005504:	683b      	ldr	r3, [r7, #0]
 8005506:	685b      	ldr	r3, [r3, #4]
 8005508:	68fa      	ldr	r2, [r7, #12]
 800550a:	4313      	orrs	r3, r2
 800550c:	60fb      	str	r3, [r7, #12]
 800550e:	687b      	ldr	r3, [r7, #4]
 8005510:	4a1c      	ldr	r2, [pc, #112]	; (8005584 <TIM_Base_SetConfig+0xb8>)
 8005512:	4293      	cmp	r3, r2
 8005514:	d00b      	beq.n	800552e <TIM_Base_SetConfig+0x62>
 8005516:	687b      	ldr	r3, [r7, #4]
 8005518:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800551c:	d007      	beq.n	800552e <TIM_Base_SetConfig+0x62>
 800551e:	687b      	ldr	r3, [r7, #4]
 8005520:	4a19      	ldr	r2, [pc, #100]	; (8005588 <TIM_Base_SetConfig+0xbc>)
 8005522:	4293      	cmp	r3, r2
 8005524:	d003      	beq.n	800552e <TIM_Base_SetConfig+0x62>
 8005526:	687b      	ldr	r3, [r7, #4]
 8005528:	4a18      	ldr	r2, [pc, #96]	; (800558c <TIM_Base_SetConfig+0xc0>)
 800552a:	4293      	cmp	r3, r2
 800552c:	d108      	bne.n	8005540 <TIM_Base_SetConfig+0x74>
 800552e:	68fb      	ldr	r3, [r7, #12]
 8005530:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8005534:	60fb      	str	r3, [r7, #12]
 8005536:	683b      	ldr	r3, [r7, #0]
 8005538:	68db      	ldr	r3, [r3, #12]
 800553a:	68fa      	ldr	r2, [r7, #12]
 800553c:	4313      	orrs	r3, r2
 800553e:	60fb      	str	r3, [r7, #12]
 8005540:	68fb      	ldr	r3, [r7, #12]
 8005542:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8005546:	683b      	ldr	r3, [r7, #0]
 8005548:	695b      	ldr	r3, [r3, #20]
 800554a:	4313      	orrs	r3, r2
 800554c:	60fb      	str	r3, [r7, #12]
 800554e:	687b      	ldr	r3, [r7, #4]
 8005550:	68fa      	ldr	r2, [r7, #12]
 8005552:	601a      	str	r2, [r3, #0]
 8005554:	683b      	ldr	r3, [r7, #0]
 8005556:	689a      	ldr	r2, [r3, #8]
 8005558:	687b      	ldr	r3, [r7, #4]
 800555a:	62da      	str	r2, [r3, #44]	; 0x2c
 800555c:	683b      	ldr	r3, [r7, #0]
 800555e:	681a      	ldr	r2, [r3, #0]
 8005560:	687b      	ldr	r3, [r7, #4]
 8005562:	629a      	str	r2, [r3, #40]	; 0x28
 8005564:	687b      	ldr	r3, [r7, #4]
 8005566:	4a07      	ldr	r2, [pc, #28]	; (8005584 <TIM_Base_SetConfig+0xb8>)
 8005568:	4293      	cmp	r3, r2
 800556a:	d103      	bne.n	8005574 <TIM_Base_SetConfig+0xa8>
 800556c:	683b      	ldr	r3, [r7, #0]
 800556e:	691a      	ldr	r2, [r3, #16]
 8005570:	687b      	ldr	r3, [r7, #4]
 8005572:	631a      	str	r2, [r3, #48]	; 0x30
 8005574:	687b      	ldr	r3, [r7, #4]
 8005576:	2201      	movs	r2, #1
 8005578:	615a      	str	r2, [r3, #20]
 800557a:	bf00      	nop
 800557c:	3714      	adds	r7, #20
 800557e:	46bd      	mov	sp, r7
 8005580:	bc80      	pop	{r7}
 8005582:	4770      	bx	lr
 8005584:	40012c00 	.word	0x40012c00
 8005588:	40000400 	.word	0x40000400
 800558c:	40000800 	.word	0x40000800

08005590 <TIM_TI1_ConfigInputStage>:
 8005590:	b480      	push	{r7}
 8005592:	b087      	sub	sp, #28
 8005594:	af00      	add	r7, sp, #0
 8005596:	60f8      	str	r0, [r7, #12]
 8005598:	60b9      	str	r1, [r7, #8]
 800559a:	607a      	str	r2, [r7, #4]
 800559c:	68fb      	ldr	r3, [r7, #12]
 800559e:	6a1b      	ldr	r3, [r3, #32]
 80055a0:	617b      	str	r3, [r7, #20]
 80055a2:	68fb      	ldr	r3, [r7, #12]
 80055a4:	6a1b      	ldr	r3, [r3, #32]
 80055a6:	f023 0201 	bic.w	r2, r3, #1
 80055aa:	68fb      	ldr	r3, [r7, #12]
 80055ac:	621a      	str	r2, [r3, #32]
 80055ae:	68fb      	ldr	r3, [r7, #12]
 80055b0:	699b      	ldr	r3, [r3, #24]
 80055b2:	613b      	str	r3, [r7, #16]
 80055b4:	693b      	ldr	r3, [r7, #16]
 80055b6:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80055ba:	613b      	str	r3, [r7, #16]
 80055bc:	687b      	ldr	r3, [r7, #4]
 80055be:	011b      	lsls	r3, r3, #4
 80055c0:	693a      	ldr	r2, [r7, #16]
 80055c2:	4313      	orrs	r3, r2
 80055c4:	613b      	str	r3, [r7, #16]
 80055c6:	697b      	ldr	r3, [r7, #20]
 80055c8:	f023 030a 	bic.w	r3, r3, #10
 80055cc:	617b      	str	r3, [r7, #20]
 80055ce:	697a      	ldr	r2, [r7, #20]
 80055d0:	68bb      	ldr	r3, [r7, #8]
 80055d2:	4313      	orrs	r3, r2
 80055d4:	617b      	str	r3, [r7, #20]
 80055d6:	68fb      	ldr	r3, [r7, #12]
 80055d8:	693a      	ldr	r2, [r7, #16]
 80055da:	619a      	str	r2, [r3, #24]
 80055dc:	68fb      	ldr	r3, [r7, #12]
 80055de:	697a      	ldr	r2, [r7, #20]
 80055e0:	621a      	str	r2, [r3, #32]
 80055e2:	bf00      	nop
 80055e4:	371c      	adds	r7, #28
 80055e6:	46bd      	mov	sp, r7
 80055e8:	bc80      	pop	{r7}
 80055ea:	4770      	bx	lr

080055ec <TIM_TI2_ConfigInputStage>:
 80055ec:	b480      	push	{r7}
 80055ee:	b087      	sub	sp, #28
 80055f0:	af00      	add	r7, sp, #0
 80055f2:	60f8      	str	r0, [r7, #12]
 80055f4:	60b9      	str	r1, [r7, #8]
 80055f6:	607a      	str	r2, [r7, #4]
 80055f8:	68fb      	ldr	r3, [r7, #12]
 80055fa:	6a1b      	ldr	r3, [r3, #32]
 80055fc:	617b      	str	r3, [r7, #20]
 80055fe:	68fb      	ldr	r3, [r7, #12]
 8005600:	6a1b      	ldr	r3, [r3, #32]
 8005602:	f023 0210 	bic.w	r2, r3, #16
 8005606:	68fb      	ldr	r3, [r7, #12]
 8005608:	621a      	str	r2, [r3, #32]
 800560a:	68fb      	ldr	r3, [r7, #12]
 800560c:	699b      	ldr	r3, [r3, #24]
 800560e:	613b      	str	r3, [r7, #16]
 8005610:	693b      	ldr	r3, [r7, #16]
 8005612:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8005616:	613b      	str	r3, [r7, #16]
 8005618:	687b      	ldr	r3, [r7, #4]
 800561a:	031b      	lsls	r3, r3, #12
 800561c:	693a      	ldr	r2, [r7, #16]
 800561e:	4313      	orrs	r3, r2
 8005620:	613b      	str	r3, [r7, #16]
 8005622:	697b      	ldr	r3, [r7, #20]
 8005624:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8005628:	617b      	str	r3, [r7, #20]
 800562a:	68bb      	ldr	r3, [r7, #8]
 800562c:	011b      	lsls	r3, r3, #4
 800562e:	697a      	ldr	r2, [r7, #20]
 8005630:	4313      	orrs	r3, r2
 8005632:	617b      	str	r3, [r7, #20]
 8005634:	68fb      	ldr	r3, [r7, #12]
 8005636:	693a      	ldr	r2, [r7, #16]
 8005638:	619a      	str	r2, [r3, #24]
 800563a:	68fb      	ldr	r3, [r7, #12]
 800563c:	697a      	ldr	r2, [r7, #20]
 800563e:	621a      	str	r2, [r3, #32]
 8005640:	bf00      	nop
 8005642:	371c      	adds	r7, #28
 8005644:	46bd      	mov	sp, r7
 8005646:	bc80      	pop	{r7}
 8005648:	4770      	bx	lr

0800564a <TIM_ITRx_SetConfig>:
 800564a:	b480      	push	{r7}
 800564c:	b085      	sub	sp, #20
 800564e:	af00      	add	r7, sp, #0
 8005650:	6078      	str	r0, [r7, #4]
 8005652:	6039      	str	r1, [r7, #0]
 8005654:	687b      	ldr	r3, [r7, #4]
 8005656:	689b      	ldr	r3, [r3, #8]
 8005658:	60fb      	str	r3, [r7, #12]
 800565a:	68fb      	ldr	r3, [r7, #12]
 800565c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8005660:	60fb      	str	r3, [r7, #12]
 8005662:	683a      	ldr	r2, [r7, #0]
 8005664:	68fb      	ldr	r3, [r7, #12]
 8005666:	4313      	orrs	r3, r2
 8005668:	f043 0307 	orr.w	r3, r3, #7
 800566c:	60fb      	str	r3, [r7, #12]
 800566e:	687b      	ldr	r3, [r7, #4]
 8005670:	68fa      	ldr	r2, [r7, #12]
 8005672:	609a      	str	r2, [r3, #8]
 8005674:	bf00      	nop
 8005676:	3714      	adds	r7, #20
 8005678:	46bd      	mov	sp, r7
 800567a:	bc80      	pop	{r7}
 800567c:	4770      	bx	lr

0800567e <TIM_ETR_SetConfig>:
 800567e:	b480      	push	{r7}
 8005680:	b087      	sub	sp, #28
 8005682:	af00      	add	r7, sp, #0
 8005684:	60f8      	str	r0, [r7, #12]
 8005686:	60b9      	str	r1, [r7, #8]
 8005688:	607a      	str	r2, [r7, #4]
 800568a:	603b      	str	r3, [r7, #0]
 800568c:	68fb      	ldr	r3, [r7, #12]
 800568e:	689b      	ldr	r3, [r3, #8]
 8005690:	617b      	str	r3, [r7, #20]
 8005692:	697b      	ldr	r3, [r7, #20]
 8005694:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8005698:	617b      	str	r3, [r7, #20]
 800569a:	683b      	ldr	r3, [r7, #0]
 800569c:	021a      	lsls	r2, r3, #8
 800569e:	687b      	ldr	r3, [r7, #4]
 80056a0:	431a      	orrs	r2, r3
 80056a2:	68bb      	ldr	r3, [r7, #8]
 80056a4:	4313      	orrs	r3, r2
 80056a6:	697a      	ldr	r2, [r7, #20]
 80056a8:	4313      	orrs	r3, r2
 80056aa:	617b      	str	r3, [r7, #20]
 80056ac:	68fb      	ldr	r3, [r7, #12]
 80056ae:	697a      	ldr	r2, [r7, #20]
 80056b0:	609a      	str	r2, [r3, #8]
 80056b2:	bf00      	nop
 80056b4:	371c      	adds	r7, #28
 80056b6:	46bd      	mov	sp, r7
 80056b8:	bc80      	pop	{r7}
 80056ba:	4770      	bx	lr

080056bc <HAL_TIMEx_MasterConfigSynchronization>:
 80056bc:	b480      	push	{r7}
 80056be:	b085      	sub	sp, #20
 80056c0:	af00      	add	r7, sp, #0
 80056c2:	6078      	str	r0, [r7, #4]
 80056c4:	6039      	str	r1, [r7, #0]
 80056c6:	687b      	ldr	r3, [r7, #4]
 80056c8:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80056cc:	2b01      	cmp	r3, #1
 80056ce:	d101      	bne.n	80056d4 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 80056d0:	2302      	movs	r3, #2
 80056d2:	e046      	b.n	8005762 <HAL_TIMEx_MasterConfigSynchronization+0xa6>
 80056d4:	687b      	ldr	r3, [r7, #4]
 80056d6:	2201      	movs	r2, #1
 80056d8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80056dc:	687b      	ldr	r3, [r7, #4]
 80056de:	2202      	movs	r2, #2
 80056e0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80056e4:	687b      	ldr	r3, [r7, #4]
 80056e6:	681b      	ldr	r3, [r3, #0]
 80056e8:	685b      	ldr	r3, [r3, #4]
 80056ea:	60fb      	str	r3, [r7, #12]
 80056ec:	687b      	ldr	r3, [r7, #4]
 80056ee:	681b      	ldr	r3, [r3, #0]
 80056f0:	689b      	ldr	r3, [r3, #8]
 80056f2:	60bb      	str	r3, [r7, #8]
 80056f4:	68fb      	ldr	r3, [r7, #12]
 80056f6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80056fa:	60fb      	str	r3, [r7, #12]
 80056fc:	683b      	ldr	r3, [r7, #0]
 80056fe:	681b      	ldr	r3, [r3, #0]
 8005700:	68fa      	ldr	r2, [r7, #12]
 8005702:	4313      	orrs	r3, r2
 8005704:	60fb      	str	r3, [r7, #12]
 8005706:	687b      	ldr	r3, [r7, #4]
 8005708:	681b      	ldr	r3, [r3, #0]
 800570a:	68fa      	ldr	r2, [r7, #12]
 800570c:	605a      	str	r2, [r3, #4]
 800570e:	687b      	ldr	r3, [r7, #4]
 8005710:	681b      	ldr	r3, [r3, #0]
 8005712:	4a16      	ldr	r2, [pc, #88]	; (800576c <HAL_TIMEx_MasterConfigSynchronization+0xb0>)
 8005714:	4293      	cmp	r3, r2
 8005716:	d00e      	beq.n	8005736 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8005718:	687b      	ldr	r3, [r7, #4]
 800571a:	681b      	ldr	r3, [r3, #0]
 800571c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8005720:	d009      	beq.n	8005736 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8005722:	687b      	ldr	r3, [r7, #4]
 8005724:	681b      	ldr	r3, [r3, #0]
 8005726:	4a12      	ldr	r2, [pc, #72]	; (8005770 <HAL_TIMEx_MasterConfigSynchronization+0xb4>)
 8005728:	4293      	cmp	r3, r2
 800572a:	d004      	beq.n	8005736 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 800572c:	687b      	ldr	r3, [r7, #4]
 800572e:	681b      	ldr	r3, [r3, #0]
 8005730:	4a10      	ldr	r2, [pc, #64]	; (8005774 <HAL_TIMEx_MasterConfigSynchronization+0xb8>)
 8005732:	4293      	cmp	r3, r2
 8005734:	d10c      	bne.n	8005750 <HAL_TIMEx_MasterConfigSynchronization+0x94>
 8005736:	68bb      	ldr	r3, [r7, #8]
 8005738:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800573c:	60bb      	str	r3, [r7, #8]
 800573e:	683b      	ldr	r3, [r7, #0]
 8005740:	685b      	ldr	r3, [r3, #4]
 8005742:	68ba      	ldr	r2, [r7, #8]
 8005744:	4313      	orrs	r3, r2
 8005746:	60bb      	str	r3, [r7, #8]
 8005748:	687b      	ldr	r3, [r7, #4]
 800574a:	681b      	ldr	r3, [r3, #0]
 800574c:	68ba      	ldr	r2, [r7, #8]
 800574e:	609a      	str	r2, [r3, #8]
 8005750:	687b      	ldr	r3, [r7, #4]
 8005752:	2201      	movs	r2, #1
 8005754:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005758:	687b      	ldr	r3, [r7, #4]
 800575a:	2200      	movs	r2, #0
 800575c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005760:	2300      	movs	r3, #0
 8005762:	4618      	mov	r0, r3
 8005764:	3714      	adds	r7, #20
 8005766:	46bd      	mov	sp, r7
 8005768:	bc80      	pop	{r7}
 800576a:	4770      	bx	lr
 800576c:	40012c00 	.word	0x40012c00
 8005770:	40000400 	.word	0x40000400
 8005774:	40000800 	.word	0x40000800

08005778 <HAL_TIMEx_CommutCallback>:
 8005778:	b480      	push	{r7}
 800577a:	b083      	sub	sp, #12
 800577c:	af00      	add	r7, sp, #0
 800577e:	6078      	str	r0, [r7, #4]
 8005780:	bf00      	nop
 8005782:	370c      	adds	r7, #12
 8005784:	46bd      	mov	sp, r7
 8005786:	bc80      	pop	{r7}
 8005788:	4770      	bx	lr

0800578a <HAL_TIMEx_BreakCallback>:
 800578a:	b480      	push	{r7}
 800578c:	b083      	sub	sp, #12
 800578e:	af00      	add	r7, sp, #0
 8005790:	6078      	str	r0, [r7, #4]
 8005792:	bf00      	nop
 8005794:	370c      	adds	r7, #12
 8005796:	46bd      	mov	sp, r7
 8005798:	bc80      	pop	{r7}
 800579a:	4770      	bx	lr

0800579c <HAL_UART_Init>:
 800579c:	b580      	push	{r7, lr}
 800579e:	b082      	sub	sp, #8
 80057a0:	af00      	add	r7, sp, #0
 80057a2:	6078      	str	r0, [r7, #4]
 80057a4:	687b      	ldr	r3, [r7, #4]
 80057a6:	2b00      	cmp	r3, #0
 80057a8:	d101      	bne.n	80057ae <HAL_UART_Init+0x12>
 80057aa:	2301      	movs	r3, #1
 80057ac:	e042      	b.n	8005834 <HAL_UART_Init+0x98>
 80057ae:	687b      	ldr	r3, [r7, #4]
 80057b0:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 80057b4:	b2db      	uxtb	r3, r3
 80057b6:	2b00      	cmp	r3, #0
 80057b8:	d106      	bne.n	80057c8 <HAL_UART_Init+0x2c>
 80057ba:	687b      	ldr	r3, [r7, #4]
 80057bc:	2200      	movs	r2, #0
 80057be:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80057c2:	6878      	ldr	r0, [r7, #4]
 80057c4:	f7fc fc24 	bl	8002010 <HAL_UART_MspInit>
 80057c8:	687b      	ldr	r3, [r7, #4]
 80057ca:	2224      	movs	r2, #36	; 0x24
 80057cc:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80057d0:	687b      	ldr	r3, [r7, #4]
 80057d2:	681b      	ldr	r3, [r3, #0]
 80057d4:	68da      	ldr	r2, [r3, #12]
 80057d6:	687b      	ldr	r3, [r7, #4]
 80057d8:	681b      	ldr	r3, [r3, #0]
 80057da:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80057de:	60da      	str	r2, [r3, #12]
 80057e0:	6878      	ldr	r0, [r7, #4]
 80057e2:	f000 f82b 	bl	800583c <UART_SetConfig>
 80057e6:	687b      	ldr	r3, [r7, #4]
 80057e8:	681b      	ldr	r3, [r3, #0]
 80057ea:	691a      	ldr	r2, [r3, #16]
 80057ec:	687b      	ldr	r3, [r7, #4]
 80057ee:	681b      	ldr	r3, [r3, #0]
 80057f0:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 80057f4:	611a      	str	r2, [r3, #16]
 80057f6:	687b      	ldr	r3, [r7, #4]
 80057f8:	681b      	ldr	r3, [r3, #0]
 80057fa:	695a      	ldr	r2, [r3, #20]
 80057fc:	687b      	ldr	r3, [r7, #4]
 80057fe:	681b      	ldr	r3, [r3, #0]
 8005800:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8005804:	615a      	str	r2, [r3, #20]
 8005806:	687b      	ldr	r3, [r7, #4]
 8005808:	681b      	ldr	r3, [r3, #0]
 800580a:	68da      	ldr	r2, [r3, #12]
 800580c:	687b      	ldr	r3, [r7, #4]
 800580e:	681b      	ldr	r3, [r3, #0]
 8005810:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8005814:	60da      	str	r2, [r3, #12]
 8005816:	687b      	ldr	r3, [r7, #4]
 8005818:	2200      	movs	r2, #0
 800581a:	645a      	str	r2, [r3, #68]	; 0x44
 800581c:	687b      	ldr	r3, [r7, #4]
 800581e:	2220      	movs	r2, #32
 8005820:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8005824:	687b      	ldr	r3, [r7, #4]
 8005826:	2220      	movs	r2, #32
 8005828:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800582c:	687b      	ldr	r3, [r7, #4]
 800582e:	2200      	movs	r2, #0
 8005830:	635a      	str	r2, [r3, #52]	; 0x34
 8005832:	2300      	movs	r3, #0
 8005834:	4618      	mov	r0, r3
 8005836:	3708      	adds	r7, #8
 8005838:	46bd      	mov	sp, r7
 800583a:	bd80      	pop	{r7, pc}

0800583c <UART_SetConfig>:
 800583c:	b580      	push	{r7, lr}
 800583e:	b084      	sub	sp, #16
 8005840:	af00      	add	r7, sp, #0
 8005842:	6078      	str	r0, [r7, #4]
 8005844:	687b      	ldr	r3, [r7, #4]
 8005846:	681b      	ldr	r3, [r3, #0]
 8005848:	691b      	ldr	r3, [r3, #16]
 800584a:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 800584e:	687b      	ldr	r3, [r7, #4]
 8005850:	68da      	ldr	r2, [r3, #12]
 8005852:	687b      	ldr	r3, [r7, #4]
 8005854:	681b      	ldr	r3, [r3, #0]
 8005856:	430a      	orrs	r2, r1
 8005858:	611a      	str	r2, [r3, #16]
 800585a:	687b      	ldr	r3, [r7, #4]
 800585c:	689a      	ldr	r2, [r3, #8]
 800585e:	687b      	ldr	r3, [r7, #4]
 8005860:	691b      	ldr	r3, [r3, #16]
 8005862:	431a      	orrs	r2, r3
 8005864:	687b      	ldr	r3, [r7, #4]
 8005866:	695b      	ldr	r3, [r3, #20]
 8005868:	4313      	orrs	r3, r2
 800586a:	60bb      	str	r3, [r7, #8]
 800586c:	687b      	ldr	r3, [r7, #4]
 800586e:	681b      	ldr	r3, [r3, #0]
 8005870:	68db      	ldr	r3, [r3, #12]
 8005872:	f423 53b0 	bic.w	r3, r3, #5632	; 0x1600
 8005876:	f023 030c 	bic.w	r3, r3, #12
 800587a:	687a      	ldr	r2, [r7, #4]
 800587c:	6812      	ldr	r2, [r2, #0]
 800587e:	68b9      	ldr	r1, [r7, #8]
 8005880:	430b      	orrs	r3, r1
 8005882:	60d3      	str	r3, [r2, #12]
 8005884:	687b      	ldr	r3, [r7, #4]
 8005886:	681b      	ldr	r3, [r3, #0]
 8005888:	695b      	ldr	r3, [r3, #20]
 800588a:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 800588e:	687b      	ldr	r3, [r7, #4]
 8005890:	699a      	ldr	r2, [r3, #24]
 8005892:	687b      	ldr	r3, [r7, #4]
 8005894:	681b      	ldr	r3, [r3, #0]
 8005896:	430a      	orrs	r2, r1
 8005898:	615a      	str	r2, [r3, #20]
 800589a:	687b      	ldr	r3, [r7, #4]
 800589c:	681b      	ldr	r3, [r3, #0]
 800589e:	4a2c      	ldr	r2, [pc, #176]	; (8005950 <UART_SetConfig+0x114>)
 80058a0:	4293      	cmp	r3, r2
 80058a2:	d103      	bne.n	80058ac <UART_SetConfig+0x70>
 80058a4:	f7ff f994 	bl	8004bd0 <HAL_RCC_GetPCLK2Freq>
 80058a8:	60f8      	str	r0, [r7, #12]
 80058aa:	e002      	b.n	80058b2 <UART_SetConfig+0x76>
 80058ac:	f7ff f97c 	bl	8004ba8 <HAL_RCC_GetPCLK1Freq>
 80058b0:	60f8      	str	r0, [r7, #12]
 80058b2:	68fa      	ldr	r2, [r7, #12]
 80058b4:	4613      	mov	r3, r2
 80058b6:	009b      	lsls	r3, r3, #2
 80058b8:	4413      	add	r3, r2
 80058ba:	009a      	lsls	r2, r3, #2
 80058bc:	441a      	add	r2, r3
 80058be:	687b      	ldr	r3, [r7, #4]
 80058c0:	685b      	ldr	r3, [r3, #4]
 80058c2:	009b      	lsls	r3, r3, #2
 80058c4:	fbb2 f3f3 	udiv	r3, r2, r3
 80058c8:	4a22      	ldr	r2, [pc, #136]	; (8005954 <UART_SetConfig+0x118>)
 80058ca:	fba2 2303 	umull	r2, r3, r2, r3
 80058ce:	095b      	lsrs	r3, r3, #5
 80058d0:	0119      	lsls	r1, r3, #4
 80058d2:	68fa      	ldr	r2, [r7, #12]
 80058d4:	4613      	mov	r3, r2
 80058d6:	009b      	lsls	r3, r3, #2
 80058d8:	4413      	add	r3, r2
 80058da:	009a      	lsls	r2, r3, #2
 80058dc:	441a      	add	r2, r3
 80058de:	687b      	ldr	r3, [r7, #4]
 80058e0:	685b      	ldr	r3, [r3, #4]
 80058e2:	009b      	lsls	r3, r3, #2
 80058e4:	fbb2 f2f3 	udiv	r2, r2, r3
 80058e8:	4b1a      	ldr	r3, [pc, #104]	; (8005954 <UART_SetConfig+0x118>)
 80058ea:	fba3 0302 	umull	r0, r3, r3, r2
 80058ee:	095b      	lsrs	r3, r3, #5
 80058f0:	2064      	movs	r0, #100	; 0x64
 80058f2:	fb00 f303 	mul.w	r3, r0, r3
 80058f6:	1ad3      	subs	r3, r2, r3
 80058f8:	011b      	lsls	r3, r3, #4
 80058fa:	3332      	adds	r3, #50	; 0x32
 80058fc:	4a15      	ldr	r2, [pc, #84]	; (8005954 <UART_SetConfig+0x118>)
 80058fe:	fba2 2303 	umull	r2, r3, r2, r3
 8005902:	095b      	lsrs	r3, r3, #5
 8005904:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8005908:	4419      	add	r1, r3
 800590a:	68fa      	ldr	r2, [r7, #12]
 800590c:	4613      	mov	r3, r2
 800590e:	009b      	lsls	r3, r3, #2
 8005910:	4413      	add	r3, r2
 8005912:	009a      	lsls	r2, r3, #2
 8005914:	441a      	add	r2, r3
 8005916:	687b      	ldr	r3, [r7, #4]
 8005918:	685b      	ldr	r3, [r3, #4]
 800591a:	009b      	lsls	r3, r3, #2
 800591c:	fbb2 f2f3 	udiv	r2, r2, r3
 8005920:	4b0c      	ldr	r3, [pc, #48]	; (8005954 <UART_SetConfig+0x118>)
 8005922:	fba3 0302 	umull	r0, r3, r3, r2
 8005926:	095b      	lsrs	r3, r3, #5
 8005928:	2064      	movs	r0, #100	; 0x64
 800592a:	fb00 f303 	mul.w	r3, r0, r3
 800592e:	1ad3      	subs	r3, r2, r3
 8005930:	011b      	lsls	r3, r3, #4
 8005932:	3332      	adds	r3, #50	; 0x32
 8005934:	4a07      	ldr	r2, [pc, #28]	; (8005954 <UART_SetConfig+0x118>)
 8005936:	fba2 2303 	umull	r2, r3, r2, r3
 800593a:	095b      	lsrs	r3, r3, #5
 800593c:	f003 020f 	and.w	r2, r3, #15
 8005940:	687b      	ldr	r3, [r7, #4]
 8005942:	681b      	ldr	r3, [r3, #0]
 8005944:	440a      	add	r2, r1
 8005946:	609a      	str	r2, [r3, #8]
 8005948:	bf00      	nop
 800594a:	3710      	adds	r7, #16
 800594c:	46bd      	mov	sp, r7
 800594e:	bd80      	pop	{r7, pc}
 8005950:	40013800 	.word	0x40013800
 8005954:	51eb851f 	.word	0x51eb851f

08005958 <_vsiprintf_r>:
 8005958:	b500      	push	{lr}
 800595a:	b09b      	sub	sp, #108	; 0x6c
 800595c:	9100      	str	r1, [sp, #0]
 800595e:	9104      	str	r1, [sp, #16]
 8005960:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8005964:	9105      	str	r1, [sp, #20]
 8005966:	9102      	str	r1, [sp, #8]
 8005968:	4905      	ldr	r1, [pc, #20]	; (8005980 <_vsiprintf_r+0x28>)
 800596a:	9103      	str	r1, [sp, #12]
 800596c:	4669      	mov	r1, sp
 800596e:	f000 f995 	bl	8005c9c <_svfiprintf_r>
 8005972:	2200      	movs	r2, #0
 8005974:	9b00      	ldr	r3, [sp, #0]
 8005976:	701a      	strb	r2, [r3, #0]
 8005978:	b01b      	add	sp, #108	; 0x6c
 800597a:	f85d fb04 	ldr.w	pc, [sp], #4
 800597e:	bf00      	nop
 8005980:	ffff0208 	.word	0xffff0208

08005984 <vsiprintf>:
 8005984:	4613      	mov	r3, r2
 8005986:	460a      	mov	r2, r1
 8005988:	4601      	mov	r1, r0
 800598a:	4802      	ldr	r0, [pc, #8]	; (8005994 <vsiprintf+0x10>)
 800598c:	6800      	ldr	r0, [r0, #0]
 800598e:	f7ff bfe3 	b.w	8005958 <_vsiprintf_r>
 8005992:	bf00      	nop
 8005994:	20000064 	.word	0x20000064

08005998 <memset>:
 8005998:	4603      	mov	r3, r0
 800599a:	4402      	add	r2, r0
 800599c:	4293      	cmp	r3, r2
 800599e:	d100      	bne.n	80059a2 <memset+0xa>
 80059a0:	4770      	bx	lr
 80059a2:	f803 1b01 	strb.w	r1, [r3], #1
 80059a6:	e7f9      	b.n	800599c <memset+0x4>

080059a8 <__errno>:
 80059a8:	4b01      	ldr	r3, [pc, #4]	; (80059b0 <__errno+0x8>)
 80059aa:	6818      	ldr	r0, [r3, #0]
 80059ac:	4770      	bx	lr
 80059ae:	bf00      	nop
 80059b0:	20000064 	.word	0x20000064

080059b4 <__libc_init_array>:
 80059b4:	b570      	push	{r4, r5, r6, lr}
 80059b6:	2600      	movs	r6, #0
 80059b8:	4d0c      	ldr	r5, [pc, #48]	; (80059ec <__libc_init_array+0x38>)
 80059ba:	4c0d      	ldr	r4, [pc, #52]	; (80059f0 <__libc_init_array+0x3c>)
 80059bc:	1b64      	subs	r4, r4, r5
 80059be:	10a4      	asrs	r4, r4, #2
 80059c0:	42a6      	cmp	r6, r4
 80059c2:	d109      	bne.n	80059d8 <__libc_init_array+0x24>
 80059c4:	f000 fcc0 	bl	8006348 <_init>
 80059c8:	2600      	movs	r6, #0
 80059ca:	4d0a      	ldr	r5, [pc, #40]	; (80059f4 <__libc_init_array+0x40>)
 80059cc:	4c0a      	ldr	r4, [pc, #40]	; (80059f8 <__libc_init_array+0x44>)
 80059ce:	1b64      	subs	r4, r4, r5
 80059d0:	10a4      	asrs	r4, r4, #2
 80059d2:	42a6      	cmp	r6, r4
 80059d4:	d105      	bne.n	80059e2 <__libc_init_array+0x2e>
 80059d6:	bd70      	pop	{r4, r5, r6, pc}
 80059d8:	f855 3b04 	ldr.w	r3, [r5], #4
 80059dc:	4798      	blx	r3
 80059de:	3601      	adds	r6, #1
 80059e0:	e7ee      	b.n	80059c0 <__libc_init_array+0xc>
 80059e2:	f855 3b04 	ldr.w	r3, [r5], #4
 80059e6:	4798      	blx	r3
 80059e8:	3601      	adds	r6, #1
 80059ea:	e7f2      	b.n	80059d2 <__libc_init_array+0x1e>
 80059ec:	08006404 	.word	0x08006404
 80059f0:	08006404 	.word	0x08006404
 80059f4:	08006404 	.word	0x08006404
 80059f8:	08006408 	.word	0x08006408

080059fc <__retarget_lock_acquire_recursive>:
 80059fc:	4770      	bx	lr

080059fe <__retarget_lock_release_recursive>:
 80059fe:	4770      	bx	lr

08005a00 <_free_r>:
 8005a00:	b538      	push	{r3, r4, r5, lr}
 8005a02:	4605      	mov	r5, r0
 8005a04:	2900      	cmp	r1, #0
 8005a06:	d040      	beq.n	8005a8a <_free_r+0x8a>
 8005a08:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8005a0c:	1f0c      	subs	r4, r1, #4
 8005a0e:	2b00      	cmp	r3, #0
 8005a10:	bfb8      	it	lt
 8005a12:	18e4      	addlt	r4, r4, r3
 8005a14:	f000 f8dc 	bl	8005bd0 <__malloc_lock>
 8005a18:	4a1c      	ldr	r2, [pc, #112]	; (8005a8c <_free_r+0x8c>)
 8005a1a:	6813      	ldr	r3, [r2, #0]
 8005a1c:	b933      	cbnz	r3, 8005a2c <_free_r+0x2c>
 8005a1e:	6063      	str	r3, [r4, #4]
 8005a20:	6014      	str	r4, [r2, #0]
 8005a22:	4628      	mov	r0, r5
 8005a24:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8005a28:	f000 b8d8 	b.w	8005bdc <__malloc_unlock>
 8005a2c:	42a3      	cmp	r3, r4
 8005a2e:	d908      	bls.n	8005a42 <_free_r+0x42>
 8005a30:	6820      	ldr	r0, [r4, #0]
 8005a32:	1821      	adds	r1, r4, r0
 8005a34:	428b      	cmp	r3, r1
 8005a36:	bf01      	itttt	eq
 8005a38:	6819      	ldreq	r1, [r3, #0]
 8005a3a:	685b      	ldreq	r3, [r3, #4]
 8005a3c:	1809      	addeq	r1, r1, r0
 8005a3e:	6021      	streq	r1, [r4, #0]
 8005a40:	e7ed      	b.n	8005a1e <_free_r+0x1e>
 8005a42:	461a      	mov	r2, r3
 8005a44:	685b      	ldr	r3, [r3, #4]
 8005a46:	b10b      	cbz	r3, 8005a4c <_free_r+0x4c>
 8005a48:	42a3      	cmp	r3, r4
 8005a4a:	d9fa      	bls.n	8005a42 <_free_r+0x42>
 8005a4c:	6811      	ldr	r1, [r2, #0]
 8005a4e:	1850      	adds	r0, r2, r1
 8005a50:	42a0      	cmp	r0, r4
 8005a52:	d10b      	bne.n	8005a6c <_free_r+0x6c>
 8005a54:	6820      	ldr	r0, [r4, #0]
 8005a56:	4401      	add	r1, r0
 8005a58:	1850      	adds	r0, r2, r1
 8005a5a:	4283      	cmp	r3, r0
 8005a5c:	6011      	str	r1, [r2, #0]
 8005a5e:	d1e0      	bne.n	8005a22 <_free_r+0x22>
 8005a60:	6818      	ldr	r0, [r3, #0]
 8005a62:	685b      	ldr	r3, [r3, #4]
 8005a64:	4408      	add	r0, r1
 8005a66:	6010      	str	r0, [r2, #0]
 8005a68:	6053      	str	r3, [r2, #4]
 8005a6a:	e7da      	b.n	8005a22 <_free_r+0x22>
 8005a6c:	d902      	bls.n	8005a74 <_free_r+0x74>
 8005a6e:	230c      	movs	r3, #12
 8005a70:	602b      	str	r3, [r5, #0]
 8005a72:	e7d6      	b.n	8005a22 <_free_r+0x22>
 8005a74:	6820      	ldr	r0, [r4, #0]
 8005a76:	1821      	adds	r1, r4, r0
 8005a78:	428b      	cmp	r3, r1
 8005a7a:	bf01      	itttt	eq
 8005a7c:	6819      	ldreq	r1, [r3, #0]
 8005a7e:	685b      	ldreq	r3, [r3, #4]
 8005a80:	1809      	addeq	r1, r1, r0
 8005a82:	6021      	streq	r1, [r4, #0]
 8005a84:	6063      	str	r3, [r4, #4]
 8005a86:	6054      	str	r4, [r2, #4]
 8005a88:	e7cb      	b.n	8005a22 <_free_r+0x22>
 8005a8a:	bd38      	pop	{r3, r4, r5, pc}
 8005a8c:	200014dc 	.word	0x200014dc

08005a90 <sbrk_aligned>:
 8005a90:	b570      	push	{r4, r5, r6, lr}
 8005a92:	4e0e      	ldr	r6, [pc, #56]	; (8005acc <sbrk_aligned+0x3c>)
 8005a94:	460c      	mov	r4, r1
 8005a96:	6831      	ldr	r1, [r6, #0]
 8005a98:	4605      	mov	r5, r0
 8005a9a:	b911      	cbnz	r1, 8005aa2 <sbrk_aligned+0x12>
 8005a9c:	f000 fbaa 	bl	80061f4 <_sbrk_r>
 8005aa0:	6030      	str	r0, [r6, #0]
 8005aa2:	4621      	mov	r1, r4
 8005aa4:	4628      	mov	r0, r5
 8005aa6:	f000 fba5 	bl	80061f4 <_sbrk_r>
 8005aaa:	1c43      	adds	r3, r0, #1
 8005aac:	d00a      	beq.n	8005ac4 <sbrk_aligned+0x34>
 8005aae:	1cc4      	adds	r4, r0, #3
 8005ab0:	f024 0403 	bic.w	r4, r4, #3
 8005ab4:	42a0      	cmp	r0, r4
 8005ab6:	d007      	beq.n	8005ac8 <sbrk_aligned+0x38>
 8005ab8:	1a21      	subs	r1, r4, r0
 8005aba:	4628      	mov	r0, r5
 8005abc:	f000 fb9a 	bl	80061f4 <_sbrk_r>
 8005ac0:	3001      	adds	r0, #1
 8005ac2:	d101      	bne.n	8005ac8 <sbrk_aligned+0x38>
 8005ac4:	f04f 34ff 	mov.w	r4, #4294967295
 8005ac8:	4620      	mov	r0, r4
 8005aca:	bd70      	pop	{r4, r5, r6, pc}
 8005acc:	200014e0 	.word	0x200014e0

08005ad0 <_malloc_r>:
 8005ad0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005ad4:	1ccd      	adds	r5, r1, #3
 8005ad6:	f025 0503 	bic.w	r5, r5, #3
 8005ada:	3508      	adds	r5, #8
 8005adc:	2d0c      	cmp	r5, #12
 8005ade:	bf38      	it	cc
 8005ae0:	250c      	movcc	r5, #12
 8005ae2:	2d00      	cmp	r5, #0
 8005ae4:	4607      	mov	r7, r0
 8005ae6:	db01      	blt.n	8005aec <_malloc_r+0x1c>
 8005ae8:	42a9      	cmp	r1, r5
 8005aea:	d905      	bls.n	8005af8 <_malloc_r+0x28>
 8005aec:	230c      	movs	r3, #12
 8005aee:	2600      	movs	r6, #0
 8005af0:	603b      	str	r3, [r7, #0]
 8005af2:	4630      	mov	r0, r6
 8005af4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8005af8:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8005bcc <_malloc_r+0xfc>
 8005afc:	f000 f868 	bl	8005bd0 <__malloc_lock>
 8005b00:	f8d8 3000 	ldr.w	r3, [r8]
 8005b04:	461c      	mov	r4, r3
 8005b06:	bb5c      	cbnz	r4, 8005b60 <_malloc_r+0x90>
 8005b08:	4629      	mov	r1, r5
 8005b0a:	4638      	mov	r0, r7
 8005b0c:	f7ff ffc0 	bl	8005a90 <sbrk_aligned>
 8005b10:	1c43      	adds	r3, r0, #1
 8005b12:	4604      	mov	r4, r0
 8005b14:	d155      	bne.n	8005bc2 <_malloc_r+0xf2>
 8005b16:	f8d8 4000 	ldr.w	r4, [r8]
 8005b1a:	4626      	mov	r6, r4
 8005b1c:	2e00      	cmp	r6, #0
 8005b1e:	d145      	bne.n	8005bac <_malloc_r+0xdc>
 8005b20:	2c00      	cmp	r4, #0
 8005b22:	d048      	beq.n	8005bb6 <_malloc_r+0xe6>
 8005b24:	6823      	ldr	r3, [r4, #0]
 8005b26:	4631      	mov	r1, r6
 8005b28:	4638      	mov	r0, r7
 8005b2a:	eb04 0903 	add.w	r9, r4, r3
 8005b2e:	f000 fb61 	bl	80061f4 <_sbrk_r>
 8005b32:	4581      	cmp	r9, r0
 8005b34:	d13f      	bne.n	8005bb6 <_malloc_r+0xe6>
 8005b36:	6821      	ldr	r1, [r4, #0]
 8005b38:	4638      	mov	r0, r7
 8005b3a:	1a6d      	subs	r5, r5, r1
 8005b3c:	4629      	mov	r1, r5
 8005b3e:	f7ff ffa7 	bl	8005a90 <sbrk_aligned>
 8005b42:	3001      	adds	r0, #1
 8005b44:	d037      	beq.n	8005bb6 <_malloc_r+0xe6>
 8005b46:	6823      	ldr	r3, [r4, #0]
 8005b48:	442b      	add	r3, r5
 8005b4a:	6023      	str	r3, [r4, #0]
 8005b4c:	f8d8 3000 	ldr.w	r3, [r8]
 8005b50:	2b00      	cmp	r3, #0
 8005b52:	d038      	beq.n	8005bc6 <_malloc_r+0xf6>
 8005b54:	685a      	ldr	r2, [r3, #4]
 8005b56:	42a2      	cmp	r2, r4
 8005b58:	d12b      	bne.n	8005bb2 <_malloc_r+0xe2>
 8005b5a:	2200      	movs	r2, #0
 8005b5c:	605a      	str	r2, [r3, #4]
 8005b5e:	e00f      	b.n	8005b80 <_malloc_r+0xb0>
 8005b60:	6822      	ldr	r2, [r4, #0]
 8005b62:	1b52      	subs	r2, r2, r5
 8005b64:	d41f      	bmi.n	8005ba6 <_malloc_r+0xd6>
 8005b66:	2a0b      	cmp	r2, #11
 8005b68:	d917      	bls.n	8005b9a <_malloc_r+0xca>
 8005b6a:	1961      	adds	r1, r4, r5
 8005b6c:	42a3      	cmp	r3, r4
 8005b6e:	6025      	str	r5, [r4, #0]
 8005b70:	bf18      	it	ne
 8005b72:	6059      	strne	r1, [r3, #4]
 8005b74:	6863      	ldr	r3, [r4, #4]
 8005b76:	bf08      	it	eq
 8005b78:	f8c8 1000 	streq.w	r1, [r8]
 8005b7c:	5162      	str	r2, [r4, r5]
 8005b7e:	604b      	str	r3, [r1, #4]
 8005b80:	4638      	mov	r0, r7
 8005b82:	f104 060b 	add.w	r6, r4, #11
 8005b86:	f000 f829 	bl	8005bdc <__malloc_unlock>
 8005b8a:	f026 0607 	bic.w	r6, r6, #7
 8005b8e:	1d23      	adds	r3, r4, #4
 8005b90:	1af2      	subs	r2, r6, r3
 8005b92:	d0ae      	beq.n	8005af2 <_malloc_r+0x22>
 8005b94:	1b9b      	subs	r3, r3, r6
 8005b96:	50a3      	str	r3, [r4, r2]
 8005b98:	e7ab      	b.n	8005af2 <_malloc_r+0x22>
 8005b9a:	42a3      	cmp	r3, r4
 8005b9c:	6862      	ldr	r2, [r4, #4]
 8005b9e:	d1dd      	bne.n	8005b5c <_malloc_r+0x8c>
 8005ba0:	f8c8 2000 	str.w	r2, [r8]
 8005ba4:	e7ec      	b.n	8005b80 <_malloc_r+0xb0>
 8005ba6:	4623      	mov	r3, r4
 8005ba8:	6864      	ldr	r4, [r4, #4]
 8005baa:	e7ac      	b.n	8005b06 <_malloc_r+0x36>
 8005bac:	4634      	mov	r4, r6
 8005bae:	6876      	ldr	r6, [r6, #4]
 8005bb0:	e7b4      	b.n	8005b1c <_malloc_r+0x4c>
 8005bb2:	4613      	mov	r3, r2
 8005bb4:	e7cc      	b.n	8005b50 <_malloc_r+0x80>
 8005bb6:	230c      	movs	r3, #12
 8005bb8:	4638      	mov	r0, r7
 8005bba:	603b      	str	r3, [r7, #0]
 8005bbc:	f000 f80e 	bl	8005bdc <__malloc_unlock>
 8005bc0:	e797      	b.n	8005af2 <_malloc_r+0x22>
 8005bc2:	6025      	str	r5, [r4, #0]
 8005bc4:	e7dc      	b.n	8005b80 <_malloc_r+0xb0>
 8005bc6:	605b      	str	r3, [r3, #4]
 8005bc8:	deff      	udf	#255	; 0xff
 8005bca:	bf00      	nop
 8005bcc:	200014dc 	.word	0x200014dc

08005bd0 <__malloc_lock>:
 8005bd0:	4801      	ldr	r0, [pc, #4]	; (8005bd8 <__malloc_lock+0x8>)
 8005bd2:	f7ff bf13 	b.w	80059fc <__retarget_lock_acquire_recursive>
 8005bd6:	bf00      	nop
 8005bd8:	200014d8 	.word	0x200014d8

08005bdc <__malloc_unlock>:
 8005bdc:	4801      	ldr	r0, [pc, #4]	; (8005be4 <__malloc_unlock+0x8>)
 8005bde:	f7ff bf0e 	b.w	80059fe <__retarget_lock_release_recursive>
 8005be2:	bf00      	nop
 8005be4:	200014d8 	.word	0x200014d8

08005be8 <__ssputs_r>:
 8005be8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005bec:	461f      	mov	r7, r3
 8005bee:	688e      	ldr	r6, [r1, #8]
 8005bf0:	4682      	mov	sl, r0
 8005bf2:	42be      	cmp	r6, r7
 8005bf4:	460c      	mov	r4, r1
 8005bf6:	4690      	mov	r8, r2
 8005bf8:	680b      	ldr	r3, [r1, #0]
 8005bfa:	d82c      	bhi.n	8005c56 <__ssputs_r+0x6e>
 8005bfc:	898a      	ldrh	r2, [r1, #12]
 8005bfe:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8005c02:	d026      	beq.n	8005c52 <__ssputs_r+0x6a>
 8005c04:	6965      	ldr	r5, [r4, #20]
 8005c06:	6909      	ldr	r1, [r1, #16]
 8005c08:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8005c0c:	eba3 0901 	sub.w	r9, r3, r1
 8005c10:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8005c14:	1c7b      	adds	r3, r7, #1
 8005c16:	444b      	add	r3, r9
 8005c18:	106d      	asrs	r5, r5, #1
 8005c1a:	429d      	cmp	r5, r3
 8005c1c:	bf38      	it	cc
 8005c1e:	461d      	movcc	r5, r3
 8005c20:	0553      	lsls	r3, r2, #21
 8005c22:	d527      	bpl.n	8005c74 <__ssputs_r+0x8c>
 8005c24:	4629      	mov	r1, r5
 8005c26:	f7ff ff53 	bl	8005ad0 <_malloc_r>
 8005c2a:	4606      	mov	r6, r0
 8005c2c:	b360      	cbz	r0, 8005c88 <__ssputs_r+0xa0>
 8005c2e:	464a      	mov	r2, r9
 8005c30:	6921      	ldr	r1, [r4, #16]
 8005c32:	f000 fafd 	bl	8006230 <memcpy>
 8005c36:	89a3      	ldrh	r3, [r4, #12]
 8005c38:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8005c3c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8005c40:	81a3      	strh	r3, [r4, #12]
 8005c42:	6126      	str	r6, [r4, #16]
 8005c44:	444e      	add	r6, r9
 8005c46:	6026      	str	r6, [r4, #0]
 8005c48:	463e      	mov	r6, r7
 8005c4a:	6165      	str	r5, [r4, #20]
 8005c4c:	eba5 0509 	sub.w	r5, r5, r9
 8005c50:	60a5      	str	r5, [r4, #8]
 8005c52:	42be      	cmp	r6, r7
 8005c54:	d900      	bls.n	8005c58 <__ssputs_r+0x70>
 8005c56:	463e      	mov	r6, r7
 8005c58:	4632      	mov	r2, r6
 8005c5a:	4641      	mov	r1, r8
 8005c5c:	6820      	ldr	r0, [r4, #0]
 8005c5e:	f000 faaf 	bl	80061c0 <memmove>
 8005c62:	2000      	movs	r0, #0
 8005c64:	68a3      	ldr	r3, [r4, #8]
 8005c66:	1b9b      	subs	r3, r3, r6
 8005c68:	60a3      	str	r3, [r4, #8]
 8005c6a:	6823      	ldr	r3, [r4, #0]
 8005c6c:	4433      	add	r3, r6
 8005c6e:	6023      	str	r3, [r4, #0]
 8005c70:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005c74:	462a      	mov	r2, r5
 8005c76:	f000 fae9 	bl	800624c <_realloc_r>
 8005c7a:	4606      	mov	r6, r0
 8005c7c:	2800      	cmp	r0, #0
 8005c7e:	d1e0      	bne.n	8005c42 <__ssputs_r+0x5a>
 8005c80:	4650      	mov	r0, sl
 8005c82:	6921      	ldr	r1, [r4, #16]
 8005c84:	f7ff febc 	bl	8005a00 <_free_r>
 8005c88:	230c      	movs	r3, #12
 8005c8a:	f8ca 3000 	str.w	r3, [sl]
 8005c8e:	89a3      	ldrh	r3, [r4, #12]
 8005c90:	f04f 30ff 	mov.w	r0, #4294967295
 8005c94:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8005c98:	81a3      	strh	r3, [r4, #12]
 8005c9a:	e7e9      	b.n	8005c70 <__ssputs_r+0x88>

08005c9c <_svfiprintf_r>:
 8005c9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005ca0:	4698      	mov	r8, r3
 8005ca2:	898b      	ldrh	r3, [r1, #12]
 8005ca4:	4607      	mov	r7, r0
 8005ca6:	061b      	lsls	r3, r3, #24
 8005ca8:	460d      	mov	r5, r1
 8005caa:	4614      	mov	r4, r2
 8005cac:	b09d      	sub	sp, #116	; 0x74
 8005cae:	d50e      	bpl.n	8005cce <_svfiprintf_r+0x32>
 8005cb0:	690b      	ldr	r3, [r1, #16]
 8005cb2:	b963      	cbnz	r3, 8005cce <_svfiprintf_r+0x32>
 8005cb4:	2140      	movs	r1, #64	; 0x40
 8005cb6:	f7ff ff0b 	bl	8005ad0 <_malloc_r>
 8005cba:	6028      	str	r0, [r5, #0]
 8005cbc:	6128      	str	r0, [r5, #16]
 8005cbe:	b920      	cbnz	r0, 8005cca <_svfiprintf_r+0x2e>
 8005cc0:	230c      	movs	r3, #12
 8005cc2:	603b      	str	r3, [r7, #0]
 8005cc4:	f04f 30ff 	mov.w	r0, #4294967295
 8005cc8:	e0d0      	b.n	8005e6c <_svfiprintf_r+0x1d0>
 8005cca:	2340      	movs	r3, #64	; 0x40
 8005ccc:	616b      	str	r3, [r5, #20]
 8005cce:	2300      	movs	r3, #0
 8005cd0:	9309      	str	r3, [sp, #36]	; 0x24
 8005cd2:	2320      	movs	r3, #32
 8005cd4:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8005cd8:	2330      	movs	r3, #48	; 0x30
 8005cda:	f04f 0901 	mov.w	r9, #1
 8005cde:	f8cd 800c 	str.w	r8, [sp, #12]
 8005ce2:	f8df 81a0 	ldr.w	r8, [pc, #416]	; 8005e84 <_svfiprintf_r+0x1e8>
 8005ce6:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8005cea:	4623      	mov	r3, r4
 8005cec:	469a      	mov	sl, r3
 8005cee:	f813 2b01 	ldrb.w	r2, [r3], #1
 8005cf2:	b10a      	cbz	r2, 8005cf8 <_svfiprintf_r+0x5c>
 8005cf4:	2a25      	cmp	r2, #37	; 0x25
 8005cf6:	d1f9      	bne.n	8005cec <_svfiprintf_r+0x50>
 8005cf8:	ebba 0b04 	subs.w	fp, sl, r4
 8005cfc:	d00b      	beq.n	8005d16 <_svfiprintf_r+0x7a>
 8005cfe:	465b      	mov	r3, fp
 8005d00:	4622      	mov	r2, r4
 8005d02:	4629      	mov	r1, r5
 8005d04:	4638      	mov	r0, r7
 8005d06:	f7ff ff6f 	bl	8005be8 <__ssputs_r>
 8005d0a:	3001      	adds	r0, #1
 8005d0c:	f000 80a9 	beq.w	8005e62 <_svfiprintf_r+0x1c6>
 8005d10:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8005d12:	445a      	add	r2, fp
 8005d14:	9209      	str	r2, [sp, #36]	; 0x24
 8005d16:	f89a 3000 	ldrb.w	r3, [sl]
 8005d1a:	2b00      	cmp	r3, #0
 8005d1c:	f000 80a1 	beq.w	8005e62 <_svfiprintf_r+0x1c6>
 8005d20:	2300      	movs	r3, #0
 8005d22:	f04f 32ff 	mov.w	r2, #4294967295
 8005d26:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8005d2a:	f10a 0a01 	add.w	sl, sl, #1
 8005d2e:	9304      	str	r3, [sp, #16]
 8005d30:	9307      	str	r3, [sp, #28]
 8005d32:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8005d36:	931a      	str	r3, [sp, #104]	; 0x68
 8005d38:	4654      	mov	r4, sl
 8005d3a:	2205      	movs	r2, #5
 8005d3c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005d40:	4850      	ldr	r0, [pc, #320]	; (8005e84 <_svfiprintf_r+0x1e8>)
 8005d42:	f000 fa67 	bl	8006214 <memchr>
 8005d46:	9a04      	ldr	r2, [sp, #16]
 8005d48:	b9d8      	cbnz	r0, 8005d82 <_svfiprintf_r+0xe6>
 8005d4a:	06d0      	lsls	r0, r2, #27
 8005d4c:	bf44      	itt	mi
 8005d4e:	2320      	movmi	r3, #32
 8005d50:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8005d54:	0711      	lsls	r1, r2, #28
 8005d56:	bf44      	itt	mi
 8005d58:	232b      	movmi	r3, #43	; 0x2b
 8005d5a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8005d5e:	f89a 3000 	ldrb.w	r3, [sl]
 8005d62:	2b2a      	cmp	r3, #42	; 0x2a
 8005d64:	d015      	beq.n	8005d92 <_svfiprintf_r+0xf6>
 8005d66:	4654      	mov	r4, sl
 8005d68:	2000      	movs	r0, #0
 8005d6a:	f04f 0c0a 	mov.w	ip, #10
 8005d6e:	9a07      	ldr	r2, [sp, #28]
 8005d70:	4621      	mov	r1, r4
 8005d72:	f811 3b01 	ldrb.w	r3, [r1], #1
 8005d76:	3b30      	subs	r3, #48	; 0x30
 8005d78:	2b09      	cmp	r3, #9
 8005d7a:	d94d      	bls.n	8005e18 <_svfiprintf_r+0x17c>
 8005d7c:	b1b0      	cbz	r0, 8005dac <_svfiprintf_r+0x110>
 8005d7e:	9207      	str	r2, [sp, #28]
 8005d80:	e014      	b.n	8005dac <_svfiprintf_r+0x110>
 8005d82:	eba0 0308 	sub.w	r3, r0, r8
 8005d86:	fa09 f303 	lsl.w	r3, r9, r3
 8005d8a:	4313      	orrs	r3, r2
 8005d8c:	46a2      	mov	sl, r4
 8005d8e:	9304      	str	r3, [sp, #16]
 8005d90:	e7d2      	b.n	8005d38 <_svfiprintf_r+0x9c>
 8005d92:	9b03      	ldr	r3, [sp, #12]
 8005d94:	1d19      	adds	r1, r3, #4
 8005d96:	681b      	ldr	r3, [r3, #0]
 8005d98:	9103      	str	r1, [sp, #12]
 8005d9a:	2b00      	cmp	r3, #0
 8005d9c:	bfbb      	ittet	lt
 8005d9e:	425b      	neglt	r3, r3
 8005da0:	f042 0202 	orrlt.w	r2, r2, #2
 8005da4:	9307      	strge	r3, [sp, #28]
 8005da6:	9307      	strlt	r3, [sp, #28]
 8005da8:	bfb8      	it	lt
 8005daa:	9204      	strlt	r2, [sp, #16]
 8005dac:	7823      	ldrb	r3, [r4, #0]
 8005dae:	2b2e      	cmp	r3, #46	; 0x2e
 8005db0:	d10c      	bne.n	8005dcc <_svfiprintf_r+0x130>
 8005db2:	7863      	ldrb	r3, [r4, #1]
 8005db4:	2b2a      	cmp	r3, #42	; 0x2a
 8005db6:	d134      	bne.n	8005e22 <_svfiprintf_r+0x186>
 8005db8:	9b03      	ldr	r3, [sp, #12]
 8005dba:	3402      	adds	r4, #2
 8005dbc:	1d1a      	adds	r2, r3, #4
 8005dbe:	681b      	ldr	r3, [r3, #0]
 8005dc0:	9203      	str	r2, [sp, #12]
 8005dc2:	2b00      	cmp	r3, #0
 8005dc4:	bfb8      	it	lt
 8005dc6:	f04f 33ff 	movlt.w	r3, #4294967295
 8005dca:	9305      	str	r3, [sp, #20]
 8005dcc:	f8df a0b8 	ldr.w	sl, [pc, #184]	; 8005e88 <_svfiprintf_r+0x1ec>
 8005dd0:	2203      	movs	r2, #3
 8005dd2:	4650      	mov	r0, sl
 8005dd4:	7821      	ldrb	r1, [r4, #0]
 8005dd6:	f000 fa1d 	bl	8006214 <memchr>
 8005dda:	b138      	cbz	r0, 8005dec <_svfiprintf_r+0x150>
 8005ddc:	2240      	movs	r2, #64	; 0x40
 8005dde:	9b04      	ldr	r3, [sp, #16]
 8005de0:	eba0 000a 	sub.w	r0, r0, sl
 8005de4:	4082      	lsls	r2, r0
 8005de6:	4313      	orrs	r3, r2
 8005de8:	3401      	adds	r4, #1
 8005dea:	9304      	str	r3, [sp, #16]
 8005dec:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005df0:	2206      	movs	r2, #6
 8005df2:	4826      	ldr	r0, [pc, #152]	; (8005e8c <_svfiprintf_r+0x1f0>)
 8005df4:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8005df8:	f000 fa0c 	bl	8006214 <memchr>
 8005dfc:	2800      	cmp	r0, #0
 8005dfe:	d038      	beq.n	8005e72 <_svfiprintf_r+0x1d6>
 8005e00:	4b23      	ldr	r3, [pc, #140]	; (8005e90 <_svfiprintf_r+0x1f4>)
 8005e02:	bb1b      	cbnz	r3, 8005e4c <_svfiprintf_r+0x1b0>
 8005e04:	9b03      	ldr	r3, [sp, #12]
 8005e06:	3307      	adds	r3, #7
 8005e08:	f023 0307 	bic.w	r3, r3, #7
 8005e0c:	3308      	adds	r3, #8
 8005e0e:	9303      	str	r3, [sp, #12]
 8005e10:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005e12:	4433      	add	r3, r6
 8005e14:	9309      	str	r3, [sp, #36]	; 0x24
 8005e16:	e768      	b.n	8005cea <_svfiprintf_r+0x4e>
 8005e18:	460c      	mov	r4, r1
 8005e1a:	2001      	movs	r0, #1
 8005e1c:	fb0c 3202 	mla	r2, ip, r2, r3
 8005e20:	e7a6      	b.n	8005d70 <_svfiprintf_r+0xd4>
 8005e22:	2300      	movs	r3, #0
 8005e24:	f04f 0c0a 	mov.w	ip, #10
 8005e28:	4619      	mov	r1, r3
 8005e2a:	3401      	adds	r4, #1
 8005e2c:	9305      	str	r3, [sp, #20]
 8005e2e:	4620      	mov	r0, r4
 8005e30:	f810 2b01 	ldrb.w	r2, [r0], #1
 8005e34:	3a30      	subs	r2, #48	; 0x30
 8005e36:	2a09      	cmp	r2, #9
 8005e38:	d903      	bls.n	8005e42 <_svfiprintf_r+0x1a6>
 8005e3a:	2b00      	cmp	r3, #0
 8005e3c:	d0c6      	beq.n	8005dcc <_svfiprintf_r+0x130>
 8005e3e:	9105      	str	r1, [sp, #20]
 8005e40:	e7c4      	b.n	8005dcc <_svfiprintf_r+0x130>
 8005e42:	4604      	mov	r4, r0
 8005e44:	2301      	movs	r3, #1
 8005e46:	fb0c 2101 	mla	r1, ip, r1, r2
 8005e4a:	e7f0      	b.n	8005e2e <_svfiprintf_r+0x192>
 8005e4c:	ab03      	add	r3, sp, #12
 8005e4e:	9300      	str	r3, [sp, #0]
 8005e50:	462a      	mov	r2, r5
 8005e52:	4638      	mov	r0, r7
 8005e54:	4b0f      	ldr	r3, [pc, #60]	; (8005e94 <_svfiprintf_r+0x1f8>)
 8005e56:	a904      	add	r1, sp, #16
 8005e58:	f3af 8000 	nop.w
 8005e5c:	1c42      	adds	r2, r0, #1
 8005e5e:	4606      	mov	r6, r0
 8005e60:	d1d6      	bne.n	8005e10 <_svfiprintf_r+0x174>
 8005e62:	89ab      	ldrh	r3, [r5, #12]
 8005e64:	065b      	lsls	r3, r3, #25
 8005e66:	f53f af2d 	bmi.w	8005cc4 <_svfiprintf_r+0x28>
 8005e6a:	9809      	ldr	r0, [sp, #36]	; 0x24
 8005e6c:	b01d      	add	sp, #116	; 0x74
 8005e6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005e72:	ab03      	add	r3, sp, #12
 8005e74:	9300      	str	r3, [sp, #0]
 8005e76:	462a      	mov	r2, r5
 8005e78:	4638      	mov	r0, r7
 8005e7a:	4b06      	ldr	r3, [pc, #24]	; (8005e94 <_svfiprintf_r+0x1f8>)
 8005e7c:	a904      	add	r1, sp, #16
 8005e7e:	f000 f87d 	bl	8005f7c <_printf_i>
 8005e82:	e7eb      	b.n	8005e5c <_svfiprintf_r+0x1c0>
 8005e84:	080063ce 	.word	0x080063ce
 8005e88:	080063d4 	.word	0x080063d4
 8005e8c:	080063d8 	.word	0x080063d8
 8005e90:	00000000 	.word	0x00000000
 8005e94:	08005be9 	.word	0x08005be9

08005e98 <_printf_common>:
 8005e98:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005e9c:	4616      	mov	r6, r2
 8005e9e:	4699      	mov	r9, r3
 8005ea0:	688a      	ldr	r2, [r1, #8]
 8005ea2:	690b      	ldr	r3, [r1, #16]
 8005ea4:	4607      	mov	r7, r0
 8005ea6:	4293      	cmp	r3, r2
 8005ea8:	bfb8      	it	lt
 8005eaa:	4613      	movlt	r3, r2
 8005eac:	6033      	str	r3, [r6, #0]
 8005eae:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8005eb2:	460c      	mov	r4, r1
 8005eb4:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8005eb8:	b10a      	cbz	r2, 8005ebe <_printf_common+0x26>
 8005eba:	3301      	adds	r3, #1
 8005ebc:	6033      	str	r3, [r6, #0]
 8005ebe:	6823      	ldr	r3, [r4, #0]
 8005ec0:	0699      	lsls	r1, r3, #26
 8005ec2:	bf42      	ittt	mi
 8005ec4:	6833      	ldrmi	r3, [r6, #0]
 8005ec6:	3302      	addmi	r3, #2
 8005ec8:	6033      	strmi	r3, [r6, #0]
 8005eca:	6825      	ldr	r5, [r4, #0]
 8005ecc:	f015 0506 	ands.w	r5, r5, #6
 8005ed0:	d106      	bne.n	8005ee0 <_printf_common+0x48>
 8005ed2:	f104 0a19 	add.w	sl, r4, #25
 8005ed6:	68e3      	ldr	r3, [r4, #12]
 8005ed8:	6832      	ldr	r2, [r6, #0]
 8005eda:	1a9b      	subs	r3, r3, r2
 8005edc:	42ab      	cmp	r3, r5
 8005ede:	dc2b      	bgt.n	8005f38 <_printf_common+0xa0>
 8005ee0:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8005ee4:	1e13      	subs	r3, r2, #0
 8005ee6:	6822      	ldr	r2, [r4, #0]
 8005ee8:	bf18      	it	ne
 8005eea:	2301      	movne	r3, #1
 8005eec:	0692      	lsls	r2, r2, #26
 8005eee:	d430      	bmi.n	8005f52 <_printf_common+0xba>
 8005ef0:	4649      	mov	r1, r9
 8005ef2:	4638      	mov	r0, r7
 8005ef4:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8005ef8:	47c0      	blx	r8
 8005efa:	3001      	adds	r0, #1
 8005efc:	d023      	beq.n	8005f46 <_printf_common+0xae>
 8005efe:	6823      	ldr	r3, [r4, #0]
 8005f00:	6922      	ldr	r2, [r4, #16]
 8005f02:	f003 0306 	and.w	r3, r3, #6
 8005f06:	2b04      	cmp	r3, #4
 8005f08:	bf14      	ite	ne
 8005f0a:	2500      	movne	r5, #0
 8005f0c:	6833      	ldreq	r3, [r6, #0]
 8005f0e:	f04f 0600 	mov.w	r6, #0
 8005f12:	bf08      	it	eq
 8005f14:	68e5      	ldreq	r5, [r4, #12]
 8005f16:	f104 041a 	add.w	r4, r4, #26
 8005f1a:	bf08      	it	eq
 8005f1c:	1aed      	subeq	r5, r5, r3
 8005f1e:	f854 3c12 	ldr.w	r3, [r4, #-18]
 8005f22:	bf08      	it	eq
 8005f24:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8005f28:	4293      	cmp	r3, r2
 8005f2a:	bfc4      	itt	gt
 8005f2c:	1a9b      	subgt	r3, r3, r2
 8005f2e:	18ed      	addgt	r5, r5, r3
 8005f30:	42b5      	cmp	r5, r6
 8005f32:	d11a      	bne.n	8005f6a <_printf_common+0xd2>
 8005f34:	2000      	movs	r0, #0
 8005f36:	e008      	b.n	8005f4a <_printf_common+0xb2>
 8005f38:	2301      	movs	r3, #1
 8005f3a:	4652      	mov	r2, sl
 8005f3c:	4649      	mov	r1, r9
 8005f3e:	4638      	mov	r0, r7
 8005f40:	47c0      	blx	r8
 8005f42:	3001      	adds	r0, #1
 8005f44:	d103      	bne.n	8005f4e <_printf_common+0xb6>
 8005f46:	f04f 30ff 	mov.w	r0, #4294967295
 8005f4a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005f4e:	3501      	adds	r5, #1
 8005f50:	e7c1      	b.n	8005ed6 <_printf_common+0x3e>
 8005f52:	2030      	movs	r0, #48	; 0x30
 8005f54:	18e1      	adds	r1, r4, r3
 8005f56:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8005f5a:	1c5a      	adds	r2, r3, #1
 8005f5c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8005f60:	4422      	add	r2, r4
 8005f62:	3302      	adds	r3, #2
 8005f64:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8005f68:	e7c2      	b.n	8005ef0 <_printf_common+0x58>
 8005f6a:	2301      	movs	r3, #1
 8005f6c:	4622      	mov	r2, r4
 8005f6e:	4649      	mov	r1, r9
 8005f70:	4638      	mov	r0, r7
 8005f72:	47c0      	blx	r8
 8005f74:	3001      	adds	r0, #1
 8005f76:	d0e6      	beq.n	8005f46 <_printf_common+0xae>
 8005f78:	3601      	adds	r6, #1
 8005f7a:	e7d9      	b.n	8005f30 <_printf_common+0x98>

08005f7c <_printf_i>:
 8005f7c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8005f80:	7e0f      	ldrb	r7, [r1, #24]
 8005f82:	4691      	mov	r9, r2
 8005f84:	2f78      	cmp	r7, #120	; 0x78
 8005f86:	4680      	mov	r8, r0
 8005f88:	460c      	mov	r4, r1
 8005f8a:	469a      	mov	sl, r3
 8005f8c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8005f8e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8005f92:	d807      	bhi.n	8005fa4 <_printf_i+0x28>
 8005f94:	2f62      	cmp	r7, #98	; 0x62
 8005f96:	d80a      	bhi.n	8005fae <_printf_i+0x32>
 8005f98:	2f00      	cmp	r7, #0
 8005f9a:	f000 80d5 	beq.w	8006148 <_printf_i+0x1cc>
 8005f9e:	2f58      	cmp	r7, #88	; 0x58
 8005fa0:	f000 80c1 	beq.w	8006126 <_printf_i+0x1aa>
 8005fa4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8005fa8:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8005fac:	e03a      	b.n	8006024 <_printf_i+0xa8>
 8005fae:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8005fb2:	2b15      	cmp	r3, #21
 8005fb4:	d8f6      	bhi.n	8005fa4 <_printf_i+0x28>
 8005fb6:	a101      	add	r1, pc, #4	; (adr r1, 8005fbc <_printf_i+0x40>)
 8005fb8:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8005fbc:	08006015 	.word	0x08006015
 8005fc0:	08006029 	.word	0x08006029
 8005fc4:	08005fa5 	.word	0x08005fa5
 8005fc8:	08005fa5 	.word	0x08005fa5
 8005fcc:	08005fa5 	.word	0x08005fa5
 8005fd0:	08005fa5 	.word	0x08005fa5
 8005fd4:	08006029 	.word	0x08006029
 8005fd8:	08005fa5 	.word	0x08005fa5
 8005fdc:	08005fa5 	.word	0x08005fa5
 8005fe0:	08005fa5 	.word	0x08005fa5
 8005fe4:	08005fa5 	.word	0x08005fa5
 8005fe8:	0800612f 	.word	0x0800612f
 8005fec:	08006055 	.word	0x08006055
 8005ff0:	080060e9 	.word	0x080060e9
 8005ff4:	08005fa5 	.word	0x08005fa5
 8005ff8:	08005fa5 	.word	0x08005fa5
 8005ffc:	08006151 	.word	0x08006151
 8006000:	08005fa5 	.word	0x08005fa5
 8006004:	08006055 	.word	0x08006055
 8006008:	08005fa5 	.word	0x08005fa5
 800600c:	08005fa5 	.word	0x08005fa5
 8006010:	080060f1 	.word	0x080060f1
 8006014:	682b      	ldr	r3, [r5, #0]
 8006016:	1d1a      	adds	r2, r3, #4
 8006018:	681b      	ldr	r3, [r3, #0]
 800601a:	602a      	str	r2, [r5, #0]
 800601c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8006020:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8006024:	2301      	movs	r3, #1
 8006026:	e0a0      	b.n	800616a <_printf_i+0x1ee>
 8006028:	6820      	ldr	r0, [r4, #0]
 800602a:	682b      	ldr	r3, [r5, #0]
 800602c:	0607      	lsls	r7, r0, #24
 800602e:	f103 0104 	add.w	r1, r3, #4
 8006032:	6029      	str	r1, [r5, #0]
 8006034:	d501      	bpl.n	800603a <_printf_i+0xbe>
 8006036:	681e      	ldr	r6, [r3, #0]
 8006038:	e003      	b.n	8006042 <_printf_i+0xc6>
 800603a:	0646      	lsls	r6, r0, #25
 800603c:	d5fb      	bpl.n	8006036 <_printf_i+0xba>
 800603e:	f9b3 6000 	ldrsh.w	r6, [r3]
 8006042:	2e00      	cmp	r6, #0
 8006044:	da03      	bge.n	800604e <_printf_i+0xd2>
 8006046:	232d      	movs	r3, #45	; 0x2d
 8006048:	4276      	negs	r6, r6
 800604a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800604e:	230a      	movs	r3, #10
 8006050:	4859      	ldr	r0, [pc, #356]	; (80061b8 <_printf_i+0x23c>)
 8006052:	e012      	b.n	800607a <_printf_i+0xfe>
 8006054:	682b      	ldr	r3, [r5, #0]
 8006056:	6820      	ldr	r0, [r4, #0]
 8006058:	1d19      	adds	r1, r3, #4
 800605a:	6029      	str	r1, [r5, #0]
 800605c:	0605      	lsls	r5, r0, #24
 800605e:	d501      	bpl.n	8006064 <_printf_i+0xe8>
 8006060:	681e      	ldr	r6, [r3, #0]
 8006062:	e002      	b.n	800606a <_printf_i+0xee>
 8006064:	0641      	lsls	r1, r0, #25
 8006066:	d5fb      	bpl.n	8006060 <_printf_i+0xe4>
 8006068:	881e      	ldrh	r6, [r3, #0]
 800606a:	2f6f      	cmp	r7, #111	; 0x6f
 800606c:	bf0c      	ite	eq
 800606e:	2308      	moveq	r3, #8
 8006070:	230a      	movne	r3, #10
 8006072:	4851      	ldr	r0, [pc, #324]	; (80061b8 <_printf_i+0x23c>)
 8006074:	2100      	movs	r1, #0
 8006076:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800607a:	6865      	ldr	r5, [r4, #4]
 800607c:	2d00      	cmp	r5, #0
 800607e:	bfa8      	it	ge
 8006080:	6821      	ldrge	r1, [r4, #0]
 8006082:	60a5      	str	r5, [r4, #8]
 8006084:	bfa4      	itt	ge
 8006086:	f021 0104 	bicge.w	r1, r1, #4
 800608a:	6021      	strge	r1, [r4, #0]
 800608c:	b90e      	cbnz	r6, 8006092 <_printf_i+0x116>
 800608e:	2d00      	cmp	r5, #0
 8006090:	d04b      	beq.n	800612a <_printf_i+0x1ae>
 8006092:	4615      	mov	r5, r2
 8006094:	fbb6 f1f3 	udiv	r1, r6, r3
 8006098:	fb03 6711 	mls	r7, r3, r1, r6
 800609c:	5dc7      	ldrb	r7, [r0, r7]
 800609e:	f805 7d01 	strb.w	r7, [r5, #-1]!
 80060a2:	4637      	mov	r7, r6
 80060a4:	42bb      	cmp	r3, r7
 80060a6:	460e      	mov	r6, r1
 80060a8:	d9f4      	bls.n	8006094 <_printf_i+0x118>
 80060aa:	2b08      	cmp	r3, #8
 80060ac:	d10b      	bne.n	80060c6 <_printf_i+0x14a>
 80060ae:	6823      	ldr	r3, [r4, #0]
 80060b0:	07de      	lsls	r6, r3, #31
 80060b2:	d508      	bpl.n	80060c6 <_printf_i+0x14a>
 80060b4:	6923      	ldr	r3, [r4, #16]
 80060b6:	6861      	ldr	r1, [r4, #4]
 80060b8:	4299      	cmp	r1, r3
 80060ba:	bfde      	ittt	le
 80060bc:	2330      	movle	r3, #48	; 0x30
 80060be:	f805 3c01 	strble.w	r3, [r5, #-1]
 80060c2:	f105 35ff 	addle.w	r5, r5, #4294967295
 80060c6:	1b52      	subs	r2, r2, r5
 80060c8:	6122      	str	r2, [r4, #16]
 80060ca:	464b      	mov	r3, r9
 80060cc:	4621      	mov	r1, r4
 80060ce:	4640      	mov	r0, r8
 80060d0:	f8cd a000 	str.w	sl, [sp]
 80060d4:	aa03      	add	r2, sp, #12
 80060d6:	f7ff fedf 	bl	8005e98 <_printf_common>
 80060da:	3001      	adds	r0, #1
 80060dc:	d14a      	bne.n	8006174 <_printf_i+0x1f8>
 80060de:	f04f 30ff 	mov.w	r0, #4294967295
 80060e2:	b004      	add	sp, #16
 80060e4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80060e8:	6823      	ldr	r3, [r4, #0]
 80060ea:	f043 0320 	orr.w	r3, r3, #32
 80060ee:	6023      	str	r3, [r4, #0]
 80060f0:	2778      	movs	r7, #120	; 0x78
 80060f2:	4832      	ldr	r0, [pc, #200]	; (80061bc <_printf_i+0x240>)
 80060f4:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 80060f8:	6823      	ldr	r3, [r4, #0]
 80060fa:	6829      	ldr	r1, [r5, #0]
 80060fc:	061f      	lsls	r7, r3, #24
 80060fe:	f851 6b04 	ldr.w	r6, [r1], #4
 8006102:	d402      	bmi.n	800610a <_printf_i+0x18e>
 8006104:	065f      	lsls	r7, r3, #25
 8006106:	bf48      	it	mi
 8006108:	b2b6      	uxthmi	r6, r6
 800610a:	07df      	lsls	r7, r3, #31
 800610c:	bf48      	it	mi
 800610e:	f043 0320 	orrmi.w	r3, r3, #32
 8006112:	6029      	str	r1, [r5, #0]
 8006114:	bf48      	it	mi
 8006116:	6023      	strmi	r3, [r4, #0]
 8006118:	b91e      	cbnz	r6, 8006122 <_printf_i+0x1a6>
 800611a:	6823      	ldr	r3, [r4, #0]
 800611c:	f023 0320 	bic.w	r3, r3, #32
 8006120:	6023      	str	r3, [r4, #0]
 8006122:	2310      	movs	r3, #16
 8006124:	e7a6      	b.n	8006074 <_printf_i+0xf8>
 8006126:	4824      	ldr	r0, [pc, #144]	; (80061b8 <_printf_i+0x23c>)
 8006128:	e7e4      	b.n	80060f4 <_printf_i+0x178>
 800612a:	4615      	mov	r5, r2
 800612c:	e7bd      	b.n	80060aa <_printf_i+0x12e>
 800612e:	682b      	ldr	r3, [r5, #0]
 8006130:	6826      	ldr	r6, [r4, #0]
 8006132:	1d18      	adds	r0, r3, #4
 8006134:	6961      	ldr	r1, [r4, #20]
 8006136:	6028      	str	r0, [r5, #0]
 8006138:	0635      	lsls	r5, r6, #24
 800613a:	681b      	ldr	r3, [r3, #0]
 800613c:	d501      	bpl.n	8006142 <_printf_i+0x1c6>
 800613e:	6019      	str	r1, [r3, #0]
 8006140:	e002      	b.n	8006148 <_printf_i+0x1cc>
 8006142:	0670      	lsls	r0, r6, #25
 8006144:	d5fb      	bpl.n	800613e <_printf_i+0x1c2>
 8006146:	8019      	strh	r1, [r3, #0]
 8006148:	2300      	movs	r3, #0
 800614a:	4615      	mov	r5, r2
 800614c:	6123      	str	r3, [r4, #16]
 800614e:	e7bc      	b.n	80060ca <_printf_i+0x14e>
 8006150:	682b      	ldr	r3, [r5, #0]
 8006152:	2100      	movs	r1, #0
 8006154:	1d1a      	adds	r2, r3, #4
 8006156:	602a      	str	r2, [r5, #0]
 8006158:	681d      	ldr	r5, [r3, #0]
 800615a:	6862      	ldr	r2, [r4, #4]
 800615c:	4628      	mov	r0, r5
 800615e:	f000 f859 	bl	8006214 <memchr>
 8006162:	b108      	cbz	r0, 8006168 <_printf_i+0x1ec>
 8006164:	1b40      	subs	r0, r0, r5
 8006166:	6060      	str	r0, [r4, #4]
 8006168:	6863      	ldr	r3, [r4, #4]
 800616a:	6123      	str	r3, [r4, #16]
 800616c:	2300      	movs	r3, #0
 800616e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8006172:	e7aa      	b.n	80060ca <_printf_i+0x14e>
 8006174:	462a      	mov	r2, r5
 8006176:	4649      	mov	r1, r9
 8006178:	4640      	mov	r0, r8
 800617a:	6923      	ldr	r3, [r4, #16]
 800617c:	47d0      	blx	sl
 800617e:	3001      	adds	r0, #1
 8006180:	d0ad      	beq.n	80060de <_printf_i+0x162>
 8006182:	6823      	ldr	r3, [r4, #0]
 8006184:	079b      	lsls	r3, r3, #30
 8006186:	d413      	bmi.n	80061b0 <_printf_i+0x234>
 8006188:	68e0      	ldr	r0, [r4, #12]
 800618a:	9b03      	ldr	r3, [sp, #12]
 800618c:	4298      	cmp	r0, r3
 800618e:	bfb8      	it	lt
 8006190:	4618      	movlt	r0, r3
 8006192:	e7a6      	b.n	80060e2 <_printf_i+0x166>
 8006194:	2301      	movs	r3, #1
 8006196:	4632      	mov	r2, r6
 8006198:	4649      	mov	r1, r9
 800619a:	4640      	mov	r0, r8
 800619c:	47d0      	blx	sl
 800619e:	3001      	adds	r0, #1
 80061a0:	d09d      	beq.n	80060de <_printf_i+0x162>
 80061a2:	3501      	adds	r5, #1
 80061a4:	68e3      	ldr	r3, [r4, #12]
 80061a6:	9903      	ldr	r1, [sp, #12]
 80061a8:	1a5b      	subs	r3, r3, r1
 80061aa:	42ab      	cmp	r3, r5
 80061ac:	dcf2      	bgt.n	8006194 <_printf_i+0x218>
 80061ae:	e7eb      	b.n	8006188 <_printf_i+0x20c>
 80061b0:	2500      	movs	r5, #0
 80061b2:	f104 0619 	add.w	r6, r4, #25
 80061b6:	e7f5      	b.n	80061a4 <_printf_i+0x228>
 80061b8:	080063df 	.word	0x080063df
 80061bc:	080063f0 	.word	0x080063f0

080061c0 <memmove>:
 80061c0:	4288      	cmp	r0, r1
 80061c2:	b510      	push	{r4, lr}
 80061c4:	eb01 0402 	add.w	r4, r1, r2
 80061c8:	d902      	bls.n	80061d0 <memmove+0x10>
 80061ca:	4284      	cmp	r4, r0
 80061cc:	4623      	mov	r3, r4
 80061ce:	d807      	bhi.n	80061e0 <memmove+0x20>
 80061d0:	1e43      	subs	r3, r0, #1
 80061d2:	42a1      	cmp	r1, r4
 80061d4:	d008      	beq.n	80061e8 <memmove+0x28>
 80061d6:	f811 2b01 	ldrb.w	r2, [r1], #1
 80061da:	f803 2f01 	strb.w	r2, [r3, #1]!
 80061de:	e7f8      	b.n	80061d2 <memmove+0x12>
 80061e0:	4601      	mov	r1, r0
 80061e2:	4402      	add	r2, r0
 80061e4:	428a      	cmp	r2, r1
 80061e6:	d100      	bne.n	80061ea <memmove+0x2a>
 80061e8:	bd10      	pop	{r4, pc}
 80061ea:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80061ee:	f802 4d01 	strb.w	r4, [r2, #-1]!
 80061f2:	e7f7      	b.n	80061e4 <memmove+0x24>

080061f4 <_sbrk_r>:
 80061f4:	b538      	push	{r3, r4, r5, lr}
 80061f6:	2300      	movs	r3, #0
 80061f8:	4d05      	ldr	r5, [pc, #20]	; (8006210 <_sbrk_r+0x1c>)
 80061fa:	4604      	mov	r4, r0
 80061fc:	4608      	mov	r0, r1
 80061fe:	602b      	str	r3, [r5, #0]
 8006200:	f7fb ff98 	bl	8002134 <_sbrk>
 8006204:	1c43      	adds	r3, r0, #1
 8006206:	d102      	bne.n	800620e <_sbrk_r+0x1a>
 8006208:	682b      	ldr	r3, [r5, #0]
 800620a:	b103      	cbz	r3, 800620e <_sbrk_r+0x1a>
 800620c:	6023      	str	r3, [r4, #0]
 800620e:	bd38      	pop	{r3, r4, r5, pc}
 8006210:	200014d4 	.word	0x200014d4

08006214 <memchr>:
 8006214:	4603      	mov	r3, r0
 8006216:	b510      	push	{r4, lr}
 8006218:	b2c9      	uxtb	r1, r1
 800621a:	4402      	add	r2, r0
 800621c:	4293      	cmp	r3, r2
 800621e:	4618      	mov	r0, r3
 8006220:	d101      	bne.n	8006226 <memchr+0x12>
 8006222:	2000      	movs	r0, #0
 8006224:	e003      	b.n	800622e <memchr+0x1a>
 8006226:	7804      	ldrb	r4, [r0, #0]
 8006228:	3301      	adds	r3, #1
 800622a:	428c      	cmp	r4, r1
 800622c:	d1f6      	bne.n	800621c <memchr+0x8>
 800622e:	bd10      	pop	{r4, pc}

08006230 <memcpy>:
 8006230:	440a      	add	r2, r1
 8006232:	4291      	cmp	r1, r2
 8006234:	f100 33ff 	add.w	r3, r0, #4294967295
 8006238:	d100      	bne.n	800623c <memcpy+0xc>
 800623a:	4770      	bx	lr
 800623c:	b510      	push	{r4, lr}
 800623e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8006242:	4291      	cmp	r1, r2
 8006244:	f803 4f01 	strb.w	r4, [r3, #1]!
 8006248:	d1f9      	bne.n	800623e <memcpy+0xe>
 800624a:	bd10      	pop	{r4, pc}

0800624c <_realloc_r>:
 800624c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006250:	4680      	mov	r8, r0
 8006252:	4614      	mov	r4, r2
 8006254:	460e      	mov	r6, r1
 8006256:	b921      	cbnz	r1, 8006262 <_realloc_r+0x16>
 8006258:	4611      	mov	r1, r2
 800625a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800625e:	f7ff bc37 	b.w	8005ad0 <_malloc_r>
 8006262:	b92a      	cbnz	r2, 8006270 <_realloc_r+0x24>
 8006264:	f7ff fbcc 	bl	8005a00 <_free_r>
 8006268:	4625      	mov	r5, r4
 800626a:	4628      	mov	r0, r5
 800626c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006270:	f000 f81b 	bl	80062aa <_malloc_usable_size_r>
 8006274:	4284      	cmp	r4, r0
 8006276:	4607      	mov	r7, r0
 8006278:	d802      	bhi.n	8006280 <_realloc_r+0x34>
 800627a:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 800627e:	d812      	bhi.n	80062a6 <_realloc_r+0x5a>
 8006280:	4621      	mov	r1, r4
 8006282:	4640      	mov	r0, r8
 8006284:	f7ff fc24 	bl	8005ad0 <_malloc_r>
 8006288:	4605      	mov	r5, r0
 800628a:	2800      	cmp	r0, #0
 800628c:	d0ed      	beq.n	800626a <_realloc_r+0x1e>
 800628e:	42bc      	cmp	r4, r7
 8006290:	4622      	mov	r2, r4
 8006292:	4631      	mov	r1, r6
 8006294:	bf28      	it	cs
 8006296:	463a      	movcs	r2, r7
 8006298:	f7ff ffca 	bl	8006230 <memcpy>
 800629c:	4631      	mov	r1, r6
 800629e:	4640      	mov	r0, r8
 80062a0:	f7ff fbae 	bl	8005a00 <_free_r>
 80062a4:	e7e1      	b.n	800626a <_realloc_r+0x1e>
 80062a6:	4635      	mov	r5, r6
 80062a8:	e7df      	b.n	800626a <_realloc_r+0x1e>

080062aa <_malloc_usable_size_r>:
 80062aa:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80062ae:	1f18      	subs	r0, r3, #4
 80062b0:	2b00      	cmp	r3, #0
 80062b2:	bfbc      	itt	lt
 80062b4:	580b      	ldrlt	r3, [r1, r0]
 80062b6:	18c0      	addlt	r0, r0, r3
 80062b8:	4770      	bx	lr
	...

080062bc <round>:
 80062bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80062be:	f3c1 570a 	ubfx	r7, r1, #20, #11
 80062c2:	f2a7 32ff 	subw	r2, r7, #1023	; 0x3ff
 80062c6:	2a13      	cmp	r2, #19
 80062c8:	460b      	mov	r3, r1
 80062ca:	4605      	mov	r5, r0
 80062cc:	460c      	mov	r4, r1
 80062ce:	dc18      	bgt.n	8006302 <round+0x46>
 80062d0:	2a00      	cmp	r2, #0
 80062d2:	da09      	bge.n	80062e8 <round+0x2c>
 80062d4:	3201      	adds	r2, #1
 80062d6:	f001 4300 	and.w	r3, r1, #2147483648	; 0x80000000
 80062da:	d103      	bne.n	80062e4 <round+0x28>
 80062dc:	f043 537f 	orr.w	r3, r3, #1069547520	; 0x3fc00000
 80062e0:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 80062e4:	2200      	movs	r2, #0
 80062e6:	e029      	b.n	800633c <round+0x80>
 80062e8:	4816      	ldr	r0, [pc, #88]	; (8006344 <round+0x88>)
 80062ea:	4110      	asrs	r0, r2
 80062ec:	4001      	ands	r1, r0
 80062ee:	4329      	orrs	r1, r5
 80062f0:	d011      	beq.n	8006316 <round+0x5a>
 80062f2:	f44f 2100 	mov.w	r1, #524288	; 0x80000
 80062f6:	fa41 f202 	asr.w	r2, r1, r2
 80062fa:	4413      	add	r3, r2
 80062fc:	ea23 0300 	bic.w	r3, r3, r0
 8006300:	e7f0      	b.n	80062e4 <round+0x28>
 8006302:	2a33      	cmp	r2, #51	; 0x33
 8006304:	dd0a      	ble.n	800631c <round+0x60>
 8006306:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800630a:	d104      	bne.n	8006316 <round+0x5a>
 800630c:	4602      	mov	r2, r0
 800630e:	f7f9 ff23 	bl	8000158 <__adddf3>
 8006312:	4605      	mov	r5, r0
 8006314:	460c      	mov	r4, r1
 8006316:	4628      	mov	r0, r5
 8006318:	4621      	mov	r1, r4
 800631a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800631c:	f04f 30ff 	mov.w	r0, #4294967295
 8006320:	f2a7 4713 	subw	r7, r7, #1043	; 0x413
 8006324:	40f8      	lsrs	r0, r7
 8006326:	4228      	tst	r0, r5
 8006328:	d0f5      	beq.n	8006316 <round+0x5a>
 800632a:	f1c2 0133 	rsb	r1, r2, #51	; 0x33
 800632e:	2201      	movs	r2, #1
 8006330:	408a      	lsls	r2, r1
 8006332:	1952      	adds	r2, r2, r5
 8006334:	bf28      	it	cs
 8006336:	3301      	addcs	r3, #1
 8006338:	ea22 0200 	bic.w	r2, r2, r0
 800633c:	4619      	mov	r1, r3
 800633e:	4610      	mov	r0, r2
 8006340:	e7e7      	b.n	8006312 <round+0x56>
 8006342:	bf00      	nop
 8006344:	000fffff 	.word	0x000fffff

08006348 <_init>:
 8006348:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800634a:	bf00      	nop
 800634c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800634e:	bc08      	pop	{r3}
 8006350:	469e      	mov	lr, r3
 8006352:	4770      	bx	lr

08006354 <_fini>:
 8006354:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006356:	bf00      	nop
 8006358:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800635a:	bc08      	pop	{r3}
 800635c:	469e      	mov	lr, r3
 800635e:	4770      	bx	lr
